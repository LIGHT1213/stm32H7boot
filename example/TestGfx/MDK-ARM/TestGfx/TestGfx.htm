<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [TestGfx\TestGfx.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image TestGfx\TestGfx.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6150002: Last Updated: Sat May 29 22:37:47 2021
<BR><P>
<H3>Maximum Stack Usage =       1464 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
touchgfx::GraphElementDots::drawCanvasWidget(touchgfx::Rect const&) const &rArr; touchgfx::Canvas::~Canvas() &rArr; __clang_call_terminate &rArr; __cxa_begin_catch &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[658]">__user_initial_stackheap</a>
 <LI><a href="#[660]">__unw_getcontext</a>
 <LI><a href="#[923]">unw_getcontext</a>
 <LI><a href="#[7de]">libunwind::Registers_arm::saveVFPWithFSTMD(void*)</a>
 <LI><a href="#[7dc]">libunwind::Registers_arm::saveVFPWithFSTMX(void*)</a>
 <LI><a href="#[7dd]">libunwind::Registers_arm::saveVFPv3(void*)</a>
 <LI><a href="#[7e4]">libunwind::Registers_arm::restoreCoreAndJumpTo()</a>
 <LI><a href="#[7e6]">libunwind::Registers_arm::restoreVFPWithFLDMD(void*)</a>
 <LI><a href="#[7e5]">libunwind::Registers_arm::restoreVFPWithFLDMX(void*)</a>
 <LI><a href="#[7e7]">libunwind::Registers_arm::restoreVFPv3(void*)</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[84]">ADC3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[84]">ADC3_IRQHandler</a><BR>
 <LI><a href="#[75e]">touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[75e]">touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&)</a><BR>
 <LI><a href="#[709]">touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[709]">touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&)</a><BR>
 <LI><a href="#[755]">touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[755]">touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)</a><BR>
 <LI><a href="#[1]">std::terminate()</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[751]">__clang_call_terminate</a><BR>
 <LI><a href="#[67b]">std::__terminate(void (*)())</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[67a]">__cxa_begin_catch</a><BR>
 <LI><a href="#[809]">__cxa_call_unexpected</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[67a]">__cxa_begin_catch</a><BR>
 <LI><a href="#[679]">__cxxabiv1::failed_throw(__cxxabiv1::__cxa_exception*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[67a]">__cxa_begin_catch</a><BR>
 <LI><a href="#[808]">__cxa_allocate_exception</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">std::terminate()</a><BR>
 <LI><a href="#[677]">__cxxabiv1::call_terminate(bool, _Unwind_Control_Block*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[67a]">__cxa_begin_catch</a><BR>
 <LI><a href="#[80f]">__cxa_rethrow</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[67a]">__cxa_begin_catch</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[84]">ADC3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[1e]">ADC_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[86]">BDMA_Channel0_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[87]">BDMA_Channel1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[88]">BDMA_Channel2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[89]">BDMA_Channel3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[8a]">BDMA_Channel4_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[8b]">BDMA_Channel5_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[8c]">BDMA_Channel6_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[8d]">BDMA_Channel7_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[6]">BusFault_Handler</a> from stm32h7xx_it.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[65]">CEC_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[8e]">COMP1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[94]">CRS_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[56]">CRYP_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[55]">DCMI_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[75]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[76]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[77]">DFSDM1_FLT2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[78]">DFSDM1_FLT3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream0_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream4_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[1c]">DMA1_Stream5_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[1d]">DMA1_Stream6_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[3a]">DMA1_Stream7_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[61]">DMA2D_IRQHandler</a> from stm32h7xx_it.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[43]">DMA2_Stream0_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[44]">DMA2_Stream1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[46]">DMA2_Stream3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[47]">DMA2_Stream4_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[4b]">DMA2_Stream5_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[4c]">DMA2_Stream6_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[4d]">DMA2_Stream7_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[6d]">DMAMUX1_OVR_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[85]">DMAMUX2_OVR_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[9]">DebugMon_Handler</a> from stm32h7xx_it.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[95]">ECC_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[48]">ETH_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[49]">ETH_WKUP_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[12]">EXTI0_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[34]">EXTI15_10_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[13]">EXTI1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[14]">EXTI2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[15]">EXTI3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[16]">EXTI4_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[23]">EXTI9_5_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[1f]">FDCAN1_IT0_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[21]">FDCAN1_IT1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[20]">FDCAN2_IT0_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[22]">FDCAN2_IT1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[4a]">FDCAN_CAL_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[10]">FLASH_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[3b]">FMC_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[58]">FPU_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[9a]">GuiShowTask</a> from freertos.o(.text) referenced 2 times from freertos.o(.text)
 <LI><a href="#[57]">HASH_RNG_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[74]">HRTIM1_FLT_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[6e]">HRTIM1_Master_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[6f]">HRTIM1_TIMA_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[70]">HRTIM1_TIMB_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[71]">HRTIM1_TIMC_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[72]">HRTIM1_TIMD_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[73]">HRTIM1_TIME_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[83]">HSEM1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[4]">HardFault_Handler</a> from stm32h7xx_it.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[2c]">I2C1_ER_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[2b]">I2C1_EV_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[2e]">I2C2_ER_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[2d]">I2C2_EV_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[50]">I2C3_ER_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[4f]">I2C3_EV_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[67]">I2C4_ER_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[66]">I2C4_EV_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[80]">JPEG_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[64]">LPTIM1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[8f]">LPTIM2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[90]">LPTIM3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[91]">LPTIM4_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[92]">LPTIM5_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[93]">LPUART1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[60]">LTDC_ER_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[5f]">LTDC_IRQHandler</a> from stm32h7xx_it.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[7f]">MDIOS_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[7e]">MDIOS_WKUP_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[81]">MDMA_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[5]">MemManage_Handler</a> from stm32h7xx_it.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[3]">NMI_Handler</a> from stm32h7xx_it.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[6a]">OTG_FS_EP1_IN_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[69]">OTG_FS_EP1_OUT_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[6c]">OTG_FS_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[6b]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[52]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[51]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[54]">OTG_HS_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[53]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[d]">PVD_AVD_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from port.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[63]">QUADSPI_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[11]">RCC_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[35]">RTC_Alarm_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[f]">RTC_WKUP_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[2]">Reset_Handler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[5e]">SAI1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[62]">SAI2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[79]">SAI3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[96]">SAI4_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[3c]">SDMMC1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[82]">SDMMC2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[68]">SPDIF_RX_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[2f]">SPI1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[30]">SPI2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[3e]">SPI3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[5b]">SPI4_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[5c]">SPI5_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[5d]">SPI6_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from port.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[7a]">SWPMI1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from port.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[98]">SystemInit</a> from system_stm32h7xx.o(.text) referenced from startup_stm32h750xx.o(.text)
 <LI><a href="#[e]">TAMP_STAMP_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[7b]">TIM15_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[7c]">TIM16_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[7d]">TIM17_IRQHandler</a> from stm32h7xx_it.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[24]">TIM1_BRK_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[27]">TIM1_CC_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[26]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[25]">TIM1_UP_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[28]">TIM2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[29]">TIM3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[2a]">TIM4_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[3d]">TIM5_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[41]">TIM6_DAC_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[42]">TIM7_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[36]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[39]">TIM8_CC_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[38]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[37]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[a4]">TIMEx_DMACommutationCplt</a> from stm32h7xx_hal_tim_ex.o(.text) referenced 6 times from stm32h7xx_hal_tim.o(.text)
 <LI><a href="#[a5]">TIMEx_DMACommutationHalfCplt</a> from stm32h7xx_hal_tim_ex.o(.text) referenced 6 times from stm32h7xx_hal_tim.o(.text)
 <LI><a href="#[a2]">TIM_DMACaptureCplt</a> from stm32h7xx_hal_tim.o(.text) referenced 26 times from stm32h7xx_hal_tim.o(.text)
 <LI><a href="#[a3]">TIM_DMACaptureHalfCplt</a> from stm32h7xx_hal_tim.o(.text) referenced 26 times from stm32h7xx_hal_tim.o(.text)
 <LI><a href="#[a0]">TIM_DMADelayPulseCplt</a> from stm32h7xx_hal_tim.o(.text) referenced 24 times from stm32h7xx_hal_tim.o(.text)
 <LI><a href="#[a1]">TIM_DMADelayPulseHalfCplt</a> from stm32h7xx_hal_tim.o(.text) referenced 36 times from stm32h7xx_hal_tim.o(.text)
 <LI><a href="#[a8]">TIM_DMADelayPulseNCplt</a> from stm32h7xx_hal_tim_ex.o(.text) referenced 12 times from stm32h7xx_hal_tim_ex.o(.text)
 <LI><a href="#[9f]">TIM_DMAError</a> from stm32h7xx_hal_tim.o(.text) referenced 66 times from stm32h7xx_hal_tim.o(.text)
 <LI><a href="#[a9]">TIM_DMAErrorCCxN</a> from stm32h7xx_hal_tim_ex.o(.text) referenced 12 times from stm32h7xx_hal_tim_ex.o(.text)
 <LI><a href="#[9d]">TIM_DMAPeriodElapsedCplt</a> from stm32h7xx_hal_tim.o(.text) referenced 6 times from stm32h7xx_hal_tim.o(.text)
 <LI><a href="#[9e]">TIM_DMAPeriodElapsedHalfCplt</a> from stm32h7xx_hal_tim.o(.text) referenced 6 times from stm32h7xx_hal_tim.o(.text)
 <LI><a href="#[a6]">TIM_DMATriggerCplt</a> from stm32h7xx_hal_tim.o(.text) referenced 4 times from stm32h7xx_hal_tim.o(.text)
 <LI><a href="#[a7]">TIM_DMATriggerHalfCplt</a> from stm32h7xx_hal_tim.o(.text) referenced 4 times from stm32h7xx_hal_tim.o(.text)
 <LI><a href="#[cc]">TimerCallback</a> from cmsis_os2.o(.text) referenced 4 times from cmsis_os2.o(.text)
 <LI><a href="#[9c]">TouchTask</a> from freertos.o(.text) referenced 2 times from freertos.o(.text)
 <LI><a href="#[3f]">UART4_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[40]">UART5_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[59]">UART7_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[5a]">UART8_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[bb]">UART_DMAAbortOnError</a> from stm32h7xx_hal_uart.o(.text) referenced 2 times from stm32h7xx_hal_uart.o(.text)
 <LI><a href="#[b4]">UART_DMAError</a> from stm32h7xx_hal_uart.o(.text) referenced 4 times from stm32h7xx_hal_uart.o(.text)
 <LI><a href="#[b5]">UART_DMAReceiveCplt</a> from stm32h7xx_hal_uart.o(.text) referenced 2 times from stm32h7xx_hal_uart.o(.text)
 <LI><a href="#[b8]">UART_DMARxAbortCallback</a> from stm32h7xx_hal_uart.o(.text) referenced 2 times from stm32h7xx_hal_uart.o(.text)
 <LI><a href="#[b6]">UART_DMARxHalfCplt</a> from stm32h7xx_hal_uart.o(.text) referenced 2 times from stm32h7xx_hal_uart.o(.text)
 <LI><a href="#[ba]">UART_DMARxOnlyAbortCallback</a> from stm32h7xx_hal_uart.o(.text) referenced 2 times from stm32h7xx_hal_uart.o(.text)
 <LI><a href="#[b2]">UART_DMATransmitCplt</a> from stm32h7xx_hal_uart.o(.text) referenced 2 times from stm32h7xx_hal_uart.o(.text)
 <LI><a href="#[b7]">UART_DMATxAbortCallback</a> from stm32h7xx_hal_uart.o(.text) referenced 2 times from stm32h7xx_hal_uart.o(.text)
 <LI><a href="#[b3]">UART_DMATxHalfCplt</a> from stm32h7xx_hal_uart.o(.text) referenced 2 times from stm32h7xx_hal_uart.o(.text)
 <LI><a href="#[b9]">UART_DMATxOnlyAbortCallback</a> from stm32h7xx_hal_uart.o(.text) referenced 2 times from stm32h7xx_hal_uart.o(.text)
 <LI><a href="#[b0]">UART_RxISR_16BIT</a> from stm32h7xx_hal_uart.o(.text) referenced 4 times from stm32h7xx_hal_uart.o(.text)
 <LI><a href="#[ae]">UART_RxISR_16BIT_FIFOEN</a> from stm32h7xx_hal_uart.o(.text) referenced 2 times from stm32h7xx_hal_uart.o(.text)
 <LI><a href="#[b1]">UART_RxISR_8BIT</a> from stm32h7xx_hal_uart.o(.text) referenced 4 times from stm32h7xx_hal_uart.o(.text)
 <LI><a href="#[af]">UART_RxISR_8BIT_FIFOEN</a> from stm32h7xx_hal_uart.o(.text) referenced 2 times from stm32h7xx_hal_uart.o(.text)
 <LI><a href="#[ac]">UART_TxISR_16BIT</a> from stm32h7xx_hal_uart.o(.text) referenced 2 times from stm32h7xx_hal_uart.o(.text)
 <LI><a href="#[aa]">UART_TxISR_16BIT_FIFOEN</a> from stm32h7xx_hal_uart.o(.text) referenced 2 times from stm32h7xx_hal_uart.o(.text)
 <LI><a href="#[ad]">UART_TxISR_8BIT</a> from stm32h7xx_hal_uart.o(.text) referenced 2 times from stm32h7xx_hal_uart.o(.text)
 <LI><a href="#[ab]">UART_TxISR_8BIT_FIFOEN</a> from stm32h7xx_hal_uart.o(.text) referenced 2 times from stm32h7xx_hal_uart.o(.text)
 <LI><a href="#[31]">USART1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[32]">USART2_IRQHandler</a> from stm32h7xx_it.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[33]">USART3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[4e]">USART6_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[9b]">UpdateTask</a> from freertos.o(.text) referenced 2 times from freertos.o(.text)
 <LI><a href="#[7]">UsageFault_Handler</a> from stm32h7xx_it.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[97]">WAKEUP_PIN_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[c]">WWDG_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[34a]">_GLOBAL__sub_I_TouchGFXConfiguration.cpp</a> from touchgfxconfiguration.o(.text) referenced from touchgfxconfiguration.o(.init_array)
 <LI><a href="#[34b]">_GLOBAL__sub_I_typedtextdatabase.cpp</a> from typedtextdatabase.o(.text) referenced from typedtextdatabase.o(.init_array)
 <LI><a href="#[c1]">DMA2D_XferCpltCallback(__DMA2D_HandleTypeDef*)</a> from stm32dma.o(.text) referenced 2 times from stm32dma.o(.text)
 <LI><a href="#[e9]">STM32H7DMA::getDMAType()</a> from stm32dma.o(.text._ZN10STM32H7DMA10getDMATypeEv) referenced from stm32dma.o(.rodata._ZTV10STM32H7DMA)
 <LI><a href="#[e6]">STM32H7DMA::initialize()</a> from stm32dma.o(.text) referenced from stm32dma.o(.rodata._ZTV10STM32H7DMA)
 <LI><a href="#[e3]">STM32H7DMA::getBlitCaps()</a> from stm32dma.o(.text) referenced from stm32dma.o(.rodata._ZTV10STM32H7DMA)
 <LI><a href="#[ee]">STM32H7DMA::setupDataCopy(touchgfx::BlitOp const&)</a> from stm32dma.o(.text) referenced from stm32dma.o(.rodata._ZTV10STM32H7DMA)
 <LI><a href="#[ef]">STM32H7DMA::setupDataFill(touchgfx::BlitOp const&)</a> from stm32dma.o(.text) referenced from stm32dma.o(.rodata._ZTV10STM32H7DMA)
 <LI><a href="#[e8]">STM32H7DMA::signalDMAInterrupt()</a> from stm32dma.o(.text._ZN10STM32H7DMA18signalDMAInterruptEv) referenced from stm32dma.o(.rodata._ZTV10STM32H7DMA)
 <LI><a href="#[ea]">STM32H7DMA::~STM32H7DMA__deallocating()</a> from stm32dma.o(.text) referenced from stm32dma.o(.rodata._ZTV10STM32H7DMA)
 <LI><a href="#[bd]">STM32H7DMA::~STM32H7DMA()</a> from stm32dma.o(.text) referenced from stm32dma.o(.rodata._ZTV10STM32H7DMA)
 <LI><a href="#[bd]">STM32H7DMA::~STM32H7DMA()</a> from stm32dma.o(.text) referenced 2 times from touchgfxconfiguration.o(.text)
 <LI><a href="#[173]">__cxxabiv1::__shim_type_info::~__shim_type_info__sub_object()</a> from private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
 <LI><a href="#[173]">__cxxabiv1::__shim_type_info::~__shim_type_info__sub_object()</a> from private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
 <LI><a href="#[174]">__cxxabiv1::__class_type_info::~__class_type_info__deallocating()</a> from private_typeinfo.cpp.o(.text._ZN10__cxxabiv117__class_type_infoD0Ev) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
 <LI><a href="#[17b]">__cxxabiv1::__si_class_type_info::~__si_class_type_info__deallocating()</a> from private_typeinfo.cpp.o(.text._ZN10__cxxabiv120__si_class_type_infoD0Ev) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
 <LI><a href="#[e1]">__cxxabiv1::exception_cleanup_func(_Unwind_Reason_Code, _Unwind_Control_Block*)</a> from cxa_exception.cpp.o(.text._ZN10__cxxabiv1L22exception_cleanup_funcE19_Unwind_Reason_CodeP21_Unwind_Control_Block) referenced 2 times from cxa_exception.cpp.o(.text.__cxa_throw)
 <LI><a href="#[f7]">screenView::setupScreen()</a> from screenview.o(.text) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[f9]">screenView::tearDownScreen()</a> from screenview.o(.text) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[f5]">screenView::~screenView__deallocating()</a> from screenview.o(.text._ZN10screenViewD0Ev) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[f4]">screenView::~screenView__sub_object()</a> from screenview.o(.text._ZN10screenViewD2Ev) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[101]">Screen1View::setupScreen()</a> from screen1view.o(.text) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[102]">Screen1View::tearDownScreen()</a> from screen1view.o(.text) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[100]">Screen1View::~Screen1View__deallocating()</a> from screen1view.o(.text._ZN11Screen1ViewD0Ev) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[ff]">Screen1View::~Screen1View__sub_object()</a> from screen1view.o(.text._ZN11Screen1ViewD2Ev) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[11a]">TouchGFXHAL::enableInterrupts()</a> from touchgfxhal.o(.text) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[107]">TouchGFXHAL::flushFrameBuffer(touchgfx::Rect const&)</a> from touchgfxhal.o(.text) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[106]">TouchGFXHAL::flushFrameBuffer()</a> from touchgfxhal.o(.text._ZN11TouchGFXHAL16flushFrameBufferEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[11b]">TouchGFXHAL::disableInterrupts()</a> from touchgfxhal.o(.text) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[129]">TouchGFXHAL::setTFTFrameBuffer(unsigned short*)</a> from touchgfxhal.o(.text) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[119]">TouchGFXHAL::configureInterrupts()</a> from touchgfxhal.o(.text) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[11c]">TouchGFXHAL::enableLCDControllerInterrupt()</a> from touchgfxhal.o(.text) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[10d]">TouchGFXHAL::blockCopy(void*, void const*, unsigned int)</a> from touchgfxhal.o(.text) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[103]">TouchGFXHAL::~TouchGFXHAL__deallocating()</a> from touchgfxhal.o(.text._ZN11TouchGFXHALD0Ev) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c0]">TouchGFXHAL::~TouchGFXHAL__sub_object()</a> from touchgfxhal.o(.text._ZN11TouchGFXHALD2Ev) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[c0]">TouchGFXHAL::~TouchGFXHAL__sub_object()</a> from touchgfxhal.o(.text._ZN11TouchGFXHALD2Ev) referenced 2 times from touchgfxconfiguration.o(.text)
 <LI><a href="#[12f]">FrontendHeap::~FrontendHeap__deallocating()</a> from touchgfxconfiguration.o(.text._ZN12FrontendHeapD0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
 <LI><a href="#[ce]">FrontendHeap::~FrontendHeap__sub_object()</a> from touchgfxconfiguration.o(.text._ZN12FrontendHeapD2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
 <LI><a href="#[ce]">FrontendHeap::~FrontendHeap__sub_object()</a> from touchgfxconfiguration.o(.text._ZN12FrontendHeapD2Ev) referenced 2 times from touchgfxconfiguration.o(.text._ZN12FrontendHeap11getInstanceEv)
 <LI><a href="#[135]">ModelListener::UpDateTemNum(int)</a> from screen1presenter.o(.text._ZN13ModelListener12UpDateTemNumEi) referenced from screen1presenter.o(.rodata._ZTV13ModelListener)
 <LI><a href="#[135]">ModelListener::UpDateTemNum(int)</a> from screen1presenter.o(.text._ZN13ModelListener12UpDateTemNumEi) referenced from screen1presenter.o(.rodata._ZTV16Screen1Presenter)
 <LI><a href="#[134]">ModelListener::UpDateHeartNum(int)</a> from screen1presenter.o(.text._ZN13ModelListener14UpDateHeartNumEi) referenced from screen1presenter.o(.rodata._ZTV13ModelListener)
 <LI><a href="#[134]">ModelListener::UpDateHeartNum(int)</a> from screen1presenter.o(.text._ZN13ModelListener14UpDateHeartNumEi) referenced from screen1presenter.o(.rodata._ZTV16Screen1Presenter)
 <LI><a href="#[133]">ModelListener::UpDateHeartRateLine(int)</a> from screen1presenter.o(.text._ZN13ModelListener19UpDateHeartRateLineEi) referenced from screen1presenter.o(.rodata._ZTV13ModelListener)
 <LI><a href="#[133]">ModelListener::UpDateHeartRateLine(int)</a> from screen1presenter.o(.text._ZN13ModelListener19UpDateHeartRateLineEi) referenced from screenpresenter.o(.rodata._ZTV15screenPresenter)
 <LI><a href="#[132]">ModelListener::~ModelListener__deallocating()</a> from screen1presenter.o(.text._ZN13ModelListenerD0Ev) referenced from screen1presenter.o(.rodata._ZTV13ModelListener)
 <LI><a href="#[131]">ModelListener::~ModelListener__sub_object()</a> from screen1presenter.o(.text._ZN13ModelListenerD2Ev) referenced from screen1presenter.o(.rodata._ZTV13ModelListener)
 <LI><a href="#[138]">screenViewBase::setupScreen()</a> from screenviewbase.o(.text) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[c6]">screenViewBase::buttonCallbackHandler(touchgfx::AbstractButton const&)</a> from screenviewbase.o(.text) referenced 2 times from screenviewbase.o(.text)
 <LI><a href="#[137]">screenViewBase::~screenViewBase__deallocating()</a> from screenviewbase.o(.text._ZN14screenViewBaseD0Ev) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[136]">screenViewBase::~screenViewBase__sub_object()</a> from screenview.o(.text._ZN14screenViewBaseD2Ev) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[13c]">Screen1ViewBase::setupScreen()</a> from screen1viewbase.o(.text) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[c5]">Screen1ViewBase::buttonCallbackHandler(touchgfx::AbstractButton const&)</a> from screen1viewbase.o(.text) referenced 2 times from screen1viewbase.o(.text)
 <LI><a href="#[13b]">Screen1ViewBase::~Screen1ViewBase__deallocating()</a> from screen1viewbase.o(.text._ZN15Screen1ViewBaseD0Ev) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[13a]">Screen1ViewBase::~Screen1ViewBase__sub_object()</a> from screen1view.o(.text._ZN15Screen1ViewBaseD2Ev) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[13e]">screenPresenter::deactivate()</a> from screenpresenter.o(.text) referenced from screenpresenter.o(.rodata._ZTV15screenPresenter)
 <LI><a href="#[142]">screenPresenter::UpDateTemNum(int)</a> from screenpresenter.o(.text) referenced from screenpresenter.o(.rodata._ZTV15screenPresenter)
 <LI><a href="#[141]">screenPresenter::UpDateHeartNum(int)</a> from screenpresenter.o(.text) referenced from screenpresenter.o(.rodata._ZTV15screenPresenter)
 <LI><a href="#[13d]">screenPresenter::activate()</a> from screenpresenter.o(.text) referenced from screenpresenter.o(.rodata._ZTV15screenPresenter)
 <LI><a href="#[140]">screenPresenter::~screenPresenter__deallocating()</a> from screenpresenter.o(.text._ZN15screenPresenterD0Ev) referenced from screenpresenter.o(.rodata._ZTV15screenPresenter)
 <LI><a href="#[13f]">screenPresenter::~screenPresenter__sub_object()</a> from screenpresenter.o(.text._ZN15screenPresenterD2Ev) referenced from screenpresenter.o(.rodata._ZTV15screenPresenter)
 <LI><a href="#[130]">FrontendHeapBase::gotoStartScreen(FrontendApplication&)</a> from touchgfxconfiguration.o(.text._ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication) referenced from touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
 <LI><a href="#[130]">FrontendHeapBase::gotoStartScreen(FrontendApplication&)</a> from touchgfxconfiguration.o(.text._ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication) referenced from touchgfxconfiguration.o(.rodata._ZTV16FrontendHeapBase)
 <LI><a href="#[148]">FrontendHeapBase::~FrontendHeapBase__deallocating()</a> from touchgfxconfiguration.o(.text._ZN16FrontendHeapBaseD0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTV16FrontendHeapBase)
 <LI><a href="#[147]">FrontendHeapBase::~FrontendHeapBase__sub_object()</a> from touchgfxconfiguration.o(.text._ZN16FrontendHeapBaseD2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTV16FrontendHeapBase)
 <LI><a href="#[14a]">Screen1Presenter::deactivate()</a> from screen1presenter.o(.text) referenced from screen1presenter.o(.rodata._ZTV16Screen1Presenter)
 <LI><a href="#[14d]">Screen1Presenter::UpDateHeartRateLine(int)</a> from screen1presenter.o(.text) referenced from screen1presenter.o(.rodata._ZTV16Screen1Presenter)
 <LI><a href="#[149]">Screen1Presenter::activate()</a> from screen1presenter.o(.text) referenced from screen1presenter.o(.rodata._ZTV16Screen1Presenter)
 <LI><a href="#[14c]">Screen1Presenter::~Screen1Presenter__deallocating()</a> from screen1presenter.o(.text._ZN16Screen1PresenterD0Ev) referenced from screen1presenter.o(.rodata._ZTV16Screen1Presenter)
 <LI><a href="#[14b]">Screen1Presenter::~Screen1Presenter__sub_object()</a> from screen1presenter.o(.text._ZN16Screen1PresenterD2Ev) referenced from screen1presenter.o(.rodata._ZTV16Screen1Presenter)
 <LI><a href="#[155]">FrontendApplication::handleTickEvent()</a> from frontendapplication.o(.text._ZN19FrontendApplication15handleTickEventEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[158]">FrontendApplication::~FrontendApplication__deallocating()</a> from frontendapplication.o(.text._ZN19FrontendApplicationD0Ev) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[157]">FrontendApplication::~FrontendApplication__sub_object()</a> from touchgfxconfiguration.o(.text._ZN19FrontendApplicationD2Ev) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[162]">STM32TouchController::sampleTouch(int&, int&)</a> from stm32touchcontroller.o(.text) referenced from stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
 <LI><a href="#[161]">STM32TouchController::init()</a> from stm32touchcontroller.o(.text) referenced from stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
 <LI><a href="#[160]">STM32TouchController::~STM32TouchController__deallocating()</a> from stm32touchcontroller.o(.text._ZN20STM32TouchControllerD0Ev) referenced from stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
 <LI><a href="#[bc]">STM32TouchController::~STM32TouchController__sub_object()</a> from stm32touchcontroller.o(.text._ZN20STM32TouchControllerD2Ev) referenced from stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
 <LI><a href="#[bc]">STM32TouchController::~STM32TouchController__sub_object()</a> from stm32touchcontroller.o(.text._ZN20STM32TouchControllerD2Ev) referenced 2 times from touchgfxconfiguration.o(.text)
 <LI><a href="#[12e]">TouchGFXGeneratedHAL::FlushCache()</a> from touchgfxgeneratedhal.o(.text) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[12e]">TouchGFXGeneratedHAL::FlushCache()</a> from touchgfxgeneratedhal.o(.text) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[12d]">TouchGFXGeneratedHAL::InvalidateCache()</a> from touchgfxgeneratedhal.o(.text) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[12d]">TouchGFXGeneratedHAL::InvalidateCache()</a> from touchgfxgeneratedhal.o(.text) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[16a]">TouchGFXGeneratedHAL::enableInterrupts()</a> from touchgfxgeneratedhal.o(.text) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[166]">TouchGFXGeneratedHAL::flushFrameBuffer(touchgfx::Rect const&)</a> from touchgfxgeneratedhal.o(.text) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[165]">TouchGFXGeneratedHAL::flushFrameBuffer()</a> from touchgfxhal.o(.text._ZN20TouchGFXGeneratedHAL16flushFrameBufferEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[16b]">TouchGFXGeneratedHAL::disableInterrupts()</a> from touchgfxgeneratedhal.o(.text) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[16d]">TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)</a> from touchgfxgeneratedhal.o(.text) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[169]">TouchGFXGeneratedHAL::configureInterrupts()</a> from touchgfxgeneratedhal.o(.text) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[16c]">TouchGFXGeneratedHAL::enableLCDControllerInterrupt()</a> from touchgfxgeneratedhal.o(.text) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[168]">TouchGFXGeneratedHAL::blockCopy(void*, void const*, unsigned int)</a> from touchgfxgeneratedhal.o(.text) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[164]">TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__deallocating()</a> from touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHALD0Ev) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[163]">TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__sub_object()</a> from touchgfxhal.o(.text._ZN20TouchGFXGeneratedHALD2Ev) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[16e]">ApplicationFontProvider::getFont(unsigned short)</a> from applicationfontprovider.o(.text) referenced from applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
 <LI><a href="#[16f]">ApplicationFontProvider::~ApplicationFontProvider__deallocating()</a> from applicationfontprovider.o(.text._ZN23ApplicationFontProviderD0Ev) referenced from applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
 <LI><a href="#[bf]">ApplicationFontProvider::~ApplicationFontProvider__sub_object()</a> from touchgfxconfiguration.o(.text._ZN23ApplicationFontProviderD2Ev) referenced from applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
 <LI><a href="#[bf]">ApplicationFontProvider::~ApplicationFontProvider__sub_object()</a> from touchgfxconfiguration.o(.text._ZN23ApplicationFontProviderD2Ev) referenced 2 times from touchgfxconfiguration.o(.text)
 <LI><a href="#[c2]">FrontendApplicationBase::gotoscreenScreenNoTransitionImpl()</a> from frontendapplicationbase.o(.text) referenced 2 times from frontendapplicationbase.o(.text)
 <LI><a href="#[c3]">FrontendApplicationBase::gotoscreenScreenWipeTransitionEastImpl()</a> from frontendapplicationbase.o(.text) referenced 2 times from frontendapplicationbase.o(.text)
 <LI><a href="#[c4]">FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEastImpl()</a> from frontendapplicationbase.o(.text) referenced 2 times from frontendapplicationbase.o(.text)
 <LI><a href="#[172]">FrontendApplicationBase::~FrontendApplicationBase__deallocating()</a> from frontendapplicationbase.o(.text._ZN23FrontendApplicationBaseD0Ev) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[171]">FrontendApplicationBase::~FrontendApplicationBase__sub_object()</a> from touchgfxconfiguration.o(.text._ZN23FrontendApplicationBaseD2Ev) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[17f]">touchgfx::ClickEvent::getEventType()</a> from screen.o(.text._ZN8touchgfx10ClickEvent12getEventTypeEv) referenced from screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
 <LI><a href="#[181]">touchgfx::ClickEvent::~ClickEvent__deallocating()</a> from screen.o(.text._ZN8touchgfx10ClickEventD0Ev) referenced from screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
 <LI><a href="#[187]">touchgfx::Transition::invalidate()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition10invalidateEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
 <LI><a href="#[187]">touchgfx::Transition::invalidate()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition10invalidateEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[184]">touchgfx::Transition::handleTickEvent()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition15handleTickEventEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
 <LI><a href="#[188]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
 <LI><a href="#[188]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[188]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[186]">touchgfx::Transition::init()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition4initEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
 <LI><a href="#[186]">touchgfx::Transition::init()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition4initEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[185]">touchgfx::Transition::tearDown()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition8tearDownEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
 <LI><a href="#[185]">touchgfx::Transition::tearDown()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10Transition8tearDownEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[183]">touchgfx::Transition::~Transition__deallocating()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10TransitionD0Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
 <LI><a href="#[182]">touchgfx::Transition::~Transition__sub_object()</a> from frontendapplicationbase.o(.text._ZN8touchgfx10TransitionD2Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
 <LI><a href="#[159]">touchgfx::Application::switchScreen(touchgfx::Screen*)</a> from application.o(.text._ZN8touchgfx11Application12switchScreenEPNS_6ScreenE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[159]">touchgfx::Application::switchScreen(touchgfx::Screen*)</a> from application.o(.text._ZN8touchgfx11Application12switchScreenEPNS_6ScreenE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[159]">touchgfx::Application::switchScreen(touchgfx::Screen*)</a> from application.o(.text._ZN8touchgfx11Application12switchScreenEPNS_6ScreenE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[159]">touchgfx::Application::switchScreen(touchgfx::Screen*)</a> from application.o(.text._ZN8touchgfx11Application12switchScreenEPNS_6ScreenE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[15c]">touchgfx::Application::requestRedraw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawERNS_4RectE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[15c]">touchgfx::Application::requestRedraw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawERNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[15c]">touchgfx::Application::requestRedraw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawERNS_4RectE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[15c]">touchgfx::Application::requestRedraw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawERNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[15b]">touchgfx::Application::requestRedraw()</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[15b]">touchgfx::Application::requestRedraw()</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[15b]">touchgfx::Application::requestRedraw()</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[15b]">touchgfx::Application::requestRedraw()</a> from application.o(.text._ZN8touchgfx11Application13requestRedrawEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[154]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[154]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[154]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application14handleKeyEventEh) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[154]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[15a]">touchgfx::Application::appSwitchScreen(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application15appSwitchScreenEh) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[15a]">touchgfx::Application::appSwitchScreen(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application15appSwitchScreenEh) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[15a]">touchgfx::Application::appSwitchScreen(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application15appSwitchScreenEh) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[15a]">touchgfx::Application::appSwitchScreen(unsigned char)</a> from application.o(.text._ZN8touchgfx11Application15appSwitchScreenEh) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[152]">touchgfx::Application::handleDragEvent(touchgfx::DragEvent const&)</a> from application.o(.text._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[152]">touchgfx::Application::handleDragEvent(touchgfx::DragEvent const&)</a> from application.o(.text._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[152]">touchgfx::Application::handleDragEvent(touchgfx::DragEvent const&)</a> from application.o(.text._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[152]">touchgfx::Application::handleDragEvent(touchgfx::DragEvent const&)</a> from application.o(.text._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[170]">touchgfx::Application::handleTickEvent()</a> from application.o(.text._ZN8touchgfx11Application15handleTickEventEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[170]">touchgfx::Application::handleTickEvent()</a> from application.o(.text._ZN8touchgfx11Application15handleTickEventEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[170]">touchgfx::Application::handleTickEvent()</a> from application.o(.text._ZN8touchgfx11Application15handleTickEventEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[151]">touchgfx::Application::handleClickEvent(touchgfx::ClickEvent const&)</a> from application.o(.text._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[151]">touchgfx::Application::handleClickEvent(touchgfx::ClickEvent const&)</a> from application.o(.text._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[151]">touchgfx::Application::handleClickEvent(touchgfx::ClickEvent const&)</a> from application.o(.text._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[151]">touchgfx::Application::handleClickEvent(touchgfx::ClickEvent const&)</a> from application.o(.text._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[153]">touchgfx::Application::handleGestureEvent(touchgfx::GestureEvent const&)</a> from application.o(.text._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[153]">touchgfx::Application::handleGestureEvent(touchgfx::GestureEvent const&)</a> from application.o(.text._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[153]">touchgfx::Application::handleGestureEvent(touchgfx::GestureEvent const&)</a> from application.o(.text._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[153]">touchgfx::Application::handleGestureEvent(touchgfx::GestureEvent const&)</a> from application.o(.text._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[15f]">touchgfx::Application::cacheDrawOperations(bool)</a> from application.o(.text._ZN8touchgfx11Application19cacheDrawOperationsEb) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[15f]">touchgfx::Application::cacheDrawOperations(bool)</a> from application.o(.text._ZN8touchgfx11Application19cacheDrawOperationsEb) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[15f]">touchgfx::Application::cacheDrawOperations(bool)</a> from application.o(.text._ZN8touchgfx11Application19cacheDrawOperationsEb) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[15f]">touchgfx::Application::cacheDrawOperations(bool)</a> from application.o(.text._ZN8touchgfx11Application19cacheDrawOperationsEb) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[189]">touchgfx::Application::handlePendingScreenTransition()</a> from application.o(.text._ZN8touchgfx11Application29handlePendingScreenTransitionEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[15e]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[15e]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[15e]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application4drawERNS_4RectE) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[15e]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(.text._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[15d]">touchgfx::Application::draw()</a> from application.o(.text._ZN8touchgfx11Application4drawEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[15d]">touchgfx::Application::draw()</a> from application.o(.text._ZN8touchgfx11Application4drawEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[15d]">touchgfx::Application::draw()</a> from application.o(.text._ZN8touchgfx11Application4drawEv) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[15d]">touchgfx::Application::draw()</a> from application.o(.text._ZN8touchgfx11Application4drawEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[18b]">touchgfx::Application::~Application__deallocating()</a> from application.o(.text._ZN8touchgfx11ApplicationD0Ev) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[18d]">touchgfx::GraphScroll&lang;(short)125&rang;::~GraphScroll__deallocating()</a> from screen1viewbase.o(.text._ZN8touchgfx11GraphScrollILs125EED0Ev) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[18c]">touchgfx::GraphScroll&lang;(short)125&rang;::~GraphScroll__sub_object()</a> from screen1view.o(.text._ZN8touchgfx11GraphScrollILs125EED2Ev) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1df]">touchgfx::CanvasWidget::setPainter(touchgfx::AbstractPainter&)</a> from canvaswidget.o(.text._ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1df]">touchgfx::CanvasWidget::setPainter(touchgfx::AbstractPainter&)</a> from canvaswidget.o(.text._ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[1df]">touchgfx::CanvasWidget::setPainter(touchgfx::AbstractPainter&)</a> from canvaswidget.o(.text._ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[1df]">touchgfx::CanvasWidget::setPainter(touchgfx::AbstractPainter&)</a> from canvaswidget.o(.text._ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[1df]">touchgfx::CanvasWidget::setPainter(touchgfx::AbstractPainter&)</a> from canvaswidget.o(.text._ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[1e1]">touchgfx::CanvasWidget::setAlpha(unsigned char)</a> from canvaswidget.o(.text._ZN8touchgfx12CanvasWidget8setAlphaEh) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1e1]">touchgfx::CanvasWidget::setAlpha(unsigned char)</a> from canvaswidget.o(.text._ZN8touchgfx12CanvasWidget8setAlphaEh) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[1e1]">touchgfx::CanvasWidget::setAlpha(unsigned char)</a> from canvaswidget.o(.text._ZN8touchgfx12CanvasWidget8setAlphaEh) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[1e1]">touchgfx::CanvasWidget::setAlpha(unsigned char)</a> from canvaswidget.o(.text._ZN8touchgfx12CanvasWidget8setAlphaEh) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[1e1]">touchgfx::CanvasWidget::setAlpha(unsigned char)</a> from canvaswidget.o(.text._ZN8touchgfx12CanvasWidget8setAlphaEh) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[1e1]">touchgfx::CanvasWidget::setAlpha(unsigned char)</a> from canvaswidget.o(.text._ZN8touchgfx12CanvasWidget8setAlphaEh) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[1e1]">touchgfx::CanvasWidget::setAlpha(unsigned char)</a> from canvaswidget.o(.text._ZN8touchgfx12CanvasWidget8setAlphaEh) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[1d4]">touchgfx::CanvasWidget::~CanvasWidget__deallocating()</a> from canvaswidget.o(.text._ZN8touchgfx12CanvasWidgetD0Ev) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1e5]">touchgfx::GestureEvent::getEventType()</a> from screen.o(.text._ZN8touchgfx12GestureEvent12getEventTypeEv) referenced from screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
 <LI><a href="#[1e6]">touchgfx::GestureEvent::~GestureEvent__deallocating()</a> from screen.o(.text._ZN8touchgfx12GestureEventD0Ev) referenced from screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
 <LI><a href="#[1e9]">touchgfx::NoTransition::handleTickEvent()</a> from frontendapplicationbase.o(.text._ZN8touchgfx12NoTransition15handleTickEventEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[1e8]">touchgfx::NoTransition::~NoTransition__deallocating()</a> from frontendapplicationbase.o(.text._ZN8touchgfx12NoTransitionD0Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[1e7]">touchgfx::NoTransition::~NoTransition__sub_object()</a> from frontendapplicationbase.o(.text._ZN8touchgfx12NoTransitionD2Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[e4]">touchgfx::DMA_Interface::addToQueue(touchgfx::BlitOp const&)</a> from dma.o(.text._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE) referenced from stm32dma.o(.rodata._ZTV10STM32H7DMA)
 <LI><a href="#[e4]">touchgfx::DMA_Interface::addToQueue(touchgfx::BlitOp const&)</a> from dma.o(.text._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[1eb]">touchgfx::DMA_Interface::getDMAType()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface10getDMATypeEv) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[1ea]">touchgfx::DMA_Interface::initialize()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface10initializeEv) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[f0]">touchgfx::DMA_Interface::enableAlpha(unsigned char)</a> from dma.o(.text._ZN8touchgfx13DMA_Interface11enableAlphaEh) referenced from stm32dma.o(.rodata._ZTV10STM32H7DMA)
 <LI><a href="#[f0]">touchgfx::DMA_Interface::enableAlpha(unsigned char)</a> from dma.o(.text._ZN8touchgfx13DMA_Interface11enableAlphaEh) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[f1]">touchgfx::DMA_Interface::disableAlpha()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface12disableAlphaEv) referenced from stm32dma.o(.rodata._ZTV10STM32H7DMA)
 <LI><a href="#[f1]">touchgfx::DMA_Interface::disableAlpha()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface12disableAlphaEv) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[ed]">touchgfx::DMA_Interface::seedExecution()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface13seedExecutionEv) referenced from stm32dma.o(.rodata._ZTV10STM32H7DMA)
 <LI><a href="#[ed]">touchgfx::DMA_Interface::seedExecution()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface13seedExecutionEv) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[ec]">touchgfx::DMA_Interface::executeCompleted()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface16executeCompletedEv) referenced from stm32dma.o(.rodata._ZTV10STM32H7DMA)
 <LI><a href="#[ec]">touchgfx::DMA_Interface::executeCompleted()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface16executeCompletedEv) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[f3]">touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv) referenced from stm32dma.o(.rodata._ZTV10STM32H7DMA)
 <LI><a href="#[f3]">touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[f2]">touchgfx::DMA_Interface::enableCopyWithTransparentPixels(unsigned char)</a> from dma.o(.text._ZN8touchgfx13DMA_Interface31enableCopyWithTransparentPixelsEh) referenced from stm32dma.o(.rodata._ZTV10STM32H7DMA)
 <LI><a href="#[f2]">touchgfx::DMA_Interface::enableCopyWithTransparentPixels(unsigned char)</a> from dma.o(.text._ZN8touchgfx13DMA_Interface31enableCopyWithTransparentPixelsEh) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[e5]">touchgfx::DMA_Interface::flush()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface5flushEv) referenced from stm32dma.o(.rodata._ZTV10STM32H7DMA)
 <LI><a href="#[e5]">touchgfx::DMA_Interface::flush()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface5flushEv) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[e7]">touchgfx::DMA_Interface::start()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface5startEv) referenced from stm32dma.o(.rodata._ZTV10STM32H7DMA)
 <LI><a href="#[e7]">touchgfx::DMA_Interface::start()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface5startEv) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[eb]">touchgfx::DMA_Interface::execute()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface7executeEv) referenced from stm32dma.o(.rodata._ZTV10STM32H7DMA)
 <LI><a href="#[eb]">touchgfx::DMA_Interface::execute()</a> from dma.o(.text._ZN8touchgfx13DMA_Interface7executeEv) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[1ed]">touchgfx::DMA_Interface::~DMA_Interface__deallocating()</a> from dma.o(.text._ZN8touchgfx13DMA_InterfaceD0Ev) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[1ec]">touchgfx::DMA_Interface::~DMA_Interface__sub_object()</a> from dma.o(.text._ZN8touchgfx13DMA_InterfaceD2Ev) referenced from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[1ee]">touchgfx::GeneratedFont::~GeneratedFont__deallocating()</a> from generatedfont.o(.text._ZN8touchgfx13GeneratedFontD0Ev) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[c7]">touchgfx::GeneratedFont::~GeneratedFont__sub_object()</a> from cachedfont.o(.text._ZN8touchgfx13GeneratedFontD2Ev) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[c7]">touchgfx::GeneratedFont::~GeneratedFont__sub_object()</a> from cachedfont.o(.text._ZN8touchgfx13GeneratedFontD2Ev) referenced 6 times from table_stsong_ttf_10_4bpp.o(.text)
 <LI><a href="#[206]">touchgfx::PainterRGB565::renderNext(unsigned char&, unsigned char&, unsigned char&, unsigned char&)</a> from painterrgb565.o(.text._ZN8touchgfx13PainterRGB56510renderNextERhS1_S1_S1_) referenced from painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[202]">touchgfx::PainterRGB565::render(unsigned char*, int, int, int, unsigned int, unsigned char const*)</a> from painterrgb565.o(.text._ZN8touchgfx13PainterRGB5656renderEPhiiijPKh) referenced from painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[201]">touchgfx::PainterRGB565::~PainterRGB565__deallocating()</a> from painterrgb565.o(.text._ZN8touchgfx13PainterRGB565D0Ev) referenced from painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[23d]">touchgfx::AbstractButton::executeAction()</a> from button.o(.text._ZN8touchgfx14AbstractButton13executeActionEv) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[23c]">touchgfx::AbstractButton::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractbutton.o(.text._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[21d]">touchgfx::CircleProgress::setPainter(touchgfx::AbstractPainter&)</a> from circleprogress.o(.text._ZN8touchgfx14CircleProgress10setPainterERNS_15AbstractPainterE) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[222]">touchgfx::CircleProgress::setLineWidth(int)</a> from circleprogress.o(.text._ZN8touchgfx14CircleProgress12setLineWidthEi) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[224]">touchgfx::CircleProgress::setCapPrecision(int)</a> from circleprogress.o(.text._ZN8touchgfx14CircleProgress15setCapPrecisionEi) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[226]">touchgfx::CircleProgress::setStartEndAngle(int, int)</a> from circleprogress.o(.text._ZN8touchgfx14CircleProgress16setStartEndAngleEii) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[20c]">touchgfx::CircleProgress::setProgressIndicatorPosition(short, short, short, short)</a> from circleprogress.o(.text._ZN8touchgfx14CircleProgress28setProgressIndicatorPositionEssss) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[229]">touchgfx::CircleProgress::setAlpha(unsigned char)</a> from circleprogress.o(.text._ZN8touchgfx14CircleProgress8setAlphaEh) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[218]">touchgfx::CircleProgress::setValue(int)</a> from circleprogress.o(.text._ZN8touchgfx14CircleProgress8setValueEi) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[21e]">touchgfx::CircleProgress::setCenter(int, int)</a> from circleprogress.o(.text._ZN8touchgfx14CircleProgress9setCenterEii) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[220]">touchgfx::CircleProgress::setRadius(int)</a> from circleprogress.o(.text._ZN8touchgfx14CircleProgress9setRadiusEi) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[209]">touchgfx::CircleProgress::~CircleProgress__deallocating()</a> from circleprogress.o(.text._ZN8touchgfx14CircleProgressD0Ev) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[208]">touchgfx::CircleProgress::~CircleProgress__sub_object()</a> from circleprogress.o(.text._ZN8touchgfx14CircleProgressD2Ev) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[156]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from frontendapplication.o(.text._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplication.o(.rodata._ZTV19FrontendApplication)
 <LI><a href="#[156]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from frontendapplication.o(.text._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
 <LI><a href="#[156]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from frontendapplication.o(.text._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[22c]">touchgfx::MVPApplication::~MVPApplication__deallocating()</a> from frontendapplicationbase.o(.text._ZN8touchgfx14MVPApplicationD0Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[22b]">touchgfx::MVPApplication::~MVPApplication__sub_object()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx14MVPApplicationD2Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[236]">touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::invalidate()</a> from frontendapplicationbase.o(.text._ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[22e]">touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::~FullSolidRect__deallocating()</a> from frontendapplicationbase.o(.text._ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[22d]">touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::~FullSolidRect__sub_object()</a> from frontendapplicationbase.o(.text._ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD2Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[233]">touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()</a> from frontendapplicationbase.o(.text._ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[235]">touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::init()</a> from frontendapplicationbase.o(.text._ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[234]">touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::tearDown()</a> from frontendapplicationbase.o(.text._ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[232]">touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::~WipeTransition__deallocating()</a> from frontendapplicationbase.o(.text._ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[231]">touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::~WipeTransition__sub_object()</a> from frontendapplicationbase.o(.text._ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED2Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[203]">touchgfx::AbstractPainter::setAlpha(unsigned char)</a> from abstractpainterrgb565.o(.text._ZN8touchgfx15AbstractPainter8setAlphaEh) referenced from painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[203]">touchgfx::AbstractPainter::setAlpha(unsigned char)</a> from abstractpainterrgb565.o(.text._ZN8touchgfx15AbstractPainter8setAlphaEh) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx15AbstractPainterE)
 <LI><a href="#[203]">touchgfx::AbstractPainter::setAlpha(unsigned char)</a> from abstractpainterrgb565.o(.text._ZN8touchgfx15AbstractPainter8setAlphaEh) referenced from painterrgb565bitmap.o(.rodata._ZTVN8touchgfx19PainterRGB565BitmapE)
 <LI><a href="#[203]">touchgfx::AbstractPainter::setAlpha(unsigned char)</a> from abstractpainterrgb565.o(.text._ZN8touchgfx15AbstractPainter8setAlphaEh) referenced from abstractpainterrgb565.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[237]">touchgfx::AbstractPainter::~AbstractPainter__deallocating()</a> from screen1viewbase.o(.text._ZN8touchgfx15AbstractPainterD0Ev) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx15AbstractPainterE)
 <LI><a href="#[200]">touchgfx::AbstractPainter::~AbstractPainter__sub_object()</a> from abstractpainterrgb565.o(.text._ZN8touchgfx15AbstractPainterD2Ev) referenced from painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[200]">touchgfx::AbstractPainter::~AbstractPainter__sub_object()</a> from abstractpainterrgb565.o(.text._ZN8touchgfx15AbstractPainterD2Ev) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx15AbstractPainterE)
 <LI><a href="#[200]">touchgfx::AbstractPainter::~AbstractPainter__sub_object()</a> from abstractpainterrgb565.o(.text._ZN8touchgfx15AbstractPainterD2Ev) referenced from painterrgb565bitmap.o(.rodata._ZTVN8touchgfx19PainterRGB565BitmapE)
 <LI><a href="#[200]">touchgfx::AbstractPainter::~AbstractPainter__sub_object()</a> from abstractpainterrgb565.o(.text._ZN8touchgfx15AbstractPainterD2Ev) referenced from abstractpainterrgb565.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[239]">touchgfx::ButtonWithLabel::~ButtonWithLabel__deallocating()</a> from buttonwithlabel.o(.text._ZN8touchgfx15ButtonWithLabelD0Ev) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[238]">touchgfx::ButtonWithLabel::~ButtonWithLabel__sub_object()</a> from buttonwithlabel.o(.text._ZN8touchgfx15ButtonWithLabelD2Ev) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[1cd]">touchgfx::DataGraphScroll::beforeAddValue()</a> from graphscroll.o(.text._ZN8touchgfx15DataGraphScroll14beforeAddValueEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1cd]">touchgfx::DataGraphScroll::beforeAddValue()</a> from graphscroll.o(.text._ZN8touchgfx15DataGraphScroll14beforeAddValueEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1b5]">touchgfx::DataGraphScroll::clear()</a> from graphscroll.o(.text._ZN8touchgfx15DataGraphScroll5clearEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1b5]">touchgfx::DataGraphScroll::clear()</a> from graphscroll.o(.text._ZN8touchgfx15DataGraphScroll5clearEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1ce]">touchgfx::DataGraphScroll::addValue(int)</a> from graphscroll.o(.text._ZN8touchgfx15DataGraphScroll8addValueEi) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1ce]">touchgfx::DataGraphScroll::addValue(int)</a> from graphscroll.o(.text._ZN8touchgfx15DataGraphScroll8addValueEi) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[241]">touchgfx::DataGraphScroll::~DataGraphScroll__deallocating()</a> from graphscroll.o(.text._ZN8touchgfx15DataGraphScrollD0Ev) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[d2]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(.text._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicatorC2Ev)
 <LI><a href="#[243]">touchgfx::GenericCallback&lang;touchgfx::AbstractButton const&, void, void&rang;::~GenericCallback__deallocating()</a> from screen1viewbase.o(.text._ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED0Ev) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[242]">touchgfx::GenericCallback&lang;touchgfx::AbstractButton const&, void, void&rang;::~GenericCallback__sub_object()</a> from screen1view.o(.text._ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED2Ev) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[245]">touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__deallocating()</a> from frontendapplicationbase.o(.text._ZN8touchgfx15GenericCallbackIvvvED0Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx15GenericCallbackIvvvEE)
 <LI><a href="#[244]">touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__sub_object()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx15GenericCallbackIvvvED2Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx15GenericCallbackIvvvEE)
 <LI><a href="#[247]">touchgfx::RenderingBuffer::~RenderingBuffer__deallocating()</a> from renderingbuffer.o(.text._ZN8touchgfx15RenderingBufferD0Ev) referenced from renderingbuffer.o(.rodata._ZTVN8touchgfx15RenderingBufferE)
 <LI><a href="#[246]">touchgfx::RenderingBuffer::~RenderingBuffer__sub_object()</a> from renderingbuffer.o(.text._ZN8touchgfx15RenderingBufferD2Ev) referenced from renderingbuffer.o(.rodata._ZTVN8touchgfx15RenderingBufferE)
 <LI><a href="#[249]">touchgfx::TouchController::~TouchController__deallocating()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx15TouchControllerD0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx15TouchControllerE)
 <LI><a href="#[248]">touchgfx::TouchController::~TouchController__sub_object()</a> from stm32touchcontroller.o(.text._ZN8touchgfx15TouchControllerD2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx15TouchControllerE)
 <LI><a href="#[18a]">touchgfx::UIEventListener::~UIEventListener__sub_object()</a> from application.o(.text._ZN8touchgfx15UIEventListenerD2Ev) referenced from application.o(.rodata._ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[24c]">touchgfx::GraphElementDots::invalidateGraphPointAt(short)</a> from graphelements.o(.text._ZN8touchgfx16GraphElementDots22invalidateGraphPointAtEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[24a]">touchgfx::GraphElementDots::~GraphElementDots__deallocating()</a> from graphelements.o(.text._ZN8touchgfx16GraphElementDotsD0Ev) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[24f]">touchgfx::GraphElementLine::invalidateGraphPointAt(short)</a> from graphelements.o(.text._ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[24d]">touchgfx::GraphElementLine::~GraphElementLine__deallocating()</a> from graphelements.o(.text._ZN8touchgfx16GraphElementLineD0Ev) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[cf]">touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)</a> from touchcalibration.o(.text._ZN8touchgfx16TouchCalibration6muldivEiiiiRi) referenced from touchcalibration.o(.text._ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE)
 <LI><a href="#[19d]">touchgfx::AbstractDataGraph::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[19d]">touchgfx::AbstractDataGraph::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[19d]">touchgfx::AbstractDataGraph::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[19d]">touchgfx::AbstractDataGraph::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[19b]">touchgfx::AbstractDataGraph::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[19b]">touchgfx::AbstractDataGraph::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[19b]">touchgfx::AbstractDataGraph::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[19b]">touchgfx::AbstractDataGraph::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1b6]">touchgfx::AbstractDataGraph::getNearestIndexForScreenXY(short, short, short&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1b6]">touchgfx::AbstractDataGraph::getNearestIndexForScreenXY(short, short, short&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1b6]">touchgfx::AbstractDataGraph::getNearestIndexForScreenXY(short, short, short&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[1b6]">touchgfx::AbstractDataGraph::getNearestIndexForScreenXY(short, short, short&)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[252]">touchgfx::AbstractDataGraph::clear()</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph5clearEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[252]">touchgfx::AbstractDataGraph::clear()</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph5clearEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[251]">touchgfx::AbstractDataGraph::setScale(int)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph8setScaleEi) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[198]">touchgfx::AbstractDataGraph::setWidth(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph8setWidthEs) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[198]">touchgfx::AbstractDataGraph::setWidth(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph8setWidthEs) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[198]">touchgfx::AbstractDataGraph::setWidth(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph8setWidthEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[198]">touchgfx::AbstractDataGraph::setWidth(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph8setWidthEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[199]">touchgfx::AbstractDataGraph::setHeight(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph9setHeightEs) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[199]">touchgfx::AbstractDataGraph::setHeight(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph9setHeightEs) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[199]">touchgfx::AbstractDataGraph::setHeight(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph9setHeightEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[199]">touchgfx::AbstractDataGraph::setHeight(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph9setHeightEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[250]">touchgfx::AbstractDataGraph::~AbstractDataGraph__deallocating()</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraphD0Ev) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[240]">touchgfx::AbstractDataGraph::~AbstractDataGraph__sub_object()</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraphD2Ev) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[240]">touchgfx::AbstractDataGraph::~AbstractDataGraph__sub_object()</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraphD2Ev) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[240]">touchgfx::AbstractDataGraph::~AbstractDataGraph__sub_object()</a> from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraphD2Ev) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[259]">touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition10allocateAtEtt) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[259]">touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition10allocateAtEtt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[259]">touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition10allocateAtEtt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[259]">touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition10allocateAtEtt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[25c]">touchgfx::AbstractPartition::clear()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition5clearEv) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[25c]">touchgfx::AbstractPartition::clear()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition5clearEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[25c]">touchgfx::AbstractPartition::clear()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition5clearEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[25c]">touchgfx::AbstractPartition::clear()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition5clearEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[25b]">touchgfx::AbstractPartition::indexOf(void const*)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition7indexOfEPKv) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[25b]">touchgfx::AbstractPartition::indexOf(void const*)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition7indexOfEPKv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[25b]">touchgfx::AbstractPartition::indexOf(void const*)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition7indexOfEPKv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[25b]">touchgfx::AbstractPartition::indexOf(void const*)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition7indexOfEPKv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[258]">touchgfx::AbstractPartition::allocate(unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition8allocateEt) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[258]">touchgfx::AbstractPartition::allocate(unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition8allocateEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[258]">touchgfx::AbstractPartition::allocate(unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition8allocateEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[258]">touchgfx::AbstractPartition::allocate(unsigned short)</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartition8allocateEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[257]">touchgfx::AbstractPartition::~AbstractPartition__deallocating()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD0Ev) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[256]">touchgfx::AbstractPartition::~AbstractPartition__sub_object()</a> from abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD2Ev) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[25f]">touchgfx::LockFreeDMA_Queue::pushCopyOf(touchgfx::BlitOp const&)</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[262]">touchgfx::LockFreeDMA_Queue::pop()</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue3popEv) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[263]">touchgfx::LockFreeDMA_Queue::first()</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue5firstEv) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[25e]">touchgfx::LockFreeDMA_Queue::isFull()</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue6isFullEv) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[25d]">touchgfx::LockFreeDMA_Queue::isEmpty()</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[261]">touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__deallocating()</a> from dma.o(.text._ZN8touchgfx17LockFreeDMA_QueueD0Ev) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[267]">touchgfx::CacheableContainer::CachedImage::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from cacheablecontainer.o(.text._ZN8touchgfx18CacheableContainer11CachedImage14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[264]">touchgfx::CacheableContainer::CachedImage::~CachedImage__deallocating()</a> from cacheablecontainer.o(.text._ZN8touchgfx18CacheableContainer11CachedImageD0Ev) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[26b]">touchgfx::CacheableContainer::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from cacheablecontainer.o(.text._ZN8touchgfx18CacheableContainer14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[269]">touchgfx::CacheableContainer::~CacheableContainer__deallocating()</a> from cacheablecontainer.o(.text._ZN8touchgfx18CacheableContainerD0Ev) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[268]">touchgfx::CacheableContainer::~CacheableContainer__sub_object()</a> from cacheablecontainer.o(.text._ZN8touchgfx18CacheableContainerD2Ev) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[26e]">touchgfx::PainterRGB565Bitmap::renderInit()</a> from painterrgb565bitmap.o(.text._ZN8touchgfx19PainterRGB565Bitmap10renderInitEv) referenced from painterrgb565bitmap.o(.rodata._ZTVN8touchgfx19PainterRGB565BitmapE)
 <LI><a href="#[26f]">touchgfx::PainterRGB565Bitmap::renderNext(unsigned char&, unsigned char&, unsigned char&, unsigned char&)</a> from painterrgb565bitmap.o(.text._ZN8touchgfx19PainterRGB565Bitmap10renderNextERhS1_S1_S1_) referenced from painterrgb565bitmap.o(.rodata._ZTVN8touchgfx19PainterRGB565BitmapE)
 <LI><a href="#[26d]">touchgfx::PainterRGB565Bitmap::render(unsigned char*, int, int, int, unsigned int, unsigned char const*)</a> from painterrgb565bitmap.o(.text._ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh) referenced from painterrgb565bitmap.o(.rodata._ZTVN8touchgfx19PainterRGB565BitmapE)
 <LI><a href="#[26c]">touchgfx::PainterRGB565Bitmap::~PainterRGB565Bitmap__deallocating()</a> from painterrgb565bitmap.o(.text._ZN8touchgfx19PainterRGB565BitmapD0Ev) referenced from painterrgb565bitmap.o(.rodata._ZTVN8touchgfx19PainterRGB565BitmapE)
 <LI><a href="#[270]">touchgfx::AbstractGraphElement::~AbstractGraphElement__deallocating()</a> from graphelements.o(.text._ZN8touchgfx20AbstractGraphElementD0Ev) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[205]">touchgfx::AbstractPainterRGB565::renderInit()</a> from abstractpainterrgb565.o(.text._ZN8touchgfx21AbstractPainterRGB56510renderInitEv) referenced from painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[205]">touchgfx::AbstractPainterRGB565::renderInit()</a> from abstractpainterrgb565.o(.text._ZN8touchgfx21AbstractPainterRGB56510renderInitEv) referenced from abstractpainterrgb565.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[207]">touchgfx::AbstractPainterRGB565::renderPixel(unsigned short*, unsigned char, unsigned char, unsigned char)</a> from abstractpainterrgb565.o(.text._ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh) referenced from painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[207]">touchgfx::AbstractPainterRGB565::renderPixel(unsigned short*, unsigned char, unsigned char, unsigned char)</a> from abstractpainterrgb565.o(.text._ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh) referenced from painterrgb565bitmap.o(.rodata._ZTVN8touchgfx19PainterRGB565BitmapE)
 <LI><a href="#[207]">touchgfx::AbstractPainterRGB565::renderPixel(unsigned short*, unsigned char, unsigned char, unsigned char)</a> from abstractpainterrgb565.o(.text._ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh) referenced from abstractpainterrgb565.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[272]">touchgfx::AbstractPainterRGB565::render(unsigned char*, int, int, int, unsigned int, unsigned char const*)</a> from abstractpainterrgb565.o(.text._ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh) referenced from abstractpainterrgb565.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[271]">touchgfx::AbstractPainterRGB565::~AbstractPainterRGB565__deallocating()</a> from abstractpainterrgb565.o(.text._ZN8touchgfx21AbstractPainterRGB565D0Ev) referenced from abstractpainterrgb565.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[d7]">touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)</a> from displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t)
 <LI><a href="#[277]">touchgfx::GraphElementHistogram::invalidateGraphPointAt(short)</a> from graphelements.o(.text._ZN8touchgfx21GraphElementHistogram22invalidateGraphPointAtEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[273]">touchgfx::GraphElementHistogram::~GraphElementHistogram__deallocating()</a> from graphelements.o(.text._ZN8touchgfx21GraphElementHistogramD0Ev) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[1c6]">touchgfx::AbstractDataGraphWithY::setXAxisScale(float)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY13setXAxisScaleEf) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1c6]">touchgfx::AbstractDataGraphWithY::setXAxisScale(float)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY13setXAxisScaleEf) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1c6]">touchgfx::AbstractDataGraphWithY::setXAxisScale(float)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY13setXAxisScaleEf) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1c5]">touchgfx::AbstractDataGraphWithY::setXAxisScale(int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY13setXAxisScaleEi) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1c5]">touchgfx::AbstractDataGraphWithY::setXAxisScale(int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY13setXAxisScaleEi) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1c5]">touchgfx::AbstractDataGraphWithY::setXAxisScale(int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY13setXAxisScaleEi) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[27b]">touchgfx::AbstractDataGraphWithY::beforeAddValue()</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14beforeAddValueEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1ac]">touchgfx::AbstractDataGraphWithY::setGraphRangeX(int, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1ac]">touchgfx::AbstractDataGraphWithY::setGraphRangeX(int, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1ac]">touchgfx::AbstractDataGraphWithY::setGraphRangeX(int, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1ae]">touchgfx::AbstractDataGraphWithY::setGraphRangeY(float, float)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeYEff) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1ae]">touchgfx::AbstractDataGraphWithY::setGraphRangeY(float, float)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeYEff) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1ae]">touchgfx::AbstractDataGraphWithY::setGraphRangeY(float, float)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeYEff) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1ad]">touchgfx::AbstractDataGraphWithY::setGraphRangeY(int, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeYEii) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1ad]">touchgfx::AbstractDataGraphWithY::setGraphRangeY(int, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeYEii) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1ad]">touchgfx::AbstractDataGraphWithY::setGraphRangeY(int, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeYEii) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1ca]">touchgfx::AbstractDataGraphWithY::setXAxisOffset(float)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14setXAxisOffsetEf) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1ca]">touchgfx::AbstractDataGraphWithY::setXAxisOffset(float)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14setXAxisOffsetEf) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1ca]">touchgfx::AbstractDataGraphWithY::setXAxisOffset(float)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14setXAxisOffsetEf) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1c9]">touchgfx::AbstractDataGraphWithY::setXAxisOffset(int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14setXAxisOffsetEi) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1c9]">touchgfx::AbstractDataGraphWithY::setXAxisOffset(int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14setXAxisOffsetEi) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1c9]">touchgfx::AbstractDataGraphWithY::setXAxisOffset(int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14setXAxisOffsetEi) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1d0]">touchgfx::AbstractDataGraphWithY::setXAxisScaleScaled(int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY19setXAxisScaleScaledEi) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1d0]">touchgfx::AbstractDataGraphWithY::setXAxisScaleScaled(int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY19setXAxisScaleScaledEi) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1d0]">touchgfx::AbstractDataGraphWithY::setXAxisScaleScaled(int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY19setXAxisScaleScaledEi) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1b9]">touchgfx::AbstractDataGraphWithY::setGraphRangeYScaled(int, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1b9]">touchgfx::AbstractDataGraphWithY::setGraphRangeYScaled(int, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1b9]">touchgfx::AbstractDataGraphWithY::setGraphRangeYScaled(int, int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1d1]">touchgfx::AbstractDataGraphWithY::setXAxisOffsetScaled(int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY20setXAxisOffsetScaledEi) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1d1]">touchgfx::AbstractDataGraphWithY::setXAxisOffsetScaled(int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY20setXAxisOffsetScaledEi) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1d1]">touchgfx::AbstractDataGraphWithY::setXAxisOffsetScaled(int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY20setXAxisOffsetScaledEi) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1ab]">touchgfx::AbstractDataGraphWithY::setScale(int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY8setScaleEi) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1ab]">touchgfx::AbstractDataGraphWithY::setScale(int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY8setScaleEi) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1ab]">touchgfx::AbstractDataGraphWithY::setScale(int)</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY8setScaleEi) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[27a]">touchgfx::AbstractDataGraphWithY::~AbstractDataGraphWithY__deallocating()</a> from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithYD0Ev) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[283]">touchgfx::TextAreaWithOneWildcard::getTextHeight()</a> from textareawithwildcard.o(.text._ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[27e]">touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__deallocating()</a> from textareawithwildcard.o(.text._ZN8touchgfx23TextAreaWithOneWildcardD0Ev) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[275]">touchgfx::AbstractGraphElementNoCWR::setPainter(touchgfx::AbstractPainter&)</a> from graphelements.o(.text._ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[275]">touchgfx::AbstractGraphElementNoCWR::setPainter(touchgfx::AbstractPainter&)</a> from graphelements.o(.text._ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[278]">touchgfx::AbstractGraphElementNoCWR::setColor(touchgfx::colortype)</a> from graphelements.o(.text._ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[278]">touchgfx::AbstractGraphElementNoCWR::setColor(touchgfx::colortype)</a> from graphelements.o(.text._ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[286]">touchgfx::AbstractGraphElementNoCWR::~AbstractGraphElementNoCWR__deallocating()</a> from graphelements.o(.text._ZN8touchgfx25AbstractGraphElementNoCWRD0Ev) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[21a]">touchgfx::AbstractProgressIndicator::updateValue(int, unsigned short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator11updateValueEit) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[21a]">touchgfx::AbstractProgressIndicator::updateValue(int, unsigned short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator11updateValueEit) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[20b]">touchgfx::AbstractProgressIndicator::setBackground(touchgfx::Bitmap const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[20b]">touchgfx::AbstractProgressIndicator::setBackground(touchgfx::Bitmap const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[20a]">touchgfx::AbstractProgressIndicator::handleTickEvent()</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[20a]">touchgfx::AbstractProgressIndicator::handleTickEvent()</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[219]">touchgfx::AbstractProgressIndicator::setEasingEquation(short (*)(unsigned short, short, short, unsigned short))</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[219]">touchgfx::AbstractProgressIndicator::setEasingEquation(short (*)(unsigned short, short, short, unsigned short))</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[289]">touchgfx::AbstractProgressIndicator::setProgressIndicatorPosition(short, short, short, short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[211]">touchgfx::AbstractProgressIndicator::setRange(int, int, unsigned short, unsigned short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[211]">touchgfx::AbstractProgressIndicator::setRange(int, int, unsigned short, unsigned short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[28a]">touchgfx::AbstractProgressIndicator::setValue(int)</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator8setValueEi) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[288]">touchgfx::AbstractProgressIndicator::~AbstractProgressIndicator__deallocating()</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicatorD0Ev) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[287]">touchgfx::AbstractProgressIndicator::~AbstractProgressIndicator__sub_object()</a> from abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicatorD2Ev) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[28b]">touchgfx::Box::~Box__deallocating()</a> from box.o(.text._ZN8touchgfx3BoxD0Ev) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[294]">touchgfx::HAL::FlushCache()</a> from hal.o(.text._ZN8touchgfx3HAL10FlushCacheEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[127]">touchgfx::HAL::beginFrame()</a> from hal.o(.text._ZN8touchgfx3HAL10beginFrameEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[127]">touchgfx::HAL::beginFrame()</a> from hal.o(.text._ZN8touchgfx3HAL10beginFrameEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[127]">touchgfx::HAL::beginFrame()</a> from hal.o(.text._ZN8touchgfx3HAL10beginFrameEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[123]">touchgfx::HAL::getDMAType()</a> from hal.o(.text._ZN8touchgfx3HAL10getDMATypeEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[123]">touchgfx::HAL::getDMAType()</a> from hal.o(.text._ZN8touchgfx3HAL10getDMATypeEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[123]">touchgfx::HAL::getDMAType()</a> from hal.o(.text._ZN8touchgfx3HAL10getDMATypeEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[10e]">touchgfx::HAL::getBlitCaps()</a> from hal.o(.text._ZN8touchgfx3HAL11getBlitCapsEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[10e]">touchgfx::HAL::getBlitCaps()</a> from hal.o(.text._ZN8touchgfx3HAL11getBlitCapsEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[10e]">touchgfx::HAL::getBlitCaps()</a> from hal.o(.text._ZN8touchgfx3HAL11getBlitCapsEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[112]">touchgfx::HAL::blitCopyGlyph(unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)</a> from hal.o(.text._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[112]">touchgfx::HAL::blitCopyGlyph(unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)</a> from hal.o(.text._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[112]">touchgfx::HAL::blitCopyGlyph(unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)</a> from hal.o(.text._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[293]">touchgfx::HAL::InvalidateCache()</a> from hal.o(.text._ZN8touchgfx3HAL15InvalidateCacheEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[118]">touchgfx::HAL::backPorchExited()</a> from hal.o(.text._ZN8touchgfx3HAL15backPorchExitedEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[118]">touchgfx::HAL::backPorchExited()</a> from hal.o(.text._ZN8touchgfx3HAL15backPorchExitedEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[118]">touchgfx::HAL::backPorchExited()</a> from hal.o(.text._ZN8touchgfx3HAL15backPorchExitedEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[10a]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(.text._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[10a]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(.text._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[10a]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(.text._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[111]">touchgfx::HAL::blitCopyARGB8888(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</a> from hal.o(.text._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[111]">touchgfx::HAL::blitCopyARGB8888(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</a> from hal.o(.text._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[111]">touchgfx::HAL::blitCopyARGB8888(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</a> from hal.o(.text._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[291]">touchgfx::HAL::flushFrameBuffer(touchgfx::Rect const&)</a> from hal.o(.text._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[290]">touchgfx::HAL::flushFrameBuffer()</a> from hal.o(.text._ZN8touchgfx3HAL16flushFrameBufferEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[108]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(.text._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[108]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(.text._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[108]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(.text._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[122]">touchgfx::HAL::getTFTCurrentLine()</a> from hal.o(.text._ZN8touchgfx3HAL17getTFTCurrentLineEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[122]">touchgfx::HAL::getTFTCurrentLine()</a> from hal.o(.text._ZN8touchgfx3HAL17getTFTCurrentLineEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[122]">touchgfx::HAL::getTFTCurrentLine()</a> from hal.o(.text._ZN8touchgfx3HAL17getTFTCurrentLineEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[10b]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(.text._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[10b]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(.text._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[10b]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(.text._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[116]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)</a> from hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[116]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)</a> from hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[116]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)</a> from hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[117]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned int)</a> from hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtj) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[117]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned int)</a> from hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtj) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[117]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned int)</a> from hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtj) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[115]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(.text._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[115]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(.text._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[115]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(.text._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[104]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from hal.o(.text._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[104]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from hal.o(.text._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[104]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from hal.o(.text._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[11f]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[11f]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[11f]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[124]">touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[124]">touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[124]">touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[125]">touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)</a> from hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[125]">touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)</a> from hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[125]">touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)</a> from hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[11e]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[11e]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[11e]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from touchgfxhal.o(.text._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[12c]">touchgfx::HAL::performDisplayOrientationChange()</a> from hal.o(.text._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[12c]">touchgfx::HAL::performDisplayOrientationChange()</a> from hal.o(.text._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[12c]">touchgfx::HAL::performDisplayOrientationChange()</a> from hal.o(.text._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[126]">touchgfx::HAL::tick()</a> from hal.o(.text._ZN8touchgfx3HAL4tickEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[126]">touchgfx::HAL::tick()</a> from hal.o(.text._ZN8touchgfx3HAL4tickEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[126]">touchgfx::HAL::tick()</a> from hal.o(.text._ZN8touchgfx3HAL4tickEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[12a]">touchgfx::HAL::touch(int, int)</a> from hal.o(.text._ZN8touchgfx3HAL5touchEii) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[12a]">touchgfx::HAL::touch(int, int)</a> from hal.o(.text._ZN8touchgfx3HAL5touchEii) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[12a]">touchgfx::HAL::touch(int, int)</a> from hal.o(.text._ZN8touchgfx3HAL5touchEii) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[12b]">touchgfx::HAL::noTouch()</a> from hal.o(.text._ZN8touchgfx3HAL7noTouchEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[12b]">touchgfx::HAL::noTouch()</a> from hal.o(.text._ZN8touchgfx3HAL7noTouchEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[12b]">touchgfx::HAL::noTouch()</a> from hal.o(.text._ZN8touchgfx3HAL7noTouchEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[110]">touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthb) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[110]">touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthb) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[110]">touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthb) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[10f]">touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[10f]">touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[10f]">touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)</a> from hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[114]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</a> from hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[114]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</a> from hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[114]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</a> from hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[113]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat)</a> from hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[113]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat)</a> from hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[113]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat)</a> from hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[128]">touchgfx::HAL::endFrame()</a> from hal.o(.text._ZN8touchgfx3HAL8endFrameEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[128]">touchgfx::HAL::endFrame()</a> from hal.o(.text._ZN8touchgfx3HAL8endFrameEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[128]">touchgfx::HAL::endFrame()</a> from hal.o(.text._ZN8touchgfx3HAL8endFrameEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[109]">touchgfx::HAL::flushDMA()</a> from hal.o(.text._ZN8touchgfx3HAL8flushDMAEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[109]">touchgfx::HAL::flushDMA()</a> from hal.o(.text._ZN8touchgfx3HAL8flushDMAEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[109]">touchgfx::HAL::flushDMA()</a> from hal.o(.text._ZN8touchgfx3HAL8flushDMAEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[292]">touchgfx::HAL::blockCopy(void*, void const*, unsigned int)</a> from hal.o(.text._ZN8touchgfx3HAL9blockCopyEPvPKvj) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[11d]">touchgfx::HAL::sampleKey(unsigned char&)</a> from hal.o(.text._ZN8touchgfx3HAL9sampleKeyERh) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[11d]">touchgfx::HAL::sampleKey(unsigned char&)</a> from hal.o(.text._ZN8touchgfx3HAL9sampleKeyERh) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[11d]">touchgfx::HAL::sampleKey(unsigned char&)</a> from hal.o(.text._ZN8touchgfx3HAL9sampleKeyERh) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[121]">touchgfx::HAL::taskDelay(unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL9taskDelayEt) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[121]">touchgfx::HAL::taskDelay(unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL9taskDelayEt) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[121]">touchgfx::HAL::taskDelay(unsigned short)</a> from hal.o(.text._ZN8touchgfx3HAL9taskDelayEt) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[105]">touchgfx::HAL::taskEntry()</a> from hal.o(.text._ZN8touchgfx3HAL9taskEntryEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[105]">touchgfx::HAL::taskEntry()</a> from hal.o(.text._ZN8touchgfx3HAL9taskEntryEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[105]">touchgfx::HAL::taskEntry()</a> from hal.o(.text._ZN8touchgfx3HAL9taskEntryEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[28f]">touchgfx::HAL::~HAL__deallocating()</a> from hal.o(.text._ZN8touchgfx3HALD0Ev) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[28e]">touchgfx::HAL::~HAL__sub_object()</a> from hal.o(.text._ZN8touchgfx3HALD2Ev) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[311]">touchgfx::LCD::drawTextureMapScanLine(touchgfx::DrawingSurface const&, touchgfx::Gradients const&, touchgfx::Edge const*, touchgfx::Edge const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)</a> from lcd.o(.text._ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[30f]">touchgfx::LCD::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)</a> from lcd.o(.text._ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[2c8]">touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA10writePixelEPtPKtsiih)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA10writePixelEPtPKhPKtsiih)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA10writePixelEPtPKhS4_siih)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA10writePixelEPtPKtPKhsiih)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA10writePixelEPtPKjsiih)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA10writePixelEPtPKtPKhsii)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA10writePixelEPtPKjsii)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA10writePixelEPtPKhPKjsiih)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA10writePixelEPtPKhS4_siihhh)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKtPKhsiihhh)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA10writePixelEPtPKhPKjsii)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKjssiihhh)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKtsiihh)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKjsiihh)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKhPKjsiihhh)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKjsiihh)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKjssiihh)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh)
 <LI><a href="#[d6]">touchgfx::LCD::div255(unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE)
 <LI><a href="#[301]">touchgfx::LCD::~LCD__sub_object()</a> from lcd16bpp.o(.text._ZN8touchgfx3LCDD2Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[d3]">touchgfx::Edge::Edge(touchgfx::Gradients const&, touchgfx::Point3D const*, int, int)</a> from texturemaptypes.o(.text._ZN8touchgfx4EdgeC2ERKNS_9GradientsEPKNS_7Point3DEii) referenced from lcd.o(.text._ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht)
 <LI><a href="#[319]">touchgfx::Font::~Font__sub_object()</a> from constfont.o(.text._ZN8touchgfx4FontD2Ev) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[296]">touchgfx::View&lang;screenPresenter&rang;::~View__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx4ViewI15screenPresenterED0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[295]">touchgfx::View&lang;screenPresenter&rang;::~View__sub_object()</a> from screenview.o(.text._ZN8touchgfx4ViewI15screenPresenterED2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[299]">touchgfx::View&lang;Screen1Presenter&rang;::~View__deallocating()</a> from screen1viewbase.o(.text._ZN8touchgfx4ViewI16Screen1PresenterED0Ev) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[298]">touchgfx::View&lang;Screen1Presenter&rang;::~View__sub_object()</a> from screen1view.o(.text._ZN8touchgfx4ViewI16Screen1PresenterED2Ev) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[180]">touchgfx::Event::~Event__sub_object()</a> from screen.o(.text._ZN8touchgfx5EventD2Ev) referenced from screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
 <LI><a href="#[180]">touchgfx::Event::~Event__sub_object()</a> from screen.o(.text._ZN8touchgfx5EventD2Ev) referenced from screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
 <LI><a href="#[180]">touchgfx::Event::~Event__sub_object()</a> from screen.o(.text._ZN8touchgfx5EventD2Ev) referenced from screen.o(.rodata._ZTVN8touchgfx9DragEventE)
 <LI><a href="#[d4]">touchgfx::Image::setBitmap(touchgfx::Bitmap const&)</a> from image.o(.text._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[d4]">touchgfx::Image::setBitmap(touchgfx::Bitmap const&)</a> from image.o(.text._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[d4]">touchgfx::Image::setBitmap(touchgfx::Bitmap const&)</a> from image.o(.text._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced from slider.o(.text._ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_)
 <LI><a href="#[29a]">touchgfx::Image::~Image__deallocating()</a> from image.o(.text._ZN8touchgfx5ImageD0Ev) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[23f]">touchgfx::Button::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&)</a> from button.o(.text._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[29c]">touchgfx::Canvas::~Canvas__deallocating()</a> from canvas.o(.text._ZN8touchgfx6CanvasD0Ev) referenced from canvas.o(.rodata._ZTVN8touchgfx6CanvasE)
 <LI><a href="#[29b]">touchgfx::Canvas::~Canvas__sub_object()</a> from canvas.o(.text._ZN8touchgfx6CanvasD2Ev) referenced from canvas.o(.rodata._ZTVN8touchgfx6CanvasE)
 <LI><a href="#[29d]">touchgfx::Circle::~Circle__deallocating()</a> from circle.o(.text._ZN8touchgfx6CircleD0Ev) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[297]">touchgfx::Screen::setupScreen()</a> from screen.o(.text._ZN8touchgfx6Screen11setupScreenEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[297]">touchgfx::Screen::setupScreen()</a> from screen.o(.text._ZN8touchgfx6Screen11setupScreenEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[297]">touchgfx::Screen::setupScreen()</a> from screen.o(.text._ZN8touchgfx6Screen11setupScreenEv) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[fe]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(.text._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[fe]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(.text._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[fe]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(.text._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[fe]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(.text._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[fe]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(.text._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[fe]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(.text._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[fe]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(.text._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[139]">touchgfx::Screen::tearDownScreen()</a> from screen.o(.text._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[139]">touchgfx::Screen::tearDownScreen()</a> from screen.o(.text._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[139]">touchgfx::Screen::tearDownScreen()</a> from screen.o(.text._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[139]">touchgfx::Screen::tearDownScreen()</a> from screen.o(.text._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[139]">touchgfx::Screen::tearDownScreen()</a> from screen.o(.text._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[f8]">touchgfx::Screen::afterTransition()</a> from screen.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[f8]">touchgfx::Screen::afterTransition()</a> from screen.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[f8]">touchgfx::Screen::afterTransition()</a> from screen.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[f8]">touchgfx::Screen::afterTransition()</a> from screen.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[f8]">touchgfx::Screen::afterTransition()</a> from screen.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[f8]">touchgfx::Screen::afterTransition()</a> from screen.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[f8]">touchgfx::Screen::afterTransition()</a> from screen.o(.text._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[fb]">touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[fb]">touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[fb]">touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[fb]">touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[fb]">touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[fb]">touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[fb]">touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[fd]">touchgfx::Screen::handleTickEvent()</a> from screen.o(.text._ZN8touchgfx6Screen15handleTickEventEv) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[fd]">touchgfx::Screen::handleTickEvent()</a> from screen.o(.text._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[fd]">touchgfx::Screen::handleTickEvent()</a> from screen.o(.text._ZN8touchgfx6Screen15handleTickEventEv) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[fd]">touchgfx::Screen::handleTickEvent()</a> from screen.o(.text._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[fd]">touchgfx::Screen::handleTickEvent()</a> from screen.o(.text._ZN8touchgfx6Screen15handleTickEventEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[fd]">touchgfx::Screen::handleTickEvent()</a> from screen.o(.text._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[fd]">touchgfx::Screen::handleTickEvent()</a> from screen.o(.text._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[fa]">touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[fa]">touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[fa]">touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[fa]">touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[fa]">touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[fa]">touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[fa]">touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[fc]">touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[fc]">touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[fc]">touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[fc]">touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[fc]">touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[fc]">touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[fc]">touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)</a> from screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[f6]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screenview.o(.rodata._ZTV10screenView)
 <LI><a href="#[f6]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen1view.o(.rodata._ZTV11Screen1View)
 <LI><a href="#[f6]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTV14screenViewBase)
 <LI><a href="#[f6]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
 <LI><a href="#[f6]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
 <LI><a href="#[f6]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[f6]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[2a1]">touchgfx::Screen::~Screen__deallocating()</a> from screen.o(.text._ZN8touchgfx6ScreenD0Ev) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[2a0]">touchgfx::Screen::~Screen__sub_object()</a> from screen.o(.text._ZN8touchgfx6ScreenD2Ev) referenced from screen.o(.rodata._ZTVN8touchgfx6ScreenE)
 <LI><a href="#[2ad]">touchgfx::Slider::setValueRange(int, int)</a> from slider.o(.text._ZN8touchgfx6Slider13setValueRangeEii) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2aa]">touchgfx::Slider::setValueRange(int, int, int)</a> from slider.o(.text._ZN8touchgfx6Slider13setValueRangeEiii) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2a5]">touchgfx::Slider::handleDragEvent(touchgfx::DragEvent const&)</a> from slider.o(.text._ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2a4]">touchgfx::Slider::handleClickEvent(touchgfx::ClickEvent const&)</a> from slider.o(.text._ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2a7]">touchgfx::Slider::setupVerticalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</a> from slider.o(.text._ZN8touchgfx6Slider19setupVerticalSliderEttttt) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2a6]">touchgfx::Slider::setupHorizontalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</a> from slider.o(.text._ZN8touchgfx6Slider21setupHorizontalSliderEttttt) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2af]">touchgfx::Slider::updateIndicatorPosition(short)</a> from slider.o(.text._ZN8touchgfx6Slider23updateIndicatorPositionEs) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2ae]">touchgfx::Slider::setValue(int)</a> from slider.o(.text._ZN8touchgfx6Slider8setValueEi) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2a3]">touchgfx::Slider::~Slider__deallocating()</a> from slider.o(.text._ZN8touchgfx6SliderD0Ev) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2a2]">touchgfx::Slider::~Slider__sub_object()</a> from slider.o(.text._ZN8touchgfx6SliderD2Ev) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[1d9]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1d9]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[1d9]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[1d9]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[1d9]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[1d9]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[1d9]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[1d9]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[1d9]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1d9]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[1d9]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[1d9]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[1d9]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[1d9]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1d9]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[2b6]">touchgfx::Widget::~Widget__deallocating()</a> from frontendapplicationbase.o(.text._ZN8touchgfx6WidgetD0Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[2b5]">touchgfx::Widget::~Widget__sub_object()</a> from screen1view.o(.text._ZN8touchgfx6WidgetD2Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[dd]">touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</a> from abstractdatagraph.o(.text._ZN8touchgfx7CWRUtil8muldivQ5ENS0_2Q5ES1_S1_) referenced from graphelements.o(.text._ZNK8touchgfx16GraphElementDots16drawCanvasWidgetERKNS_4RectE)
 <LI><a href="#[2b8]">touchgfx::MVPHeap::~MVPHeap__deallocating()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx7MVPHeapD0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx7MVPHeapE)
 <LI><a href="#[2b7]">touchgfx::MVPHeap::~MVPHeap__sub_object()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx7MVPHeapD2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx7MVPHeapE)
 <LI><a href="#[2ba]">touchgfx::Outline::~Outline__deallocating()</a> from outline.o(.text._ZN8touchgfx7OutlineD0Ev) referenced from outline.o(.rodata._ZTVN8touchgfx7OutlineE)
 <LI><a href="#[2b9]">touchgfx::Outline::~Outline__sub_object()</a> from outline.o(.text._ZN8touchgfx7OutlineD2Ev) referenced from outline.o(.rodata._ZTVN8touchgfx7OutlineE)
 <LI><a href="#[2bd]">touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::execute(touchgfx::AbstractButton const&)</a> from screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[2bc]">touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__deallocating()</a> from screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvED0Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[2bb]">touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__sub_object()</a> from screenview.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvED2Ev) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[2c1]">touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::execute(touchgfx::AbstractButton const&)</a> from screen1viewbase.o(.text._ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[2c0]">touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__deallocating()</a> from screen1viewbase.o(.text._ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[2bf]">touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__sub_object()</a> from screen1view.o(.text._ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED2Ev) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[2c5]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()</a> from frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[2c4]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__deallocating()</a> from frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[2c3]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED2Ev) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[d0]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable11setPositionEssss) referenced from abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[19f]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1d8]">touchgfx::Drawable::getFirstChild()</a> from box.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1d8]">touchgfx::Drawable::getFirstChild()</a> from box.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[1d8]">touchgfx::Drawable::getFirstChild()</a> from box.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[1d8]">touchgfx::Drawable::getFirstChild()</a> from box.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[1d8]">touchgfx::Drawable::getFirstChild()</a> from box.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[1d8]">touchgfx::Drawable::getFirstChild()</a> from box.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[1d8]">touchgfx::Drawable::getFirstChild()</a> from box.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[1d8]">touchgfx::Drawable::getFirstChild()</a> from box.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[1d8]">touchgfx::Drawable::getFirstChild()</a> from box.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1d8]">touchgfx::Drawable::getFirstChild()</a> from box.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[1d8]">touchgfx::Drawable::getFirstChild()</a> from box.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[1d8]">touchgfx::Drawable::getFirstChild()</a> from box.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[1d8]">touchgfx::Drawable::getFirstChild()</a> from box.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[1d8]">touchgfx::Drawable::getFirstChild()</a> from box.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1d8]">touchgfx::Drawable::getFirstChild()</a> from box.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1d8]">touchgfx::Drawable::getFirstChild()</a> from box.o(.text._ZN8touchgfx8Drawable13getFirstChildEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1de]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1de]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[1de]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[1de]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[1de]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[1de]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[1de]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[1de]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1de]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[1de]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[1de]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[1de]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[1de]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1de]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1de]">touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from box.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1dd]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1dd]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[1dd]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[1dd]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[1dd]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[1dd]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[1dd]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[1dd]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[1dd]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[1dd]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[1dd]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1dd]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[1dd]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[1dd]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[1dd]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[1dd]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[1dd]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1dd]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1dd]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1dd]">touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[19e]">touchgfx::Drawable::handleTickEvent()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1dc]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1dc]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[1dc]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[1dc]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[1dc]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[1dc]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[1dc]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[1dc]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[1dc]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[1dc]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1dc]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[1dc]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[1dc]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[1dc]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[1dc]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[1dc]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1dc]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1dc]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1dc]">touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[19c]">touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[19a]">touchgfx::Drawable::childGeometryChanged()</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[192]">touchgfx::Drawable::getSolidRectAbsolute()</a> from drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[196]">touchgfx::Drawable::setX(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[197]">touchgfx::Drawable::setY(short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[d5]">touchgfx::Drawable::setXY(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable5setXYEss) referenced from slider.o(.text._ZN8touchgfx6Slider21setupHorizontalSliderEttttt)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1a0]">touchgfx::Drawable::moveTo(short, short)</a> from abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1da]">touchgfx::Drawable::setWidth(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1db]">touchgfx::Drawable::setHeight(short)</a> from abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[2c7]">touchgfx::Drawable::~Drawable__deallocating()</a> from drawable.o(.text._ZN8touchgfx8DrawableD0Ev) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1d3]">touchgfx::Drawable::~Drawable__sub_object()</a> from box.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1d3]">touchgfx::Drawable::~Drawable__sub_object()</a> from box.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[1d3]">touchgfx::Drawable::~Drawable__sub_object()</a> from box.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[1d3]">touchgfx::Drawable::~Drawable__sub_object()</a> from box.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[1d3]">touchgfx::Drawable::~Drawable__sub_object()</a> from box.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[1d3]">touchgfx::Drawable::~Drawable__sub_object()</a> from box.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[1d3]">touchgfx::Drawable::~Drawable__sub_object()</a> from box.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[1d3]">touchgfx::Drawable::~Drawable__sub_object()</a> from box.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[1d3]">touchgfx::Drawable::~Drawable__sub_object()</a> from box.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[1d3]">touchgfx::Drawable::~Drawable__sub_object()</a> from box.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[1d3]">touchgfx::Drawable::~Drawable__sub_object()</a> from box.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1d3]">touchgfx::Drawable::~Drawable__sub_object()</a> from box.o(.text._ZN8touchgfx8DrawableD2Ev) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[303]">touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[d9]">touchgfx::LCD16bpp::div255_888_FFcheck(unsigned int, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp18div255_888_FFcheckEjh) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKjssiihhh)
 <LI><a href="#[d9]">touchgfx::LCD16bpp::div255_888_FFcheck(unsigned int, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp18div255_888_FFcheckEjh) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKjsiihh)
 <LI><a href="#[d9]">touchgfx::LCD16bpp::div255_888_FFcheck(unsigned int, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp18div255_888_FFcheckEjh) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKjssiihh)
 <LI><a href="#[d8]">touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp20bilinearInterpolate8Ehhhhhh) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh)
 <LI><a href="#[d8]">touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp20bilinearInterpolate8Ehhhhhh) referenced from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh)
 <LI><a href="#[310]">touchgfx::LCD16bpp::getTextureMapperDrawScanLine(touchgfx::TextureSurface const&, unsigned short, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[306]">touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[2ca]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
 <LI><a href="#[2c9]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
 <LI><a href="#[2cc]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
 <LI><a href="#[2cb]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
 <LI><a href="#[2ce]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
 <LI><a href="#[2cd]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
 <LI><a href="#[2d0]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
 <LI><a href="#[2cf]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
 <LI><a href="#[2d2]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[2d1]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[2d4]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[2d3]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[2d6]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[2d5]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[2d8]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[2d7]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[2da]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[2d9]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[2dc]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[2db]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[2de]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[2dd]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[2e0]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[2df]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[2e2]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[2e1]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[2e4]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[2e3]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[2e6]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[2e5]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[2e8]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[2e7]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[2ea]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[2e9]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[2ec]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[2eb]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[2ee]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[2ed]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[2f0]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[2ef]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[2f2]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[2f1]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[2f4]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[2f3]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[2f6]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[2f5]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[2f8]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[2f7]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[2fa]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[2f9]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[2fc]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[2fb]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[2fe]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[2fd]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[300]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[2ff]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[305]">touchgfx::LCD16bpp::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[304]">touchgfx::LCD16bpp::blitCopy(unsigned short const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[307]">touchgfx::LCD16bpp::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[312]">touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[302]">touchgfx::LCD16bpp::~LCD16bpp__deallocating()</a> from lcd16bpp.o(.text._ZN8touchgfx8LCD16bppD0Ev) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[be]">touchgfx::LCD16bpp::~LCD16bpp__sub_object()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx8LCD16bppD2Ev) referenced 2 times from touchgfxconfiguration.o(.text)
 <LI><a href="#[314]">touchgfx::Scanline::~Scanline__deallocating()</a> from scanline.o(.text._ZN8touchgfx8ScanlineD0Ev) referenced from scanline.o(.rodata._ZTVN8touchgfx8ScanlineE)
 <LI><a href="#[313]">touchgfx::Scanline::~Scanline__sub_object()</a> from scanline.o(.text._ZN8touchgfx8ScanlineD2Ev) referenced from scanline.o(.rodata._ZTVN8touchgfx8ScanlineE)
 <LI><a href="#[281]">touchgfx::TextArea::setBaselineY(short)</a> from textarea.o(.text._ZN8touchgfx8TextArea12setBaselineYEs) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[281]">touchgfx::TextArea::setBaselineY(short)</a> from textarea.o(.text._ZN8touchgfx8TextArea12setBaselineYEs) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[317]">touchgfx::TextArea::getTextHeight()</a> from textarea.o(.text._ZN8touchgfx8TextArea13getTextHeightEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[282]">touchgfx::TextArea::setXBaselineY(short, short)</a> from textarea.o(.text._ZN8touchgfx8TextArea13setXBaselineYEss) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[282]">touchgfx::TextArea::setXBaselineY(short, short)</a> from textarea.o(.text._ZN8touchgfx8TextArea13setXBaselineYEss) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[315]">touchgfx::TextArea::~TextArea__deallocating()</a> from textarea.o(.text._ZN8touchgfx8TextAreaD0Ev) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[27d]">touchgfx::TextArea::~TextArea__sub_object()</a> from textarea.o(.text._ZN8touchgfx8TextAreaD2Ev) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[27d]">touchgfx::TextArea::~TextArea__sub_object()</a> from textarea.o(.text._ZN8touchgfx8TextAreaD2Ev) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[31a]">touchgfx::ConstFont::~ConstFont__deallocating()</a> from constfont.o(.text._ZN8touchgfx9ConstFontD0Ev) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1a8]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1a8]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[1a8]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1a8]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[1a8]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[1a8]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1a8]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[1a8]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[1a8]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</a> from container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[193]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[193]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[193]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[193]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[193]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[193]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[193]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[193]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[193]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[191]">touchgfx::Container::getFirstChild()</a> from abstractdatagraph.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[191]">touchgfx::Container::getFirstChild()</a> from abstractdatagraph.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[191]">touchgfx::Container::getFirstChild()</a> from abstractdatagraph.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[191]">touchgfx::Container::getFirstChild()</a> from abstractdatagraph.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[191]">touchgfx::Container::getFirstChild()</a> from abstractdatagraph.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[191]">touchgfx::Container::getFirstChild()</a> from abstractdatagraph.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[191]">touchgfx::Container::getFirstChild()</a> from abstractdatagraph.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[191]">touchgfx::Container::getFirstChild()</a> from abstractdatagraph.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[191]">touchgfx::Container::getFirstChild()</a> from abstractdatagraph.o(.text._ZN8touchgfx9Container13getFirstChildEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1a1]">touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1a1]">touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[1a1]">touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1a1]">touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[1a1]">touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1a1]">touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[1a1]">touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[1a1]">touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</a> from container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1aa]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1aa]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[1aa]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1aa]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[1aa]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[1aa]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1aa]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[1aa]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[1aa]">touchgfx::Container::moveChildrenRelative(short, short)</a> from container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1a2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1a2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[1a2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1a2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[1a2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[1a2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1a2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[1a2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[1a2]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1a7]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1a7]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[1a7]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1a7]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[1a7]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[1a7]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1a7]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[1a7]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[1a7]">touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1a3]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1a3]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[1a3]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1a3]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[1a3]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[1a3]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1a3]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[1a3]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[1a3]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1a5]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1a5]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[1a5]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1a5]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[1a5]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[1a5]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1a5]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[1a5]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[1a5]">touchgfx::Container::unlink()</a> from container.o(.text._ZN8touchgfx9Container6unlinkEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1a6]">touchgfx::Container::contains(touchgfx::Drawable const&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1a6]">touchgfx::Container::contains(touchgfx::Drawable const&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[1a6]">touchgfx::Container::contains(touchgfx::Drawable const&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1a6]">touchgfx::Container::contains(touchgfx::Drawable const&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[1a6]">touchgfx::Container::contains(touchgfx::Drawable const&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[1a6]">touchgfx::Container::contains(touchgfx::Drawable const&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1a6]">touchgfx::Container::contains(touchgfx::Drawable const&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[1a6]">touchgfx::Container::contains(touchgfx::Drawable const&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[1a6]">touchgfx::Container::contains(touchgfx::Drawable const&)</a> from container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1a4]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1a4]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[1a4]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1a4]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[1a4]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[1a4]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1a4]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[1a4]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[1a4]">touchgfx::Container::removeAll()</a> from container.o(.text._ZN8touchgfx9Container9removeAllEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[31c]">touchgfx::Container::~Container__deallocating()</a> from container.o(.text._ZN8touchgfx9ContainerD0Ev) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[260]">touchgfx::DMA_Queue::~DMA_Queue__sub_object()</a> from dma.o(.text._ZN8touchgfx9DMA_QueueD2Ev) referenced from dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[31d]">touchgfx::DragEvent::getEventType()</a> from screen.o(.text._ZN8touchgfx9DragEvent12getEventTypeEv) referenced from screen.o(.rodata._ZTVN8touchgfx9DragEventE)
 <LI><a href="#[31e]">touchgfx::DragEvent::~DragEvent__deallocating()</a> from screen.o(.text._ZN8touchgfx9DragEventD0Ev) referenced from screen.o(.rodata._ZTVN8touchgfx9DragEventE)
 <LI><a href="#[322]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[323]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[320]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__deallocating()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[31f]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__sub_object()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[328]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[329]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[326]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__deallocating()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[325]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__sub_object()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[32e]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[32f]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[32c]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__deallocating()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[32b]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__sub_object()</a> from touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED2Ev) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[332]">touchgfx::Presenter::deactivate()</a> from screen1presenter.o(.text._ZN8touchgfx9Presenter10deactivateEv) referenced from screen1presenter.o(.rodata._ZTVN8touchgfx9PresenterE)
 <LI><a href="#[331]">touchgfx::Presenter::activate()</a> from screen1presenter.o(.text._ZN8touchgfx9Presenter8activateEv) referenced from screen1presenter.o(.rodata._ZTVN8touchgfx9PresenterE)
 <LI><a href="#[334]">touchgfx::Presenter::~Presenter__deallocating()</a> from screen1presenter.o(.text._ZN8touchgfx9PresenterD0Ev) referenced from screen1presenter.o(.rodata._ZTVN8touchgfx9PresenterE)
 <LI><a href="#[333]">touchgfx::Presenter::~Presenter__sub_object()</a> from screen1presenter.o(.text._ZN8touchgfx9PresenterD2Ev) referenced from screen1presenter.o(.rodata._ZTVN8touchgfx9PresenterE)
 <LI><a href="#[336]">touchgfx::TypedText::~TypedText__deallocating()</a> from buttonwithlabel.o(.text._ZN8touchgfx9TypedTextD0Ev) referenced from fontcache.o(.rodata._ZTVN8touchgfx9TypedTextE)
 <LI><a href="#[335]">touchgfx::TypedText::~TypedText__sub_object()</a> from buttonwithlabel.o(.text._ZN8touchgfx9TypedTextD2Ev) referenced from fontcache.o(.rodata._ZTVN8touchgfx9TypedTextE)
 <LI><a href="#[346]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::saveVFPAsX()</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE10saveVFPAsXEv) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[33d]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getFloatReg(int)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE11getFloatRegEi) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[33e]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setFloatReg(int, unsigned long long)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE11setFloatRegEiy) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[342]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::isSignalFrame()</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE13isSignalFrameEv) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[33c]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::validFloatReg(int)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE13validFloatRegEi) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[343]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getFunctionName(char*, unsigned int, unsigned int*)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE15getFunctionNameEPcjPj) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[345]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getRegisterName(int)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE15getRegisterNameEi) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[344]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE24setInfoBasedOnIPRegisterEb) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[33f]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::step()</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE4stepEv) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[33a]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getReg(int)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE6getRegEi) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[341]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::jumpto()</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE6jumptoEv) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[33b]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setReg(int, unsigned int)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE6setRegEij) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[340]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfo(unw_proc_info_t*)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE7getInfoEP15unw_proc_info_t) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[339]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::validReg(int)</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE8validRegEi) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[338]">libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::~UnwindCursor__deallocating()</a> from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEED0Ev) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[337]">libunwind::AbstractUnwindCursor::~AbstractUnwindCursor__sub_object()</a> from libunwind.cpp.o(.text._ZN9libunwind20AbstractUnwindCursorD2Ev) referenced from libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
 <LI><a href="#[175]">__cxxabiv1::__shim_type_info::noop1() const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv116__shim_type_info5noop1Ev) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
 <LI><a href="#[175]">__cxxabiv1::__shim_type_info::noop1() const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv116__shim_type_info5noop1Ev) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
 <LI><a href="#[176]">__cxxabiv1::__shim_type_info::noop2() const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv116__shim_type_info5noop2Ev) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
 <LI><a href="#[176]">__cxxabiv1::__shim_type_info::noop2() const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv116__shim_type_info5noop2Ev) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
 <LI><a href="#[178]">__cxxabiv1::__class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
 <LI><a href="#[179]">__cxxabiv1::__class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
 <LI><a href="#[17a]">__cxxabiv1::__class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
 <LI><a href="#[177]">__cxxabiv1::__class_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
 <LI><a href="#[177]">__cxxabiv1::__class_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
 <LI><a href="#[17c]">__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
 <LI><a href="#[17d]">__cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
 <LI><a href="#[17e]">__cxxabiv1::__si_class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const</a> from private_typeinfo.cpp.o(.text._ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi) referenced from private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
 <LI><a href="#[10c]">TouchGFXHAL::getTFTFrameBuffer() const</a> from touchgfxhal.o(.text) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[167]">TouchGFXGeneratedHAL::getTFTFrameBuffer() const</a> from touchgfxgeneratedhal.o(.text) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[1e0]">touchgfx::CanvasWidget::getPainter() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10getPainterEv) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1e0]">touchgfx::CanvasWidget::getPainter() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10getPainterEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[1e0]">touchgfx::CanvasWidget::getPainter() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10getPainterEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[1e0]">touchgfx::CanvasWidget::getPainter() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10getPainterEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[1e0]">touchgfx::CanvasWidget::getPainter() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10getPainterEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[1e0]">touchgfx::CanvasWidget::getPainter() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10getPainterEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[1e0]">touchgfx::CanvasWidget::getPainter() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10getPainterEv) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[1d7]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1d7]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[1d7]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[1d7]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[1d7]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[1d7]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[1d7]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[1d6]">touchgfx::CanvasWidget::getSolidRect() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1d6]">touchgfx::CanvasWidget::getSolidRect() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[1d6]">touchgfx::CanvasWidget::getSolidRect() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[1d6]">touchgfx::CanvasWidget::getSolidRect() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[1d6]">touchgfx::CanvasWidget::getSolidRect() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[1d6]">touchgfx::CanvasWidget::getSolidRect() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[1d6]">touchgfx::CanvasWidget::getSolidRect() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[1e3]">touchgfx::CanvasWidget::getMinimalRect() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1e3]">touchgfx::CanvasWidget::getMinimalRect() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[1e3]">touchgfx::CanvasWidget::getMinimalRect() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[1e3]">touchgfx::CanvasWidget::getMinimalRect() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[1e3]">touchgfx::CanvasWidget::getMinimalRect() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[1e3]">touchgfx::CanvasWidget::getMinimalRect() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[1d5]">touchgfx::CanvasWidget::draw(touchgfx::Rect const&) const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1d5]">touchgfx::CanvasWidget::draw(touchgfx::Rect const&) const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[1d5]">touchgfx::CanvasWidget::draw(touchgfx::Rect const&) const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[1d5]">touchgfx::CanvasWidget::draw(touchgfx::Rect const&) const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[1d5]">touchgfx::CanvasWidget::draw(touchgfx::Rect const&) const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[1d5]">touchgfx::CanvasWidget::draw(touchgfx::Rect const&) const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[1e2]">touchgfx::CanvasWidget::getAlpha() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1e2]">touchgfx::CanvasWidget::getAlpha() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[1e2]">touchgfx::CanvasWidget::getAlpha() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[1e2]">touchgfx::CanvasWidget::getAlpha() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[1e2]">touchgfx::CanvasWidget::getAlpha() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[1e2]">touchgfx::CanvasWidget::getAlpha() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[1e2]">touchgfx::CanvasWidget::getAlpha() const</a> from canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[1fc]">touchgfx::GeneratedFont::getKerning(unsigned short, touchgfx::GlyphNode const*) const</a> from generatedfont.o(.text) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[1fe]">touchgfx::GeneratedFont::getGSUBTable() const</a> from generatedfont.o(.text._ZNK8touchgfx13GeneratedFont12getGSUBTableEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[1ff]">touchgfx::GeneratedFont::getPixelData(touchgfx::GlyphNode const*) const</a> from generatedfont.o(.text) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[23e]">touchgfx::AbstractButton::getPressedState() const</a> from button.o(.text._ZNK8touchgfx14AbstractButton15getPressedStateEv) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[228]">touchgfx::CircleProgress::getEndAngle() const</a> from circleprogress.o(.text._ZNK8touchgfx14CircleProgress11getEndAngleEv) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[223]">touchgfx::CircleProgress::getLineWidth() const</a> from circleprogress.o(.text._ZNK8touchgfx14CircleProgress12getLineWidthEv) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[227]">touchgfx::CircleProgress::getStartAngle() const</a> from circleprogress.o(.text._ZNK8touchgfx14CircleProgress13getStartAngleEv) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[225]">touchgfx::CircleProgress::getCapPrecision() const</a> from circleprogress.o(.text._ZNK8touchgfx14CircleProgress15getCapPrecisionEv) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[22a]">touchgfx::CircleProgress::getAlpha() const</a> from circleprogress.o(.text._ZNK8touchgfx14CircleProgress8getAlphaEv) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[21f]">touchgfx::CircleProgress::getCenter(int&, int&) const</a> from circleprogress.o(.text._ZNK8touchgfx14CircleProgress9getCenterERiS1_) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[221]">touchgfx::CircleProgress::getRadius() const</a> from circleprogress.o(.text._ZNK8touchgfx14CircleProgress9getRadiusEv) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[230]">touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::getSolidRect() const</a> from frontendapplicationbase.o(.text._ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[22f]">touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::draw(touchgfx::Rect const&) const</a> from frontendapplicationbase.o(.text._ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[204]">touchgfx::AbstractPainter::getAlpha() const</a> from abstractpainterrgb565.o(.text._ZNK8touchgfx15AbstractPainter8getAlphaEv) referenced from painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[204]">touchgfx::AbstractPainter::getAlpha() const</a> from abstractpainterrgb565.o(.text._ZNK8touchgfx15AbstractPainter8getAlphaEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx15AbstractPainterE)
 <LI><a href="#[204]">touchgfx::AbstractPainter::getAlpha() const</a> from abstractpainterrgb565.o(.text._ZNK8touchgfx15AbstractPainter8getAlphaEv) referenced from painterrgb565bitmap.o(.rodata._ZTVN8touchgfx19PainterRGB565BitmapE)
 <LI><a href="#[204]">touchgfx::AbstractPainter::getAlpha() const</a> from abstractpainterrgb565.o(.text._ZNK8touchgfx15AbstractPainter8getAlphaEv) referenced from abstractpainterrgb565.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[23a]">touchgfx::ButtonWithLabel::draw(touchgfx::Rect const&) const</a> from buttonwithlabel.o(.text._ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[1d2]">touchgfx::DataGraphScroll::indexToXQ5(short) const</a> from graphscroll.o(.text._ZNK8touchgfx15DataGraphScroll10indexToXQ5Es) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1d2]">touchgfx::DataGraphScroll::indexToXQ5(short) const</a> from graphscroll.o(.text._ZNK8touchgfx15DataGraphScroll10indexToXQ5Es) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1b8]">touchgfx::DataGraphScroll::indexToGlobalIndex(short) const</a> from graphscroll.o(.text._ZNK8touchgfx15DataGraphScroll18indexToGlobalIndexEs) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1b8]">touchgfx::DataGraphScroll::indexToGlobalIndex(short) const</a> from graphscroll.o(.text._ZNK8touchgfx15DataGraphScroll18indexToGlobalIndexEs) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1cf]">touchgfx::DataGraphScroll::realIndex(short) const</a> from graphscroll.o(.text._ZNK8touchgfx15DataGraphScroll9realIndexEs) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1cf]">touchgfx::DataGraphScroll::realIndex(short) const</a> from graphscroll.o(.text._ZNK8touchgfx15DataGraphScroll9realIndexEs) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[24b]">touchgfx::GraphElementDots::drawCanvasWidget(touchgfx::Rect const&) const</a> from graphelements.o(.text._ZNK8touchgfx16GraphElementDots16drawCanvasWidgetERKNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[24e]">touchgfx::GraphElementLine::drawCanvasWidget(touchgfx::Rect const&) const</a> from graphelements.o(.text._ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[253]">touchgfx::AbstractDataGraph::indexToGlobalIndex(short) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph18indexToGlobalIndexEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[253]">touchgfx::AbstractDataGraph::indexToGlobalIndex(short) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph18indexToGlobalIndexEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[254]">touchgfx::AbstractDataGraph::getXAxisScaleScaled() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph19getXAxisScaleScaledEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[255]">touchgfx::AbstractDataGraph::getXAxisOffsetScaled() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph20getXAxisOffsetScaledEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[1b7]">touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1b7]">touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1b7]">touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[1b7]">touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[25a]">touchgfx::AbstractPartition::getAllocationCount() const</a> from abstractpartition.o(.text._ZNK8touchgfx17AbstractPartition18getAllocationCountEv) referenced from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[25a]">touchgfx::AbstractPartition::getAllocationCount() const</a> from abstractpartition.o(.text._ZNK8touchgfx17AbstractPartition18getAllocationCountEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[25a]">touchgfx::AbstractPartition::getAllocationCount() const</a> from abstractpartition.o(.text._ZNK8touchgfx17AbstractPartition18getAllocationCountEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[25a]">touchgfx::AbstractPartition::getAllocationCount() const</a> from abstractpartition.o(.text._ZNK8touchgfx17AbstractPartition18getAllocationCountEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[26a]">touchgfx::CacheableContainer::invalidateRect(touchgfx::Rect&) const</a> from cacheablecontainer.o(.text._ZNK8touchgfx18CacheableContainer14invalidateRectERNS_4RectE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[274]">touchgfx::GraphElementHistogram::draw(touchgfx::Rect const&) const</a> from graphelements.o(.text._ZNK8touchgfx21GraphElementHistogram4drawERKNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[1c0]">touchgfx::AbstractDataGraphWithY::indexToScreenXQ5(short) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY16indexToScreenXQ5Es) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1c0]">touchgfx::AbstractDataGraphWithY::indexToScreenXQ5(short) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY16indexToScreenXQ5Es) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1c0]">touchgfx::AbstractDataGraphWithY::indexToScreenXQ5(short) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY16indexToScreenXQ5Es) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1c1]">touchgfx::AbstractDataGraphWithY::indexToScreenYQ5(short) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY16indexToScreenYQ5Es) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1c1]">touchgfx::AbstractDataGraphWithY::indexToScreenYQ5(short) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY16indexToScreenYQ5Es) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1c1]">touchgfx::AbstractDataGraphWithY::indexToScreenYQ5(short) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY16indexToScreenYQ5Es) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1be]">touchgfx::AbstractDataGraphWithY::valueToScreenXQ5(int) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY16valueToScreenXQ5Ei) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1be]">touchgfx::AbstractDataGraphWithY::valueToScreenXQ5(int) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY16valueToScreenXQ5Ei) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1be]">touchgfx::AbstractDataGraphWithY::valueToScreenXQ5(int) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY16valueToScreenXQ5Ei) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1bf]">touchgfx::AbstractDataGraphWithY::valueToScreenYQ5(int) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY16valueToScreenYQ5Ei) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1bf]">touchgfx::AbstractDataGraphWithY::valueToScreenYQ5(int) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY16valueToScreenYQ5Ei) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1bf]">touchgfx::AbstractDataGraphWithY::valueToScreenYQ5(int) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY16valueToScreenYQ5Ei) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1b0]">touchgfx::AbstractDataGraphWithY::getGraphRangeXMax() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY17getGraphRangeXMaxEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1b0]">touchgfx::AbstractDataGraphWithY::getGraphRangeXMax() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY17getGraphRangeXMaxEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1b0]">touchgfx::AbstractDataGraphWithY::getGraphRangeXMax() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY17getGraphRangeXMaxEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1af]">touchgfx::AbstractDataGraphWithY::getGraphRangeXMin() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY17getGraphRangeXMinEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1af]">touchgfx::AbstractDataGraphWithY::getGraphRangeXMin() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY17getGraphRangeXMinEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1af]">touchgfx::AbstractDataGraphWithY::getGraphRangeXMin() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY17getGraphRangeXMinEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1c7]">touchgfx::AbstractDataGraphWithY::getXAxisScaleAsInt() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY18getXAxisScaleAsIntEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1c7]">touchgfx::AbstractDataGraphWithY::getXAxisScaleAsInt() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY18getXAxisScaleAsIntEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1c7]">touchgfx::AbstractDataGraphWithY::getXAxisScaleAsInt() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY18getXAxisScaleAsIntEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1cb]">touchgfx::AbstractDataGraphWithY::getXAxisOffsetAsInt() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY19getXAxisOffsetAsIntEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1cb]">touchgfx::AbstractDataGraphWithY::getXAxisOffsetAsInt() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY19getXAxisOffsetAsIntEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1cb]">touchgfx::AbstractDataGraphWithY::getXAxisOffsetAsInt() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY19getXAxisOffsetAsIntEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1c3]">touchgfx::AbstractDataGraphWithY::getXAxisScaleScaled() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY19getXAxisScaleScaledEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1c3]">touchgfx::AbstractDataGraphWithY::getXAxisScaleScaled() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY19getXAxisScaleScaledEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1c3]">touchgfx::AbstractDataGraphWithY::getXAxisScaleScaled() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY19getXAxisScaleScaledEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1c4]">touchgfx::AbstractDataGraphWithY::getXAxisOffsetScaled() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY20getXAxisOffsetScaledEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1c4]">touchgfx::AbstractDataGraphWithY::getXAxisOffsetScaled() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY20getXAxisOffsetScaledEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1c4]">touchgfx::AbstractDataGraphWithY::getXAxisOffsetScaled() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY20getXAxisOffsetScaledEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1c8]">touchgfx::AbstractDataGraphWithY::getXAxisScaleAsFloat() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY20getXAxisScaleAsFloatEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1c8]">touchgfx::AbstractDataGraphWithY::getXAxisScaleAsFloat() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY20getXAxisScaleAsFloatEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1c8]">touchgfx::AbstractDataGraphWithY::getXAxisScaleAsFloat() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY20getXAxisScaleAsFloatEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1cc]">touchgfx::AbstractDataGraphWithY::getXAxisOffsetAsFloat() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY21getXAxisOffsetAsFloatEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1cc]">touchgfx::AbstractDataGraphWithY::getXAxisOffsetAsFloat() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY21getXAxisOffsetAsFloatEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1cc]">touchgfx::AbstractDataGraphWithY::getXAxisOffsetAsFloat() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY21getXAxisOffsetAsFloatEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1b3]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMaxAsInt() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY22getGraphRangeYMaxAsIntEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1b3]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMaxAsInt() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY22getGraphRangeYMaxAsIntEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1b3]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMaxAsInt() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY22getGraphRangeYMaxAsIntEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1b1]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMinAsInt() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY22getGraphRangeYMinAsIntEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1b1]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMinAsInt() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY22getGraphRangeYMinAsIntEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1b1]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMinAsInt() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY22getGraphRangeYMinAsIntEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1bb]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMaxScaled() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY23getGraphRangeYMaxScaledEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1bb]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMaxScaled() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY23getGraphRangeYMaxScaledEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1bb]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMaxScaled() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY23getGraphRangeYMaxScaledEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1ba]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMinScaled() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY23getGraphRangeYMinScaledEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1ba]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMinScaled() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY23getGraphRangeYMinScaledEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1ba]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMinScaled() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY23getGraphRangeYMinScaledEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1bc]">touchgfx::AbstractDataGraphWithY::indexToDataPointXScaled(short) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY23indexToDataPointXScaledEs) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1bc]">touchgfx::AbstractDataGraphWithY::indexToDataPointXScaled(short) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY23indexToDataPointXScaledEs) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1bc]">touchgfx::AbstractDataGraphWithY::indexToDataPointXScaled(short) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY23indexToDataPointXScaledEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1bd]">touchgfx::AbstractDataGraphWithY::indexToDataPointYScaled(short) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY23indexToDataPointYScaledEs) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1bd]">touchgfx::AbstractDataGraphWithY::indexToDataPointYScaled(short) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY23indexToDataPointYScaledEs) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1bd]">touchgfx::AbstractDataGraphWithY::indexToDataPointYScaled(short) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY23indexToDataPointYScaledEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1b4]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMaxAsFloat() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY24getGraphRangeYMaxAsFloatEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1b4]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMaxAsFloat() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY24getGraphRangeYMaxAsFloatEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1b4]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMaxAsFloat() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY24getGraphRangeYMaxAsFloatEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1b2]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMinAsFloat() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY24getGraphRangeYMinAsFloatEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1b2]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMinAsFloat() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY24getGraphRangeYMinAsFloatEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1b2]">touchgfx::AbstractDataGraphWithY::getGraphRangeYMinAsFloat() const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY24getGraphRangeYMinAsFloatEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1c2]">touchgfx::AbstractDataGraphWithY::xScreenRangeToIndexRange(short, short, short&, short&) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1c2]">touchgfx::AbstractDataGraphWithY::xScreenRangeToIndexRange(short, short, short&, short&) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1c2]">touchgfx::AbstractDataGraphWithY::xScreenRangeToIndexRange(short, short, short&, short&) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[27c]">touchgfx::AbstractDataGraphWithY::realIndex(short) const</a> from abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY9realIndexEs) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[284]">touchgfx::TextAreaWithOneWildcard::getTextWidth() const</a> from textareawithwildcard.o(.text._ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[27f]">touchgfx::TextAreaWithOneWildcard::draw(touchgfx::Rect const&) const</a> from textareawithwildcard.o(.text._ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[276]">touchgfx::AbstractGraphElementNoCWR::drawCanvasWidget(touchgfx::Rect const&) const</a> from graphelements.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[276]">touchgfx::AbstractGraphElementNoCWR::drawCanvasWidget(touchgfx::Rect const&) const</a> from graphelements.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[279]">touchgfx::AbstractGraphElementNoCWR::getColor() const</a> from graphelements.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[279]">touchgfx::AbstractGraphElementNoCWR::getColor() const</a> from graphelements.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[21c]">touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator11getProgressEt) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[21c]">touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator11getProgressEt) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[20d]">touchgfx::AbstractProgressIndicator::getProgressIndicatorX() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[20d]">touchgfx::AbstractProgressIndicator::getProgressIndicatorX() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[20e]">touchgfx::AbstractProgressIndicator::getProgressIndicatorY() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[20e]">touchgfx::AbstractProgressIndicator::getProgressIndicatorY() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[20f]">touchgfx::AbstractProgressIndicator::getProgressIndicatorWidth() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[20f]">touchgfx::AbstractProgressIndicator::getProgressIndicatorWidth() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[210]">touchgfx::AbstractProgressIndicator::getProgressIndicatorHeight() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[210]">touchgfx::AbstractProgressIndicator::getProgressIndicatorHeight() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[214]">touchgfx::AbstractProgressIndicator::getRange(int&, int&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[214]">touchgfx::AbstractProgressIndicator::getRange(int&, int&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[213]">touchgfx::AbstractProgressIndicator::getRange(int&, int&, unsigned short&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[213]">touchgfx::AbstractProgressIndicator::getRange(int&, int&, unsigned short&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[212]">touchgfx::AbstractProgressIndicator::getRange(int&, int&, unsigned short&, unsigned short&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[212]">touchgfx::AbstractProgressIndicator::getRange(int&, int&, unsigned short&, unsigned short&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[217]">touchgfx::AbstractProgressIndicator::getRange(short&, short&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERsS1_) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[217]">touchgfx::AbstractProgressIndicator::getRange(short&, short&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERsS1_) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[216]">touchgfx::AbstractProgressIndicator::getRange(short&, short&, unsigned short&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERsS1_Rt) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[216]">touchgfx::AbstractProgressIndicator::getRange(short&, short&, unsigned short&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERsS1_Rt) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[215]">touchgfx::AbstractProgressIndicator::getRange(short&, short&, unsigned short&, unsigned short&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERsS1_RtS2_) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[215]">touchgfx::AbstractProgressIndicator::getRange(short&, short&, unsigned short&, unsigned short&) const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERsS1_RtS2_) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[21b]">touchgfx::AbstractProgressIndicator::getValue() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getValueEv) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[21b]">touchgfx::AbstractProgressIndicator::getValue() const</a> from abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getValueEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[28d]">touchgfx::Box::getSolidRect() const</a> from box.o(.text._ZNK8touchgfx3Box12getSolidRectEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[28c]">touchgfx::Box::draw(touchgfx::Rect const&) const</a> from box.o(.text._ZNK8touchgfx3Box4drawERKNS_4RectE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[120]">touchgfx::HAL::getFlashDataReader() const</a> from hal.o(.text._ZNK8touchgfx3HAL18getFlashDataReaderEv) referenced from touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
 <LI><a href="#[120]">touchgfx::HAL::getFlashDataReader() const</a> from hal.o(.text._ZNK8touchgfx3HAL18getFlashDataReaderEv) referenced from touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
 <LI><a href="#[120]">touchgfx::HAL::getFlashDataReader() const</a> from hal.o(.text._ZNK8touchgfx3HAL18getFlashDataReaderEv) referenced from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1f5]">touchgfx::Font::getCharWidth(unsigned short) const</a> from font.o(.text._ZNK8touchgfx4Font12getCharWidthEt) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[1f5]">touchgfx::Font::getCharWidth(unsigned short) const</a> from font.o(.text._ZNK8touchgfx4Font12getCharWidthEt) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[31b]">touchgfx::Font::getGSUBTable() const</a> from constfont.o(.text._ZNK8touchgfx4Font12getGSUBTableEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1f8]">touchgfx::Font::getFontHeight() const</a> from constfont.o(.text._ZNK8touchgfx4Font13getFontHeightEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[1f8]">touchgfx::Font::getFontHeight() const</a> from constfont.o(.text._ZNK8touchgfx4Font13getFontHeightEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1f3]">touchgfx::Font::getStringWidth(unsigned short const*, ...) const</a> from texts.o(.text) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[1f3]">touchgfx::Font::getStringWidth(unsigned short const*, ...) const</a> from texts.o(.text) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1f4]">touchgfx::Font::getStringWidth(unsigned char, unsigned short const*, ...) const</a> from texts.o(.text) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[1f4]">touchgfx::Font::getStringWidth(unsigned char, unsigned short const*, ...) const</a> from texts.o(.text) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1fa]">touchgfx::Font::getBitsPerPixel() const</a> from constfont.o(.text._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[1fa]">touchgfx::Font::getBitsPerPixel() const</a> from constfont.o(.text._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1fb]">touchgfx::Font::getByteAlignRow() const</a> from constfont.o(.text._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[1fb]">touchgfx::Font::getByteAlignRow() const</a> from constfont.o(.text._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1f2]">touchgfx::Font::getEllipsisChar() const</a> from constfont.o(.text._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[1f2]">touchgfx::Font::getEllipsisChar() const</a> from constfont.o(.text._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1f1]">touchgfx::Font::getFallbackChar() const</a> from constfont.o(.text._ZNK8touchgfx4Font15getFallbackCharEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[1f1]">touchgfx::Font::getFallbackChar() const</a> from constfont.o(.text._ZNK8touchgfx4Font15getFallbackCharEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1f6]">touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font15getSpacingAboveEPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[1f6]">touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font15getSpacingAboveEPKtz) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1f7]">touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font16getMaxTextHeightEPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[1f7]">touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font16getMaxTextHeightEPKtz) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1fd]">touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font16getNumberOfLinesEPKtz) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[1fd]">touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const</a> from font.o(.text._ZNK8touchgfx4Font16getNumberOfLinesEPKtz) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1f9]">touchgfx::Font::getMinimumTextHeight() const</a> from constfont.o(.text._ZNK8touchgfx4Font20getMinimumTextHeightEv) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[1f9]">touchgfx::Font::getMinimumTextHeight() const</a> from constfont.o(.text._ZNK8touchgfx4Font20getMinimumTextHeightEv) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1f0]">touchgfx::Font::getGlyph(unsigned short) const</a> from constfont.o(.text._ZNK8touchgfx4Font8getGlyphEt) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[1f0]">touchgfx::Font::getGlyph(unsigned short) const</a> from constfont.o(.text._ZNK8touchgfx4Font8getGlyphEt) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[266]">touchgfx::Image::getSolidRect() const</a> from image.o(.text._ZNK8touchgfx5Image12getSolidRectEv) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[266]">touchgfx::Image::getSolidRect() const</a> from image.o(.text._ZNK8touchgfx5Image12getSolidRectEv) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[265]">touchgfx::Image::draw(touchgfx::Rect const&) const</a> from image.o(.text._ZNK8touchgfx5Image4drawERKNS_4RectE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[265]">touchgfx::Image::draw(touchgfx::Rect const&) const</a> from image.o(.text._ZNK8touchgfx5Image4drawERKNS_4RectE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[23b]">touchgfx::Button::getSolidRect() const</a> from button.o(.text._ZNK8touchgfx6Button12getSolidRectEv) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[29e]">touchgfx::Circle::getMinimalRect() const</a> from circle.o(.text._ZNK8touchgfx6Circle14getMinimalRectEv) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[df]">touchgfx::Circle::updateMinMaxXY(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const</a> from circle.o(.text._ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_) referenced from circle.o(.text._ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_)
 <LI><a href="#[29f]">touchgfx::Circle::drawCanvasWidget(touchgfx::Rect const&) const</a> from circle.o(.text._ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[2ac]">touchgfx::Slider::getMaxValue() const</a> from slider.o(.text._ZNK8touchgfx6Slider11getMaxValueEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2ab]">touchgfx::Slider::getMinValue() const</a> from slider.o(.text._ZNK8touchgfx6Slider11getMinValueEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2a9]">touchgfx::Slider::getIndicatorMax() const</a> from slider.o(.text._ZNK8touchgfx6Slider15getIndicatorMaxEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2a8]">touchgfx::Slider::getIndicatorMin() const</a> from slider.o(.text._ZNK8touchgfx6Slider15getIndicatorMinEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2b1]">touchgfx::Slider::positionToValue(short) const</a> from slider.o(.text._ZNK8touchgfx6Slider15positionToValueEs) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2b0]">touchgfx::Slider::valueToPosition(int) const</a> from slider.o(.text._ZNK8touchgfx6Slider15valueToPositionEi) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2b4]">touchgfx::Slider::getValueRangeSize() const</a> from slider.o(.text._ZNK8touchgfx6Slider17getValueRangeSizeEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2b2]">touchgfx::Slider::getIndicatorRadius() const</a> from slider.o(.text._ZNK8touchgfx6Slider18getIndicatorRadiusEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[2b3]">touchgfx::Slider::getIndicatorPositionRangeSize() const</a> from slider.o(.text._ZNK8touchgfx6Slider29getIndicatorPositionRangeSizeEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[de]">touchgfx::CWRUtil::Q5::operator*(touchgfx::CWRUtil::Q15 const&) const</a> from circle.o(.text._ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E) referenced from circle.o(.text._ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_)
 <LI><a href="#[2be]">touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::isValid() const</a> from screenviewbase.o(.text._ZNK8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv) referenced from screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[2c2]">touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::isValid() const</a> from screen1viewbase.o(.text._ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[2c6]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const</a> from frontendapplicationbase.o(.text._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[d1]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[d1]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[d1]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[d1]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[d1]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[d1]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[d1]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[d1]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[d1]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[d1]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[d1]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[d1]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[d1]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[d1]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[d1]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[d1]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[d1]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[d1]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[d1]">touchgfx::Drawable::invalidate() const</a> from drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv) referenced from abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[194]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[190]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from box.o(.rodata._ZTVN8touchgfx3BoxE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from image.o(.rodata._ZTVN8touchgfx5ImageE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from circle.o(.rodata._ZTVN8touchgfx6CircleE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[195]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[30c]">touchgfx::LCD16bpp::getRedColor(touchgfx::colortype) const</a> from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[30e]">touchgfx::LCD16bpp::getBlueColor(touchgfx::colortype) const</a> from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[30d]">touchgfx::LCD16bpp::getGreenColor(touchgfx::colortype) const</a> from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[309]">touchgfx::LCD16bpp::framebufferFormat() const</a> from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp17framebufferFormatEv) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[30a]">touchgfx::LCD16bpp::framebufferStride() const</a> from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp17framebufferStrideEv) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[30b]">touchgfx::LCD16bpp::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char) const</a> from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[308]">touchgfx::LCD16bpp::bitDepth() const</a> from lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp8bitDepthEv) referenced from lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[280]">touchgfx::TextArea::getSolidRect() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[280]">touchgfx::TextArea::getSolidRect() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[318]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(.text._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[285]">touchgfx::TextArea::calculateTextHeight(unsigned short const*, ...) const</a> from textarea.o(.text._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[285]">touchgfx::TextArea::calculateTextHeight(unsigned short const*, ...) const</a> from textarea.o(.text._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[316]">touchgfx::TextArea::draw(touchgfx::Rect const&) const</a> from textarea.o(.text._ZNK8touchgfx8TextArea4drawERKNS_4RectE) referenced from textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1ef]">touchgfx::ConstFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const</a> from constfont.o(.text._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh) referenced from generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[1ef]">touchgfx::ConstFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const</a> from constfont.o(.text._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh) referenced from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[18f]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[18f]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[18f]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[18f]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[18f]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[18f]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[18f]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[18f]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[18f]">touchgfx::Container::getSolidRect() const</a> from container.o(.text._ZNK8touchgfx9Container12getSolidRectEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1a9]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[1a9]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[1a9]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[1a9]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[1a9]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[1a9]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1a9]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[1a9]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[1a9]">touchgfx::Container::getContainedArea() const</a> from container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[18e]">touchgfx::Container::draw(touchgfx::Rect const&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
 <LI><a href="#[18e]">touchgfx::Container::draw(touchgfx::Rect const&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
 <LI><a href="#[18e]">touchgfx::Container::draw(touchgfx::Rect const&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
 <LI><a href="#[18e]">touchgfx::Container::draw(touchgfx::Rect const&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[18e]">touchgfx::Container::draw(touchgfx::Rect const&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
 <LI><a href="#[18e]">touchgfx::Container::draw(touchgfx::Rect const&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[18e]">touchgfx::Container::draw(touchgfx::Rect const&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[18e]">touchgfx::Container::draw(touchgfx::Rect const&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from slider.o(.rodata._ZTVN8touchgfx6SliderE)
 <LI><a href="#[18e]">touchgfx::Container::draw(touchgfx::Rect const&) const</a> from container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from container.o(.rodata._ZTVN8touchgfx9ContainerE)
 <LI><a href="#[324]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element(unsigned short) const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[321]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::capacity() const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[32a]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element(unsigned short) const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[327]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::capacity() const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[330]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element(unsigned short) const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[32d]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::capacity() const</a> from touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv) referenced from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[349]">std::bad_exception::what() const</a> from stdlib_exception.cpp.o(.text._ZNKSt13bad_exception4whatEv) referenced from stdlib_exception.cpp.o(.rodata._ZTVSt13bad_exception)
 <LI><a href="#[348]">std::bad_exception::~bad_exception__deallocating()</a> from stdlib_exception.cpp.o(.text._ZNSt13bad_exceptionD0Ev) referenced from stdlib_exception.cpp.o(.rodata._ZTVSt13bad_exception)
 <LI><a href="#[e0]">std::bad_exception::~bad_exception()</a> from stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev) referenced 2 times from cxa_personality.cpp.o(.text.__cxa_call_unexpected)
 <LI><a href="#[347]">std::exception::~exception__sub_object()</a> from stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev) referenced from stdlib_exception.cpp.o(.rodata._ZTVSt13bad_exception)
 <LI><a href="#[1]">std::terminate()</a> from cxa_handlers.cpp.o(.text._ZSt9terminatev) referenced 2 times from cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler)
 <LI><a href="#[146]">non-virtual thunk to screenPresenter::UpDateTemNum(int)</a> from screenpresenter.o(.text) referenced from screenpresenter.o(.rodata._ZTV15screenPresenter)
 <LI><a href="#[145]">non-virtual thunk to screenPresenter::UpDateHeartNum(int)</a> from screenpresenter.o(.text) referenced from screenpresenter.o(.rodata._ZTV15screenPresenter)
 <LI><a href="#[144]">non-virtual thunk to screenPresenter::~screenPresenter__deallocating()</a> from screenpresenter.o(.text._ZThn4_N15screenPresenterD0Ev) referenced from screenpresenter.o(.rodata._ZTV15screenPresenter)
 <LI><a href="#[143]">non-virtual thunk to screenPresenter::~screenPresenter()</a> from screenpresenter.o(.text._ZThn4_N15screenPresenterD1Ev) referenced from screenpresenter.o(.rodata._ZTV15screenPresenter)
 <LI><a href="#[150]">non-virtual thunk to Screen1Presenter::UpDateHeartRateLine(int)</a> from screen1presenter.o(.text) referenced from screen1presenter.o(.rodata._ZTV16Screen1Presenter)
 <LI><a href="#[14f]">non-virtual thunk to Screen1Presenter::~Screen1Presenter__deallocating()</a> from screen1presenter.o(.text._ZThn4_N16Screen1PresenterD0Ev) referenced from screen1presenter.o(.rodata._ZTV16Screen1Presenter)
 <LI><a href="#[14e]">non-virtual thunk to Screen1Presenter::~Screen1Presenter()</a> from screen1presenter.o(.text._ZThn4_N16Screen1PresenterD1Ev) referenced from screen1presenter.o(.rodata._ZTV16Screen1Presenter)
 <LI><a href="#[da]">__aeabi_unwind_cpp_pr0</a> from Unwind-EHABI.cpp.o(.text.__aeabi_unwind_cpp_pr0) referenced 2 times from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE23getInfoFromEHABISectionEjRKNS_18UnwindInfoSectionsE)
 <LI><a href="#[db]">__aeabi_unwind_cpp_pr1</a> from Unwind-EHABI.cpp.o(.text.__aeabi_unwind_cpp_pr1) referenced 2 times from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE23getInfoFromEHABISectionEjRKNS_18UnwindInfoSectionsE)
 <LI><a href="#[dc]">__aeabi_unwind_cpp_pr2</a> from Unwind-EHABI.cpp.o(.text.__aeabi_unwind_cpp_pr2) referenced 2 times from libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE23getInfoFromEHABISectionEjRKNS_18UnwindInfoSectionsE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced from canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 4 times from dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced from screen1viewbase.o(.rodata._ZTVN8touchgfx15AbstractPainterE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 2 times from screen1viewbase.o(.rodata._ZTVN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 2 times from frontendapplicationbase.o(.rodata._ZTVN8touchgfx15GenericCallbackIvvvEE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 2 times from touchgfxconfiguration.o(.rodata._ZTVN8touchgfx15TouchControllerE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 19 times from abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 4 times from abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 2 times from graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced from abstractpainterrgb565.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced from abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced from graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 6 times from hal.o(.rodata._ZTVN8touchgfx3HALE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 2 times from frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 3 times from drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1e4]">__cxa_pure_virtual</a> from cxa_virtual.cpp.o(.text.__cxa_pure_virtual) referenced 2 times from constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from canvas.o(.ARM.extab.text._ZN8touchgfx10RasterizerC2Ev)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from abstractprogressindicator.o(.ARM.extab.text._ZN8touchgfx25AbstractProgressIndicatorC2Ev)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from canvas.o(.ARM.extab.text._ZN8touchgfx6CanvasC2EPKNS_12CanvasWidgetERKNS_4RectE)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from canvas.o(.ARM.extab.text._ZN8touchgfx6CanvasD2Ev)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from screen.o(.ARM.extab.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from screen.o(.ARM.extab.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from screen.o(.ARM.extab.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from slider.o(.ARM.extab.text._ZN8touchgfx6SliderC2Ev)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from gestures.o(.ARM.extab.text._ZN8touchgfx8Gestures17registerDragEventEtttt)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from gestures.o(.ARM.extab.text._ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from textarea.o(.ARM.extab.text._ZN8touchgfx8TextArea12setBaselineYEs)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from graphelements.o(.ARM.extab.text._ZNK8touchgfx16GraphElementDots16drawCanvasWidgetERKNS_4RectE)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from graphelements.o(.ARM.extab.text._ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from circle.o(.ARM.extab.text._ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from cxa_handlers.cpp.o(.ARM.extab.text._ZSt11__terminatePFvvE)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from cxa_handlers.cpp.o(.ARM.extab.text._ZSt9terminatev)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from cxa_exception.cpp.o(.ARM.extab.text.__cxa_allocate_exception)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from cxa_exception.cpp.o(.ARM.extab.text.__cxa_begin_catch)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from cxa_exception.cpp.o(.ARM.extab.text.__cxa_begin_cleanup)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from cxa_personality.cpp.o(.ARM.extab.text.__cxa_call_unexpected)
 <LI><a href="#[e2]">__gxx_personality_v0</a> from cxa_personality.cpp.o(.text.__gxx_personality_v0) referenced from cxa_exception.cpp.o(.ARM.extab.text.__cxa_decrement_exception_refcount)
 <LI><a href="#[99]">__main</a> from __main.o(!!!main) referenced from startup_stm32h750xx.o(.text)
 <LI><a href="#[0]">abort</a> from abort.o(.text) referenced 2 times from cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler)
 <LI><a href="#[ca]">prvIdleTask</a> from tasks.o(.text) referenced 2 times from tasks.o(.text)
 <LI><a href="#[cd]">prvTaskExitError</a> from port.o(.text) referenced 2 times from port.o(.text)
 <LI><a href="#[cb]">prvTimerTask</a> from timers.o(.text) referenced 2 times from timers.o(.text)
 <LI><a href="#[c8]">vEventGroupClearBitsCallback</a> from event_groups.o(.text) referenced 2 times from event_groups.o(.text)
 <LI><a href="#[c9]">vEventGroupSetBitsCallback</a> from event_groups.o(.text) referenced 2 times from event_groups.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[99]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(.text)
</UL>
<P><STRONG><a name="[34e]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[350]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[812]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[813]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[814]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[815]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[351]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[816]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[35c]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[352]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[354]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[817]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[818]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[819]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[81a]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[81b]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[356]"></a>__rt_lib_init_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_cpp_2 &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[81c]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[81d]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[81e]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[81f]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[820]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[821]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[822]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[823]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[824]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[825]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[826]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[827]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[828]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[829]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[82a]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[361]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[357]"></a>__rt_lib_shutdown_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000001))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __rt_lib_shutdown_cpp_2 &rArr; __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[82b]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[82c]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[82d]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[82e]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[82f]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[830]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[831]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[34f]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[832]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[359]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[35b]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[833]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[35d]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[834]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[659]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[360]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[835]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[362]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[2]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>BDMA_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>BDMA_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>BDMA_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>BDMA_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>BDMA_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>BDMA_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>BDMA_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>BDMA_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>COMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>DFSDM1_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>DFSDM1_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>DMAMUX1_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>DMAMUX2_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>ECC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>FDCAN1_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>FDCAN1_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>FDCAN2_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>FDCAN2_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>FDCAN_CAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>HRTIM1_FLT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>HRTIM1_Master_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>HRTIM1_TIMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>HRTIM1_TIMB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>HRTIM1_TIMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>HRTIM1_TIMD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>HRTIM1_TIME_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>HSEM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>JPEG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>LPTIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>LPTIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>LPTIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>MDIOS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>MDIOS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>MDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>OTG_FS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>OTG_FS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PVD_AVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>SAI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>SAI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>SDMMC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>SPDIF_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>SWPMI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>WAKEUP_PIN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[658]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32h750xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[35e]"></a>main</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = main &rArr; SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_init
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt9147_init
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_EnableICache
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_EnableDCache
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[367]"></a>SystemClock_Config</STRONG> (Thumb, 316 bytes, Stack size 312 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ConfigSupply
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[377]"></a>Error_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
</UL>

<P><STRONG><a name="[37a]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 296 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT_FIFOEN
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_8BIT
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT_FIFOEN
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxISR_16BIT
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAReceiveCplt
</UL>

<P><STRONG><a name="[37b]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DMAPeriodElapsedCplt
</UL>

<P><STRONG><a name="[368]"></a>MX_GPIO_Init</STRONG> (Thumb, 318 bytes, Stack size 80 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[372]"></a>MX_FREERTOS_Init</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, freertos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = MX_FREERTOS_Init &rArr; osThreadNew &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9a]"></a>GuiShowTask</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, freertos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = GuiShowTask &rArr; MX_TouchGFX_Process &rArr; touchgfx_taskEntry &rArr; touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(.text)
</UL>
<P><STRONG><a name="[9b]"></a>UpdateTask</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, freertos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = UpdateTask &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(.text)
</UL>
<P><STRONG><a name="[9c]"></a>TouchTask</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, freertos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = TouchTask &rArr; gt9147_task &rArr; mcu_vi2c_transfer_reg &rArr; mcu_vi2c_wait_ack &rArr; mcu_vi2c_stop &rArr; mcu_vi2c_sda_output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt9147_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(.text)
</UL>
<P><STRONG><a name="[36a]"></a>MX_CRC_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, crc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = MX_CRC_Init &rArr; HAL_CRC_Init &rArr; HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3ba]"></a>HAL_CRC_MspInit</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, crc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_CRC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[3bd]"></a>HAL_CRC_MspDeInit</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, crc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_DeInit
</UL>

<P><STRONG><a name="[36b]"></a>MX_DMA2D_Init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, dma2d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = MX_DMA2D_Init &rArr; HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_ConfigLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[386]"></a>HAL_DMA2D_MspInit</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, dma2d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
</UL>

<P><STRONG><a name="[389]"></a>HAL_DMA2D_MspDeInit</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_DeInit
</UL>

<P><STRONG><a name="[369]"></a>MX_LTDC_Init</STRONG> (Thumb, 202 bytes, Stack size 64 bytes, ltdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = MX_LTDC_Init &rArr; HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38d]"></a>HAL_LTDC_MspInit</STRONG> (Thumb, 514 bytes, Stack size 88 bytes, ltdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = HAL_LTDC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_EnableFastModePlus
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
</UL>

<P><STRONG><a name="[38f]"></a>HAL_LTDC_MspDeInit</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_DeInit
</UL>

<P><STRONG><a name="[36c]"></a>MX_USART2_UART_Init</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = MX_USART2_UART_Init &rArr; HAL_UART_Init &rArr; UART_SetConfig &rArr; HAL_RCC_GetPCLK2Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetTxFifoThreshold
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetRxFifoThreshold
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_DisableFifoMode
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[395]"></a>HAL_UART_MspInit</STRONG> (Thumb, 228 bytes, Stack size 64 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RS485Ex_Init
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MultiProcessor_Init
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LIN_Init
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_HalfDuplex_Init
</UL>

<P><STRONG><a name="[396]"></a>HAL_UART_MspDeInit</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DeInit
</UL>

<P><STRONG><a name="[3]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USART2_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32h7xx_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USART2_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>LTDC_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32h7xx_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = LTDC_IRQHandler &rArr; HAL_LTDC_IRQHandler &rArr; HAL_LTDC_LineEventCallback &rArr; touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32h7xx_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DMA2D_IRQHandler &rArr; HAL_DMA2D_IRQHandler &rArr; HAL_DMA2D_LineEventCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>TIM17_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32h7xx_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM17_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[39b]"></a>HAL_MspInit</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, stm32h7xx_hal_msp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[39c]"></a>HAL_InitTick</STRONG> (Thumb, 198 bytes, Stack size 72 bytes, stm32h7xx_hal_timebase_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_DeInit
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SetTickFreq
</UL>

<P><STRONG><a name="[836]"></a>HAL_SuspendTick</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32h7xx_hal_timebase_tim.o(.text), UNUSED)

<P><STRONG><a name="[837]"></a>HAL_ResumeTick</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32h7xx_hal_timebase_tim.o(.text), UNUSED)

<P><STRONG><a name="[3a1]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, stm32h7xx_hal_cortex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_NVIC_SetPriorityGrouping &rArr; __NVIC_SetPriorityGrouping
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[387]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, stm32h7xx_hal_cortex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EncodePriority
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[388]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, stm32h7xx_hal_cortex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_NVIC_EnableIRQ &rArr; __NVIC_EnableIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[38a]"></a>HAL_NVIC_DisableIRQ</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspDeInit
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspDeInit
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspDeInit
</UL>

<P><STRONG><a name="[3a8]"></a>HAL_NVIC_SystemReset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>

<P><STRONG><a name="[3aa]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, stm32h7xx_hal_cortex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_SYSTICK_Config &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[838]"></a>HAL_MPU_Disable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[839]"></a>HAL_MPU_Enable</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[83a]"></a>HAL_MPU_ConfigRegion</STRONG> (Thumb, 144 bytes, Stack size 12 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[3ac]"></a>HAL_NVIC_GetPriorityGrouping</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
</UL>

<P><STRONG><a name="[3ad]"></a>HAL_NVIC_GetPriority</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DecodePriority
</UL>

<P><STRONG><a name="[3b0]"></a>HAL_NVIC_SetPendingIRQ</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPendingIRQ
</UL>

<P><STRONG><a name="[3b2]"></a>HAL_NVIC_GetPendingIRQ</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPendingIRQ
</UL>

<P><STRONG><a name="[3b4]"></a>HAL_NVIC_ClearPendingIRQ</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>

<P><STRONG><a name="[3b6]"></a>HAL_NVIC_GetActive</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetActive
</UL>

<P><STRONG><a name="[83b]"></a>HAL_SYSTICK_CLKSourceConfig</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[3b8]"></a>HAL_SYSTICK_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Callback
</UL>

<P><STRONG><a name="[3b9]"></a>HAL_SYSTICK_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
</UL>

<P><STRONG><a name="[83c]"></a>HAL_GetCurrentCPUID</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[383]"></a>HAL_CRC_Init</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, stm32h7xx_hal_crc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_CRC_Init &rArr; HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_MspInit
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
</UL>

<P><STRONG><a name="[3bc]"></a>HAL_CRC_DeInit</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, stm32h7xx_hal_crc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_MspDeInit
</UL>

<P><STRONG><a name="[3be]"></a>HAL_CRC_Accumulate</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, stm32h7xx_hal_crc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Handle_8
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Handle_16
</UL>

<P><STRONG><a name="[3c1]"></a>HAL_CRC_Calculate</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, stm32h7xx_hal_crc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Handle_8
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Handle_16
</UL>

<P><STRONG><a name="[83d]"></a>HAL_CRC_GetState</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, stm32h7xx_hal_crc.o(.text), UNUSED)

<P><STRONG><a name="[3bb]"></a>HAL_CRCEx_Polynomial_Set</STRONG> (Thumb, 206 bytes, Stack size 28 bytes, stm32h7xx_hal_crc_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[83e]"></a>HAL_CRCEx_Input_Data_Reverse</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32h7xx_hal_crc_ex.o(.text), UNUSED)

<P><STRONG><a name="[83f]"></a>HAL_CRCEx_Output_Data_Reverse</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32h7xx_hal_crc_ex.o(.text), UNUSED)

<P><STRONG><a name="[3c2]"></a>HAL_RCC_DeInit</STRONG> (Thumb, 782 bytes, Stack size 16 bytes, stm32h7xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[376]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 2680 bytes, Stack size 56 bytes, stm32h7xx_hal_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetREVID
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[378]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 1154 bytes, Stack size 32 bytes, stm32h7xx_hal_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[3c5]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 788 bytes, Stack size 40 bytes, stm32h7xx_hal_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetD1SysClockFreq
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[3c6]"></a>HAL_RCC_MCOConfig</STRONG> (Thumb, 202 bytes, Stack size 48 bytes, stm32h7xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>

<P><STRONG><a name="[840]"></a>HAL_RCC_EnableCSS</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc.o(.text), UNUSED)

<P><STRONG><a name="[841]"></a>HAL_RCC_DisableCSS</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc.o(.text), UNUSED)

<P><STRONG><a name="[3c7]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32h7xx_hal_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetD3PCLK1Freq
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetD1PCLK1Freq
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>

<P><STRONG><a name="[3c8]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCC_GetPCLK1Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[39e]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCC_GetPCLK2Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[3c9]"></a>HAL_RCC_GetOscConfig</STRONG> (Thumb, 558 bytes, Stack size 16 bytes, stm32h7xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetREVID
</UL>

<P><STRONG><a name="[39d]"></a>HAL_RCC_GetClockConfig</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[3ca]"></a>HAL_RCC_NMI_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_CSSCallback
</UL>

<P><STRONG><a name="[3cb]"></a>HAL_RCC_CSSCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_NMI_IRQHandler
</UL>

<P><STRONG><a name="[379]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 3744 bytes, Stack size 120 bytes, stm32h7xx_hal_rcc_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[842]"></a>HAL_RCCEx_GetPeriphCLKConfig</STRONG> (Thumb, 760 bytes, Stack size 12 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)

<P><STRONG><a name="[3ce]"></a>HAL_RCCEx_GetPeriphCLKFreq</STRONG> (Thumb, 1536 bytes, Stack size 96 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL3ClockFreq
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL2ClockFreq
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL1ClockFreq
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetD3PCLK1Freq
</UL>

<P><STRONG><a name="[3cf]"></a>HAL_RCCEx_GetPLL1ClockFreq</STRONG> (Thumb, 688 bytes, Stack size 32 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[3d0]"></a>HAL_RCCEx_GetPLL2ClockFreq</STRONG> (Thumb, 688 bytes, Stack size 32 bytes, stm32h7xx_hal_rcc_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RCCEx_GetPLL2ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[3d1]"></a>HAL_RCCEx_GetPLL3ClockFreq</STRONG> (Thumb, 688 bytes, Stack size 32 bytes, stm32h7xx_hal_rcc_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RCCEx_GetPLL3ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[3d2]"></a>HAL_RCCEx_GetD3PCLK1Freq</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCCEx_GetD3PCLK1Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[3d3]"></a>HAL_RCCEx_GetD1PCLK1Freq</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[3d4]"></a>HAL_RCCEx_GetD1SysClockFreq</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>

<P><STRONG><a name="[843]"></a>HAL_RCCEx_EnableLSECSS</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)

<P><STRONG><a name="[844]"></a>HAL_RCCEx_DisableLSECSS</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)

<P><STRONG><a name="[845]"></a>HAL_RCCEx_EnableLSECSS_IT</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)

<P><STRONG><a name="[846]"></a>HAL_RCCEx_WakeUpStopCLKConfig</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)

<P><STRONG><a name="[847]"></a>HAL_RCCEx_KerWakeUpStopCLKConfig</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)

<P><STRONG><a name="[848]"></a>HAL_RCCEx_WWDGxSysResetConfig</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)

<P><STRONG><a name="[3d5]"></a>HAL_RCCEx_CRSConfig</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetREVID
</UL>

<P><STRONG><a name="[849]"></a>HAL_RCCEx_CRSSoftwareSynchronizationGenerate</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)

<P><STRONG><a name="[84a]"></a>HAL_RCCEx_CRSGetSynchronizationInfo</STRONG> (Thumb, 68 bytes, Stack size 4 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)

<P><STRONG><a name="[3d6]"></a>HAL_RCCEx_CRSWaitSynchronization</STRONG> (Thumb, 334 bytes, Stack size 24 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[3d7]"></a>HAL_RCCEx_CRS_IRQHandler</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_SyncWarnCallback
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_SyncOkCallback
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_ExpectedSyncCallback
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_ErrorCallback
</UL>

<P><STRONG><a name="[3d8]"></a>HAL_RCCEx_CRS_SyncOkCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_IRQHandler
</UL>

<P><STRONG><a name="[3d9]"></a>HAL_RCCEx_CRS_SyncWarnCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_IRQHandler
</UL>

<P><STRONG><a name="[3da]"></a>HAL_RCCEx_CRS_ExpectedSyncCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_IRQHandler
</UL>

<P><STRONG><a name="[3db]"></a>HAL_RCCEx_CRS_ErrorCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_IRQHandler
</UL>

<P><STRONG><a name="[3dc]"></a>HAL_RCCEx_LSECSS_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_LSECSS_Callback
</UL>

<P><STRONG><a name="[3dd]"></a>HAL_RCCEx_LSECSS_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_LSECSS_IRQHandler
</UL>

<P><STRONG><a name="[37e]"></a>HAL_GPIO_Init</STRONG> (Thumb, 978 bytes, Stack size 64 bytes, stm32h7xx_hal_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_init
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_MCOConfig
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_sda_output
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_sda_input
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt9147_io_init
</UL>

<P><STRONG><a name="[390]"></a>HAL_GPIO_DeInit</STRONG> (Thumb, 602 bytes, Stack size 64 bytes, stm32h7xx_hal_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspDeInit
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspDeInit
</UL>

<P><STRONG><a name="[63e]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, stm32h7xx_hal_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_readsda
</UL>

<P><STRONG><a name="[37d]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, stm32h7xx_hal_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_init
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_sda
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_scl
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt9147_io_init
</UL>

<P><STRONG><a name="[84b]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32h7xx_hal_gpio.o(.text), UNUSED)

<P><STRONG><a name="[84c]"></a>HAL_GPIO_LockPin</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32h7xx_hal_gpio.o(.text), UNUSED)

<P><STRONG><a name="[3de]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32h7xx_hal_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[3df]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, stm32h7xx_hal_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[3e0]"></a>HAL_DMA_Init</STRONG> (Thumb, 2404 bytes, Stack size 64 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CheckFifoParam
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcDMAMUXRequestGenBaseAndMask
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcDMAMUXChannelBaseAndMask
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcBaseAndBitshift
</UL>

<P><STRONG><a name="[3e5]"></a>HAL_DMA_DeInit</STRONG> (Thumb, 1152 bytes, Stack size 32 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcDMAMUXRequestGenBaseAndMask
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcDMAMUXChannelBaseAndMask
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcBaseAndBitshift
</UL>

<P><STRONG><a name="[3e6]"></a>HAL_DMA_Start</STRONG> (Thumb, 744 bytes, Stack size 32 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetConfig
</UL>

<P><STRONG><a name="[3e8]"></a>HAL_DMA_Start_IT</STRONG> (Thumb, 1790 bytes, Stack size 40 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_PWMN_Start_DMA
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_OCN_Start_DMA
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_HallSensor_Start_DMA
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start_DMA
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Start_DMA
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Start_DMA
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_Start_DMA
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_DMABurst_MultiWriteStart
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_DMABurst_MultiReadStart
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_DMA
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_DMA
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_DMA
</UL>

<P><STRONG><a name="[3e9]"></a>HAL_DMA_Abort</STRONG> (Thumb, 2424 bytes, Stack size 48 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_PollForTransfer
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DMAStop
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_AbortTransmit
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_AbortReceive
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Abort
</UL>

<P><STRONG><a name="[425]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 1708 bytes, Stack size 32 bytes, stm32h7xx_hal_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_PWMN_Stop_DMA
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_OCN_Stop_DMA
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_HallSensor_Stop_DMA
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Stop_DMA
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Stop_DMA
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Stop_DMA
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_Stop_DMA
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_DMABurst_WriteStop
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_DMABurst_ReadStop
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Stop_DMA
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Abort_IT
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_AbortTransmit_IT
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_AbortReceive_IT
</UL>

<P><STRONG><a name="[3ea]"></a>HAL_DMA_PollForTransfer</STRONG> (Thumb, 2746 bytes, Stack size 64 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
</UL>

<P><STRONG><a name="[84d]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 4598 bytes, Stack size 72 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)

<P><STRONG><a name="[84e]"></a>HAL_DMA_RegisterCallback</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)

<P><STRONG><a name="[84f]"></a>HAL_DMA_UnRegisterCallback</STRONG> (Thumb, 196 bytes, Stack size 20 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)

<P><STRONG><a name="[850]"></a>HAL_DMA_GetState</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)

<P><STRONG><a name="[4ae]"></a>HAL_DMA_GetError</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DMAStop
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_AbortTransmit
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_AbortReceive
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Abort
</UL>

<P><STRONG><a name="[851]"></a>HAL_PWR_DeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[852]"></a>HAL_PWR_EnableBkUpAccess</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[853]"></a>HAL_PWR_DisableBkUpAccess</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[854]"></a>HAL_PWR_ConfigPVD</STRONG> (Thumb, 204 bytes, Stack size 4 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[855]"></a>HAL_PWR_EnablePVD</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[856]"></a>HAL_PWR_DisablePVD</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[857]"></a>HAL_PWR_EnableWakeUpPin</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[858]"></a>HAL_PWR_DisableWakeUpPin</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[859]"></a>HAL_PWR_EnterSLEEPMode</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[85a]"></a>HAL_PWR_EnterSTOPMode</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[85b]"></a>HAL_PWR_EnterSTANDBYMode</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[85c]"></a>HAL_PWR_EnableSleepOnExit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[85d]"></a>HAL_PWR_DisableSleepOnExit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[85e]"></a>HAL_PWR_EnableSEVOnPend</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[85f]"></a>HAL_PWR_DisableSEVOnPend</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[3eb]"></a>HAL_PWR_PVD_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_PVDCallback
</UL>

<P><STRONG><a name="[3ec]"></a>HAL_PWR_PVDCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_PVD_IRQHandler
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_PVD_AVD_IRQHandler
</UL>

<P><STRONG><a name="[375]"></a>HAL_PWREx_ConfigSupply</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, stm32h7xx_hal_pwr_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_PWREx_ConfigSupply
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[860]"></a>HAL_PWREx_GetSupplyConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[3ed]"></a>HAL_PWREx_ControlVoltageScaling</STRONG> (Thumb, 364 bytes, Stack size 24 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[861]"></a>HAL_PWREx_GetVoltageRange</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[862]"></a>HAL_PWREx_ControlStopModeVoltageScaling</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[863]"></a>HAL_PWREx_GetStopModeVoltageRange</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[864]"></a>HAL_PWREx_EnterSTOPMode</STRONG> (Thumb, 166 bytes, Stack size 12 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[865]"></a>HAL_PWREx_ClearPendingEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[866]"></a>HAL_PWREx_EnterSTANDBYMode</STRONG> (Thumb, 98 bytes, Stack size 4 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[867]"></a>HAL_PWREx_ConfigD3Domain</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[868]"></a>HAL_PWREx_EnableFlashPowerDown</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[869]"></a>HAL_PWREx_DisableFlashPowerDown</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[86a]"></a>HAL_PWREx_EnableWakeUpPin</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[86b]"></a>HAL_PWREx_DisableWakeUpPin</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[86c]"></a>HAL_PWREx_GetWakeupFlag</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[86d]"></a>HAL_PWREx_ClearWakeupFlag</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[3ee]"></a>HAL_PWREx_WAKEUP_PIN_IRQHandler</STRONG> (Thumb, 234 bytes, Stack size 8 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WKUP6_Callback
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WKUP5_Callback
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WKUP4_Callback
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WKUP3_Callback
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WKUP2_Callback
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WKUP1_Callback
</UL>

<P><STRONG><a name="[3ef]"></a>HAL_PWREx_WKUP1_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WAKEUP_PIN_IRQHandler
</UL>

<P><STRONG><a name="[3f0]"></a>HAL_PWREx_WKUP2_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WAKEUP_PIN_IRQHandler
</UL>

<P><STRONG><a name="[3f1]"></a>HAL_PWREx_WKUP3_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WAKEUP_PIN_IRQHandler
</UL>

<P><STRONG><a name="[3f2]"></a>HAL_PWREx_WKUP4_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WAKEUP_PIN_IRQHandler
</UL>

<P><STRONG><a name="[3f3]"></a>HAL_PWREx_WKUP5_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WAKEUP_PIN_IRQHandler
</UL>

<P><STRONG><a name="[3f4]"></a>HAL_PWREx_WKUP6_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WAKEUP_PIN_IRQHandler
</UL>

<P><STRONG><a name="[3f5]"></a>HAL_PWREx_EnableBkUpReg</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[3f6]"></a>HAL_PWREx_DisableBkUpReg</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[3f7]"></a>HAL_PWREx_EnableUSBReg</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[3f8]"></a>HAL_PWREx_DisableUSBReg</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[86e]"></a>HAL_PWREx_EnableUSBVoltageDetector</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[86f]"></a>HAL_PWREx_DisableUSBVoltageDetector</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[870]"></a>HAL_PWREx_EnableBatteryCharging</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[871]"></a>HAL_PWREx_DisableBatteryCharging</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[872]"></a>HAL_PWREx_EnableMonitoring</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[873]"></a>HAL_PWREx_DisableMonitoring</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[874]"></a>HAL_PWREx_GetTemperatureLevel</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[875]"></a>HAL_PWREx_GetVBATLevel</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[876]"></a>HAL_PWREx_ConfigAVD</STRONG> (Thumb, 194 bytes, Stack size 4 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[877]"></a>HAL_PWREx_EnableAVD</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[878]"></a>HAL_PWREx_DisableAVD</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[3f9]"></a>HAL_PWREx_PVD_AVD_IRQHandler</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_PVDCallback
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_AVDCallback
</UL>

<P><STRONG><a name="[3fa]"></a>HAL_PWREx_AVDCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_PVD_AVD_IRQHandler
</UL>

<P><STRONG><a name="[366]"></a>HAL_Init</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, stm32h7xx_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3fb]"></a>HAL_DeInit</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, stm32h7xx_hal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspDeInit
</UL>

<P><STRONG><a name="[3fc]"></a>HAL_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DeInit
</UL>

<P><STRONG><a name="[37c]"></a>HAL_IncTick</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[3c3]"></a>HAL_GetTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ConfigSupply
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRSWaitSynchronization
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_DeInit
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_PollForTransfer
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSCFG_EnableVREFBUF
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableUSBReg
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableBkUpReg
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_DisableUSBReg
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_DisableBkUpReg
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Suspend
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_PollForTransfer
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_CLUTLoading_Suspend
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_CLUTLoading_Abort
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Abort
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_StopModeWakeUpSourceConfig
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
</UL>

<P><STRONG><a name="[879]"></a>HAL_GetTickPrio</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[3fd]"></a>HAL_SetTickFreq</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, stm32h7xx_hal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[87a]"></a>HAL_GetTickFreq</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[3fe]"></a>HAL_Delay</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, stm32h7xx_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt9147_init
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt9147_io_init
</UL>

<P><STRONG><a name="[87b]"></a>HAL_GetHalVersion</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[3c4]"></a>HAL_GetREVID</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRSConfig
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetOscConfig
</UL>

<P><STRONG><a name="[87c]"></a>HAL_GetDEVID</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[87d]"></a>HAL_GetUIDw0</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[87e]"></a>HAL_GetUIDw1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[87f]"></a>HAL_GetUIDw2</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[880]"></a>HAL_SYSCFG_VREFBUF_VoltageScalingConfig</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[881]"></a>HAL_SYSCFG_VREFBUF_HighImpedanceConfig</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[882]"></a>HAL_SYSCFG_VREFBUF_TrimmingConfig</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[3ff]"></a>HAL_SYSCFG_EnableVREFBUF</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, stm32h7xx_hal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[883]"></a>HAL_SYSCFG_DisableVREFBUF</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[884]"></a>HAL_SYSCFG_ETHInterfaceSelect</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[885]"></a>HAL_SYSCFG_AnalogSwitchConfig</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[886]"></a>HAL_SYSCFG_EnableBOOST</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[887]"></a>HAL_SYSCFG_DisableBOOST</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[888]"></a>HAL_SYSCFG_CM7BootAddConfig</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[889]"></a>HAL_EnableCompensationCell</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[88a]"></a>HAL_DisableCompensationCell</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[88b]"></a>HAL_SYSCFG_EnableIOSpeedOptimize</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[88c]"></a>HAL_SYSCFG_DisableIOSpeedOptimize</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[88d]"></a>HAL_SYSCFG_CompensationCodeSelect</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[88e]"></a>HAL_SYSCFG_CompensationCodeConfig</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[88f]"></a>HAL_DBGMCU_EnableDBGSleepMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[890]"></a>HAL_DBGMCU_DisableDBGSleepMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[891]"></a>HAL_DBGMCU_EnableDBGStopMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[892]"></a>HAL_DBGMCU_DisableDBGStopMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[893]"></a>HAL_DBGMCU_EnableDBGStandbyMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[894]"></a>HAL_DBGMCU_DisableDBGStandbyMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[895]"></a>HAL_EnableDomain3DBGStopMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[896]"></a>HAL_DisableDomain3DBGStopMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[897]"></a>HAL_EnableDomain3DBGStandbyMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[898]"></a>HAL_DisableDomain3DBGStandbyMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[899]"></a>HAL_SetFMCMemorySwappingConfig</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[89a]"></a>HAL_GetFMCMemorySwappingConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[89b]"></a>HAL_EXTI_EdgeConfig</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[89c]"></a>HAL_EXTI_GenerateSWInterrupt</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[89d]"></a>HAL_EXTI_D1_ClearFlag</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[89e]"></a>HAL_EXTI_D1_EventInputConfig</STRONG> (Thumb, 196 bytes, Stack size 12 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[89f]"></a>HAL_EXTI_D3_EventInputConfig</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[8a0]"></a>HAL_I2CEx_ConfigAnalogFilter</STRONG> (Thumb, 132 bytes, Stack size 12 bytes, stm32h7xx_hal_i2c_ex.o(.text), UNUSED)

<P><STRONG><a name="[8a1]"></a>HAL_I2CEx_ConfigDigitalFilter</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, stm32h7xx_hal_i2c_ex.o(.text), UNUSED)

<P><STRONG><a name="[8a2]"></a>HAL_I2CEx_EnableWakeUp</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, stm32h7xx_hal_i2c_ex.o(.text), UNUSED)

<P><STRONG><a name="[8a3]"></a>HAL_I2CEx_DisableWakeUp</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, stm32h7xx_hal_i2c_ex.o(.text), UNUSED)

<P><STRONG><a name="[38e]"></a>HAL_I2CEx_EnableFastModePlus</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32h7xx_hal_i2c_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_I2CEx_EnableFastModePlus
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
</UL>

<P><STRONG><a name="[8a4]"></a>HAL_I2CEx_DisableFastModePlus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32h7xx_hal_i2c_ex.o(.text), UNUSED)

<P><STRONG><a name="[384]"></a>HAL_DMA2D_Init</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, stm32h7xx_hal_dma2d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
</UL>

<P><STRONG><a name="[400]"></a>HAL_DMA2D_DeInit</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspDeInit
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_CLUTLoading_Abort
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Abort
</UL>

<P><STRONG><a name="[401]"></a>HAL_DMA2D_Abort</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_DeInit
</UL>

<P><STRONG><a name="[402]"></a>HAL_DMA2D_CLUTLoading_Abort</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_DeInit
</UL>

<P><STRONG><a name="[403]"></a>HAL_DMA2D_Start</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_SetConfig
</UL>

<P><STRONG><a name="[405]"></a>HAL_DMA2D_Start_IT</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_SetConfig
</UL>

<P><STRONG><a name="[406]"></a>HAL_DMA2D_BlendingStart</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_SetConfig
</UL>

<P><STRONG><a name="[407]"></a>HAL_DMA2D_BlendingStart_IT</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_SetConfig
</UL>

<P><STRONG><a name="[408]"></a>HAL_DMA2D_Suspend</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[8a5]"></a>HAL_DMA2D_Resume</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[8a6]"></a>HAL_DMA2D_EnableCLUT</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[8a7]"></a>HAL_DMA2D_CLUTStartLoad</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[8a8]"></a>HAL_DMA2D_CLUTStartLoad_IT</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[8a9]"></a>HAL_DMA2D_CLUTLoad</STRONG> (Thumb, 178 bytes, Stack size 36 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[8aa]"></a>HAL_DMA2D_CLUTLoad_IT</STRONG> (Thumb, 202 bytes, Stack size 36 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[409]"></a>HAL_DMA2D_CLUTLoading_Suspend</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[8ab]"></a>HAL_DMA2D_CLUTLoading_Resume</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[40a]"></a>HAL_DMA2D_PollForTransfer</STRONG> (Thumb, 492 bytes, Stack size 32 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[399]"></a>HAL_DMA2D_IRQHandler</STRONG> (Thumb, 520 bytes, Stack size 24 bytes, stm32h7xx_hal_dma2d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_DMA2D_IRQHandler &rArr; HAL_DMA2D_LineEventCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_LineEventCallback
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_CLUTLoadingCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[40b]"></a>HAL_DMA2D_LineEventCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_dma2d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_DMA2D_LineEventCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[40c]"></a>HAL_DMA2D_CLUTLoadingCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_dma2d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_DMA2D_CLUTLoadingCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[385]"></a>HAL_DMA2D_ConfigLayer</STRONG> (Thumb, 396 bytes, Stack size 24 bytes, stm32h7xx_hal_dma2d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA2D_ConfigLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
</UL>

<P><STRONG><a name="[8ac]"></a>HAL_DMA2D_ConfigCLUT</STRONG> (Thumb, 170 bytes, Stack size 36 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[8ad]"></a>HAL_DMA2D_ProgramLineEvent</STRONG> (Thumb, 104 bytes, Stack size 12 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[8ae]"></a>HAL_DMA2D_EnableDeadTime</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[8af]"></a>HAL_DMA2D_DisableDeadTime</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[8b0]"></a>HAL_DMA2D_ConfigDeadTime</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[8b1]"></a>HAL_DMA2D_GetState</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[8b2]"></a>HAL_DMA2D_GetError</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[38b]"></a>HAL_LTDC_Init</STRONG> (Thumb, 344 bytes, Stack size 24 bytes, stm32h7xx_hal_ltdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[40d]"></a>HAL_LTDC_DeInit</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspDeInit
</UL>

<P><STRONG><a name="[398]"></a>HAL_LTDC_IRQHandler</STRONG> (Thumb, 338 bytes, Stack size 24 bytes, stm32h7xx_hal_ltdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = HAL_LTDC_IRQHandler &rArr; HAL_LTDC_LineEventCallback &rArr; touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ReloadEventCallback
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ErrorCallback
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>

<P><STRONG><a name="[40e]"></a>HAL_LTDC_ErrorCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_ltdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_LTDC_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[410]"></a>HAL_LTDC_ReloadEventCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_ltdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_LTDC_ReloadEventCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[38c]"></a>HAL_LTDC_ConfigLayer</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, stm32h7xx_hal_ltdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[8b3]"></a>HAL_LTDC_ConfigColorKeying</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[8b4]"></a>HAL_LTDC_ConfigCLUT</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[8b5]"></a>HAL_LTDC_EnableColorKeying</STRONG> (Thumb, 106 bytes, Stack size 12 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[8b6]"></a>HAL_LTDC_DisableColorKeying</STRONG> (Thumb, 106 bytes, Stack size 12 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[8b7]"></a>HAL_LTDC_EnableCLUT</STRONG> (Thumb, 106 bytes, Stack size 12 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[8b8]"></a>HAL_LTDC_DisableCLUT</STRONG> (Thumb, 106 bytes, Stack size 12 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[8b9]"></a>HAL_LTDC_EnableDither</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[8ba]"></a>HAL_LTDC_DisableDither</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[412]"></a>HAL_LTDC_SetWindowSize</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[413]"></a>HAL_LTDC_SetWindowPosition</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[414]"></a>HAL_LTDC_SetPixelFormat</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[415]"></a>HAL_LTDC_SetAlpha</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[416]"></a>HAL_LTDC_SetAddress</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[8bb]"></a>HAL_LTDC_SetPitch</STRONG> (Thumb, 248 bytes, Stack size 28 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[4e1]"></a>HAL_LTDC_ProgramLineEvent</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, stm32h7xx_hal_ltdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_LTDC_ProgramLineEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[8bc]"></a>HAL_LTDC_Reload</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[417]"></a>HAL_LTDC_ConfigLayer_NoReload</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[418]"></a>HAL_LTDC_SetWindowSize_NoReload</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[419]"></a>HAL_LTDC_SetWindowPosition_NoReload</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[41a]"></a>HAL_LTDC_SetPixelFormat_NoReload</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[41b]"></a>HAL_LTDC_SetAlpha_NoReload</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[41c]"></a>HAL_LTDC_SetAddress_NoReload</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[8bd]"></a>HAL_LTDC_SetPitch_NoReload</STRONG> (Thumb, 224 bytes, Stack size 28 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[8be]"></a>HAL_LTDC_ConfigColorKeying_NoReload</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[8bf]"></a>HAL_LTDC_EnableColorKeying_NoReload</STRONG> (Thumb, 100 bytes, Stack size 12 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[8c0]"></a>HAL_LTDC_DisableColorKeying_NoReload</STRONG> (Thumb, 100 bytes, Stack size 12 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[8c1]"></a>HAL_LTDC_EnableCLUT_NoReload</STRONG> (Thumb, 100 bytes, Stack size 12 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[8c2]"></a>HAL_LTDC_DisableCLUT_NoReload</STRONG> (Thumb, 100 bytes, Stack size 12 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[8c3]"></a>HAL_LTDC_GetState</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[8c4]"></a>HAL_LTDC_GetError</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[39f]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[41d]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_Base_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[41e]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 410 bytes, Stack size 12 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_HallSensor_Init
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OnePulse_Init
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Init
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Init
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_Init
</UL>

<P><STRONG><a name="[41f]"></a>HAL_TIM_Base_DeInit</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspDeInit
</UL>

<P><STRONG><a name="[420]"></a>HAL_TIM_Base_MspDeInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_DeInit
</UL>

<P><STRONG><a name="[8c5]"></a>HAL_TIM_Base_Start</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)

<P><STRONG><a name="[8c6]"></a>HAL_TIM_Base_Stop</STRONG> (Thumb, 68 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)

<P><STRONG><a name="[3a0]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_TIM_Base_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[8c7]"></a>HAL_TIM_Base_Stop_IT</STRONG> (Thumb, 80 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)

<P><STRONG><a name="[421]"></a>HAL_TIM_Base_Start_DMA</STRONG> (Thumb, 232 bytes, Stack size 32 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>

<P><STRONG><a name="[9f]"></a>TIM_DMAError</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_DMAError &rArr; HAL_TIM_ErrorCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ErrorCallback
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32h7xx_hal_tim.o(.text)
<LI> stm32h7xx_hal_tim_ex.o(.text)
</UL>
<P><STRONG><a name="[424]"></a>HAL_TIM_Base_Stop_DMA</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
</UL>

<P><STRONG><a name="[426]"></a>HAL_TIM_OC_Init</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_MspInit
</UL>

<P><STRONG><a name="[427]"></a>HAL_TIM_OC_MspInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Init
</UL>

<P><STRONG><a name="[428]"></a>HAL_TIM_OC_DeInit</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_MspDeInit
</UL>

<P><STRONG><a name="[429]"></a>HAL_TIM_OC_MspDeInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DeInit
</UL>

<P><STRONG><a name="[42a]"></a>HAL_TIM_OC_Start</STRONG> (Thumb, 462 bytes, Stack size 72 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[42b]"></a>TIM_CCxChannelCmd</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_OnePulseN_Stop_IT
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_OnePulseN_Stop
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_OnePulseN_Start_IT
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_OnePulseN_Start
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_HallSensor_Stop_IT
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_HallSensor_Stop_DMA
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_HallSensor_Stop
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_HallSensor_Start_IT
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_HallSensor_Start_DMA
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_HallSensor_Start
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Stop_IT
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Stop_DMA
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Stop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start_IT
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start_DMA
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OnePulse_Stop_IT
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OnePulse_Stop
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OnePulse_Start_IT
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OnePulse_Start
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Stop_IT
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Stop_DMA
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Stop
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Start_IT
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Start_DMA
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_Start
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Stop_IT
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Stop_DMA
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Stop
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Start_IT
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Start_DMA
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Start
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_Stop_IT
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_Stop_DMA
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_Stop
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_Start_IT
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_Start_DMA
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_Start
</UL>

<P><STRONG><a name="[42c]"></a>HAL_TIM_OC_Stop</STRONG> (Thumb, 372 bytes, Stack size 40 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[42d]"></a>HAL_TIM_OC_Start_IT</STRONG> (Thumb, 548 bytes, Stack size 72 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[42e]"></a>HAL_TIM_OC_Stop_IT</STRONG> (Thumb, 458 bytes, Stack size 40 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[42f]"></a>HAL_TIM_OC_Start_DMA</STRONG> (Thumb, 1026 bytes, Stack size 120 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[a1]"></a>TIM_DMADelayPulseHalfCplt</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_DMADelayPulseHalfCplt &rArr; HAL_TIM_PWM_PulseFinishedHalfCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedHalfCpltCallback
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32h7xx_hal_tim.o(.text)
<LI> stm32h7xx_hal_tim_ex.o(.text)
</UL>
<P><STRONG><a name="[432]"></a>HAL_TIM_OC_Stop_DMA</STRONG> (Thumb, 490 bytes, Stack size 40 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[433]"></a>HAL_TIM_PWM_Init</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_MspInit
</UL>

<P><STRONG><a name="[434]"></a>HAL_TIM_PWM_MspInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
</UL>

<P><STRONG><a name="[435]"></a>HAL_TIM_PWM_DeInit</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_MspDeInit
</UL>

<P><STRONG><a name="[436]"></a>HAL_TIM_PWM_MspDeInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_DeInit
</UL>

<P><STRONG><a name="[437]"></a>HAL_TIM_PWM_Start</STRONG> (Thumb, 462 bytes, Stack size 72 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[438]"></a>HAL_TIM_PWM_Stop</STRONG> (Thumb, 372 bytes, Stack size 40 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[439]"></a>HAL_TIM_PWM_Start_IT</STRONG> (Thumb, 548 bytes, Stack size 72 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[43a]"></a>HAL_TIM_PWM_Stop_IT</STRONG> (Thumb, 458 bytes, Stack size 40 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[43b]"></a>HAL_TIM_PWM_Start_DMA</STRONG> (Thumb, 1026 bytes, Stack size 120 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[43c]"></a>HAL_TIM_PWM_Stop_DMA</STRONG> (Thumb, 490 bytes, Stack size 40 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[43d]"></a>HAL_TIM_IC_Init</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_MspInit
</UL>

<P><STRONG><a name="[43e]"></a>HAL_TIM_IC_MspInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Init
</UL>

<P><STRONG><a name="[43f]"></a>HAL_TIM_IC_DeInit</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_MspDeInit
</UL>

<P><STRONG><a name="[440]"></a>HAL_TIM_IC_MspDeInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_DeInit
</UL>

<P><STRONG><a name="[441]"></a>HAL_TIM_IC_Start</STRONG> (Thumb, 482 bytes, Stack size 88 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[442]"></a>HAL_TIM_IC_Stop</STRONG> (Thumb, 270 bytes, Stack size 40 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[443]"></a>HAL_TIM_IC_Start_IT</STRONG> (Thumb, 568 bytes, Stack size 96 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[444]"></a>HAL_TIM_IC_Stop_IT</STRONG> (Thumb, 356 bytes, Stack size 48 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[445]"></a>HAL_TIM_IC_Start_DMA</STRONG> (Thumb, 918 bytes, Stack size 104 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[a2]"></a>TIM_DMACaptureCplt</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_DMACaptureCplt &rArr; HAL_TIM_IC_CaptureCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32h7xx_hal_tim.o(.text)
<LI> stm32h7xx_hal_tim_ex.o(.text)
</UL>
<P><STRONG><a name="[a3]"></a>TIM_DMACaptureHalfCplt</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_DMACaptureHalfCplt &rArr; HAL_TIM_IC_CaptureHalfCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureHalfCpltCallback
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32h7xx_hal_tim.o(.text)
<LI> stm32h7xx_hal_tim_ex.o(.text)
</UL>
<P><STRONG><a name="[448]"></a>HAL_TIM_IC_Stop_DMA</STRONG> (Thumb, 388 bytes, Stack size 48 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[449]"></a>HAL_TIM_OnePulse_Init</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OnePulse_MspInit
</UL>

<P><STRONG><a name="[44a]"></a>HAL_TIM_OnePulse_MspInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OnePulse_Init
</UL>

<P><STRONG><a name="[44b]"></a>HAL_TIM_OnePulse_DeInit</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OnePulse_MspDeInit
</UL>

<P><STRONG><a name="[44c]"></a>HAL_TIM_OnePulse_MspDeInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OnePulse_DeInit
</UL>

<P><STRONG><a name="[44d]"></a>HAL_TIM_OnePulse_Start</STRONG> (Thumb, 260 bytes, Stack size 48 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[44e]"></a>HAL_TIM_OnePulse_Stop</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[44f]"></a>HAL_TIM_OnePulse_Start_IT</STRONG> (Thumb, 284 bytes, Stack size 48 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[450]"></a>HAL_TIM_OnePulse_Stop_IT</STRONG> (Thumb, 308 bytes, Stack size 24 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[451]"></a>HAL_TIM_Encoder_Init</STRONG> (Thumb, 294 bytes, Stack size 40 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_MspInit
</UL>

<P><STRONG><a name="[452]"></a>HAL_TIM_Encoder_MspInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_Init
</UL>

<P><STRONG><a name="[453]"></a>HAL_TIM_Encoder_DeInit</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_MspDeInit
</UL>

<P><STRONG><a name="[454]"></a>HAL_TIM_Encoder_MspDeInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Encoder_DeInit
</UL>

<P><STRONG><a name="[455]"></a>HAL_TIM_Encoder_Start</STRONG> (Thumb, 280 bytes, Stack size 48 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[456]"></a>HAL_TIM_Encoder_Stop</STRONG> (Thumb, 372 bytes, Stack size 56 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[457]"></a>HAL_TIM_Encoder_Start_IT</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[458]"></a>HAL_TIM_Encoder_Stop_IT</STRONG> (Thumb, 420 bytes, Stack size 48 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[459]"></a>HAL_TIM_Encoder_Start_DMA</STRONG> (Thumb, 836 bytes, Stack size 56 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[45a]"></a>HAL_TIM_Encoder_Stop_DMA</STRONG> (Thumb, 456 bytes, Stack size 56 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[39a]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 700 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutCallback
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_Break2Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM17_IRQHandler
</UL>

<P><STRONG><a name="[446]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_IC_CaptureCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DMACaptureCplt
</UL>

<P><STRONG><a name="[45b]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_OC_DelayElapsedCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[430]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_PWM_PulseFinishedCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DMADelayPulseNCplt
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DMADelayPulseCplt
</UL>

<P><STRONG><a name="[45e]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_TriggerCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DMATriggerCplt
</UL>

<P><STRONG><a name="[460]"></a>HAL_TIM_OC_ConfigChannel</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2_SetConfig
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC6_SetConfig
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC5_SetConfig
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4_SetConfig
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3_SetConfig
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1_SetConfig
</UL>

<P><STRONG><a name="[462]"></a>TIM_OC2_SetConfig</STRONG> (Thumb, 370 bytes, Stack size 20 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_HallSensor_Init
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OnePulse_ConfigChannel
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
</UL>

<P><STRONG><a name="[467]"></a>HAL_TIM_IC_ConfigChannel</STRONG> (Thumb, 300 bytes, Stack size 40 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_SetConfig
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI4_SetConfig
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI3_SetConfig
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_SetConfig
</UL>

<P><STRONG><a name="[468]"></a>TIM_TI1_SetConfig</STRONG> (Thumb, 280 bytes, Stack size 28 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_HallSensor_Init
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OnePulse_ConfigChannel
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_ConfigChannel
</UL>

<P><STRONG><a name="[46c]"></a>HAL_TIM_PWM_ConfigChannel</STRONG> (Thumb, 406 bytes, Stack size 32 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2_SetConfig
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC6_SetConfig
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC5_SetConfig
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4_SetConfig
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3_SetConfig
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1_SetConfig
</UL>

<P><STRONG><a name="[46d]"></a>HAL_TIM_OnePulse_ConfigChannel</STRONG> (Thumb, 388 bytes, Stack size 72 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_SetConfig
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2_SetConfig
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_SetConfig
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1_SetConfig
</UL>

<P><STRONG><a name="[46e]"></a>HAL_TIM_DMABurst_WriteStart</STRONG> (Thumb, 54 bytes, Stack size 48 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_DMABurst_MultiWriteStart
</UL>

<P><STRONG><a name="[46f]"></a>HAL_TIM_DMABurst_MultiWriteStart</STRONG> (Thumb, 746 bytes, Stack size 64 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_DMABurst_WriteStart
</UL>

<P><STRONG><a name="[471]"></a>HAL_TIM_DMABurst_WriteStop</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
</UL>

<P><STRONG><a name="[472]"></a>HAL_TIM_DMABurst_ReadStart</STRONG> (Thumb, 54 bytes, Stack size 48 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_DMABurst_MultiReadStart
</UL>

<P><STRONG><a name="[473]"></a>HAL_TIM_DMABurst_MultiReadStart</STRONG> (Thumb, 702 bytes, Stack size 32 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_DMABurst_ReadStart
</UL>

<P><STRONG><a name="[474]"></a>HAL_TIM_DMABurst_ReadStop</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
</UL>

<P><STRONG><a name="[8c8]"></a>HAL_TIM_GenerateEvent</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)

<P><STRONG><a name="[475]"></a>HAL_TIM_ConfigOCrefClear</STRONG> (Thumb, 444 bytes, Stack size 40 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETR_SetConfig
</UL>

<P><STRONG><a name="[476]"></a>TIM_ETR_SetConfig</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigOCrefClear
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SlaveTimer_SetConfig
</UL>

<P><STRONG><a name="[477]"></a>HAL_TIM_ConfigClockSource</STRONG> (Thumb, 466 bytes, Stack size 48 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETR_SetConfig
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_ConfigInputStage
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_ConfigInputStage
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRx_SetConfig
</UL>

<P><STRONG><a name="[8c9]"></a>HAL_TIM_ConfigTI1Input</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)

<P><STRONG><a name="[47b]"></a>HAL_TIM_SlaveConfigSynchro</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SlaveTimer_SetConfig
</UL>

<P><STRONG><a name="[47d]"></a>HAL_TIM_SlaveConfigSynchro_IT</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SlaveTimer_SetConfig
</UL>

<P><STRONG><a name="[8ca]"></a>HAL_TIM_ReadCapturedValue</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)

<P><STRONG><a name="[422]"></a>HAL_TIM_PeriodElapsedHalfCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_PeriodElapsedHalfCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DMAPeriodElapsedHalfCplt
</UL>

<P><STRONG><a name="[447]"></a>HAL_TIM_IC_CaptureHalfCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_IC_CaptureHalfCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DMACaptureHalfCplt
</UL>

<P><STRONG><a name="[431]"></a>HAL_TIM_PWM_PulseFinishedHalfCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_PWM_PulseFinishedHalfCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DMADelayPulseHalfCplt
</UL>

<P><STRONG><a name="[470]"></a>HAL_TIM_TriggerHalfCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_TriggerHalfCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DMATriggerHalfCplt
</UL>

<P><STRONG><a name="[423]"></a>HAL_TIM_ErrorCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DMAErrorCCxN
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DMAError
</UL>

<P><STRONG><a name="[8cb]"></a>HAL_TIM_Base_GetState</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)

<P><STRONG><a name="[8cc]"></a>HAL_TIM_OC_GetState</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)

<P><STRONG><a name="[8cd]"></a>HAL_TIM_PWM_GetState</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)

<P><STRONG><a name="[8ce]"></a>HAL_TIM_IC_GetState</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)

<P><STRONG><a name="[8cf]"></a>HAL_TIM_OnePulse_GetState</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)

<P><STRONG><a name="[8d0]"></a>HAL_TIM_Encoder_GetState</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)

<P><STRONG><a name="[8d1]"></a>HAL_TIM_GetActiveChannel</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)

<P><STRONG><a name="[8d2]"></a>HAL_TIM_GetChannelState</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)

<P><STRONG><a name="[8d3]"></a>HAL_TIM_DMABurstState</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)

<P><STRONG><a name="[47e]"></a>HAL_TIMEx_HallSensor_Init</STRONG> (Thumb, 288 bytes, Stack size 64 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_HallSensor_MspInit
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_SetConfig
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2_SetConfig
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>

<P><STRONG><a name="[47f]"></a>HAL_TIMEx_HallSensor_MspInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_HallSensor_Init
</UL>

<P><STRONG><a name="[480]"></a>HAL_TIMEx_HallSensor_DeInit</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_HallSensor_MspDeInit
</UL>

<P><STRONG><a name="[481]"></a>HAL_TIMEx_HallSensor_MspDeInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_HallSensor_DeInit
</UL>

<P><STRONG><a name="[482]"></a>HAL_TIMEx_HallSensor_Start</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[483]"></a>HAL_TIMEx_HallSensor_Stop</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[484]"></a>HAL_TIMEx_HallSensor_Start_IT</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[485]"></a>HAL_TIMEx_HallSensor_Stop_IT</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[486]"></a>HAL_TIMEx_HallSensor_Start_DMA</STRONG> (Thumb, 266 bytes, Stack size 40 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[487]"></a>HAL_TIMEx_HallSensor_Stop_DMA</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[488]"></a>HAL_TIMEx_OCN_Start</STRONG> (Thumb, 246 bytes, Stack size 48 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxNChannelCmd
</UL>

<P><STRONG><a name="[48a]"></a>HAL_TIMEx_OCN_Stop</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxNChannelCmd
</UL>

<P><STRONG><a name="[48b]"></a>HAL_TIMEx_OCN_Start_IT</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxNChannelCmd
</UL>

<P><STRONG><a name="[48c]"></a>HAL_TIMEx_OCN_Stop_IT</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxNChannelCmd
</UL>

<P><STRONG><a name="[48d]"></a>HAL_TIMEx_OCN_Start_DMA</STRONG> (Thumb, 670 bytes, Stack size 80 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxNChannelCmd
</UL>

<P><STRONG><a name="[48e]"></a>HAL_TIMEx_OCN_Stop_DMA</STRONG> (Thumb, 296 bytes, Stack size 32 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxNChannelCmd
</UL>

<P><STRONG><a name="[48f]"></a>HAL_TIMEx_PWMN_Start</STRONG> (Thumb, 246 bytes, Stack size 48 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxNChannelCmd
</UL>

<P><STRONG><a name="[490]"></a>HAL_TIMEx_PWMN_Stop</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxNChannelCmd
</UL>

<P><STRONG><a name="[491]"></a>HAL_TIMEx_PWMN_Start_IT</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxNChannelCmd
</UL>

<P><STRONG><a name="[492]"></a>HAL_TIMEx_PWMN_Stop_IT</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxNChannelCmd
</UL>

<P><STRONG><a name="[493]"></a>HAL_TIMEx_PWMN_Start_DMA</STRONG> (Thumb, 670 bytes, Stack size 80 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxNChannelCmd
</UL>

<P><STRONG><a name="[494]"></a>HAL_TIMEx_PWMN_Stop_DMA</STRONG> (Thumb, 296 bytes, Stack size 32 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxNChannelCmd
</UL>

<P><STRONG><a name="[495]"></a>HAL_TIMEx_OnePulseN_Start</STRONG> (Thumb, 470 bytes, Stack size 88 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxNChannelCmd
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[496]"></a>HAL_TIMEx_OnePulseN_Stop</STRONG> (Thumb, 348 bytes, Stack size 48 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxNChannelCmd
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[497]"></a>HAL_TIMEx_OnePulseN_Start_IT</STRONG> (Thumb, 494 bytes, Stack size 88 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxNChannelCmd
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[498]"></a>HAL_TIMEx_OnePulseN_Stop_IT</STRONG> (Thumb, 372 bytes, Stack size 48 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxNChannelCmd
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>

<P><STRONG><a name="[8d4]"></a>HAL_TIMEx_ConfigCommutEvent</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)

<P><STRONG><a name="[8d5]"></a>HAL_TIMEx_ConfigCommutEvent_IT</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)

<P><STRONG><a name="[8d6]"></a>HAL_TIMEx_ConfigCommutEvent_DMA</STRONG> (Thumb, 248 bytes, Stack size 16 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)

<P><STRONG><a name="[a4]"></a>TIMEx_DMACommutationCplt</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, stm32h7xx_hal_tim_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIMEx_DMACommutationCplt &rArr; HAL_TIMEx_CommutCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutCallback
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32h7xx_hal_tim.o(.text)
<LI> stm32h7xx_hal_tim_ex.o(.text)
</UL>
<P><STRONG><a name="[a5]"></a>TIMEx_DMACommutationHalfCplt</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, stm32h7xx_hal_tim_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIMEx_DMACommutationHalfCplt &rArr; HAL_TIMEx_CommutHalfCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutHalfCpltCallback
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32h7xx_hal_tim.o(.text)
<LI> stm32h7xx_hal_tim_ex.o(.text)
</UL>
<P><STRONG><a name="[8d7]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 310 bytes, Stack size 20 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)

<P><STRONG><a name="[8d8]"></a>HAL_TIMEx_ConfigBreakDeadTime</STRONG> (Thumb, 262 bytes, Stack size 16 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)

<P><STRONG><a name="[8d9]"></a>HAL_TIMEx_ConfigBreakInput</STRONG> (Thumb, 380 bytes, Stack size 44 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)

<P><STRONG><a name="[8da]"></a>HAL_TIMEx_RemapConfig</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)

<P><STRONG><a name="[8db]"></a>HAL_TIMEx_TISelection</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)

<P><STRONG><a name="[8dc]"></a>HAL_TIMEx_GroupChannel5</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)

<P><STRONG><a name="[45f]"></a>HAL_TIMEx_CommutCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIMEx_CommutCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMEx_DMACommutationCplt
</UL>

<P><STRONG><a name="[499]"></a>HAL_TIMEx_CommutHalfCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIMEx_CommutHalfCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMEx_DMACommutationHalfCplt
</UL>

<P><STRONG><a name="[45c]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIMEx_BreakCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[45d]"></a>HAL_TIMEx_Break2Callback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_tim_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIMEx_Break2Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[8dd]"></a>HAL_TIMEx_HallSensor_GetState</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)

<P><STRONG><a name="[8de]"></a>HAL_TIMEx_GetChannelNState</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)

<P><STRONG><a name="[391]"></a>HAL_UART_Init</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = HAL_UART_Init &rArr; UART_SetConfig &rArr; HAL_RCC_GetPCLK2Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[49a]"></a>UART_SetConfig</STRONG> (Thumb, 2222 bytes, Stack size 128 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = UART_SetConfig &rArr; HAL_RCC_GetPCLK2Freq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL3ClockFreq
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL2ClockFreq
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetD3PCLK1Freq
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RS485Ex_Init
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MultiProcessor_Init
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LIN_Init
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_HalfDuplex_Init
</UL>

<P><STRONG><a name="[49b]"></a>UART_AdvFeatureConfig</STRONG> (Thumb, 330 bytes, Stack size 4 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RS485Ex_Init
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MultiProcessor_Init
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LIN_Init
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_HalfDuplex_Init
</UL>

<P><STRONG><a name="[49c]"></a>UART_CheckIdleState</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART_CheckIdleState &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RS485Ex_Init
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MultiProcessorEx_AddressLength_Set
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MultiProcessor_Init
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MultiProcessor_EnableMuteMode
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MultiProcessor_DisableMuteMode
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LIN_Init
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_HalfDuplex_Init
</UL>

<P><STRONG><a name="[49f]"></a>HAL_HalfDuplex_Init</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
</UL>

<P><STRONG><a name="[4a0]"></a>HAL_LIN_Init</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
</UL>

<P><STRONG><a name="[4a1]"></a>HAL_MultiProcessor_Init</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
</UL>

<P><STRONG><a name="[4a2]"></a>HAL_UART_DeInit</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspDeInit
</UL>

<P><STRONG><a name="[4a3]"></a>HAL_UART_Transmit</STRONG> (Thumb, 338 bytes, Stack size 48 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>

<P><STRONG><a name="[49e]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_StopModeWakeUpSourceConfig
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
</UL>

<P><STRONG><a name="[4a4]"></a>HAL_UART_Receive</STRONG> (Thumb, 476 bytes, Stack size 48 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>

<P><STRONG><a name="[8df]"></a>HAL_UART_Transmit_IT</STRONG> (Thumb, 302 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)

<P><STRONG><a name="[36e]"></a>HAL_UART_Receive_IT</STRONG> (Thumb, 494 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>

<P><STRONG><a name="[4a5]"></a>HAL_UART_Transmit_DMA</STRONG> (Thumb, 294 bytes, Stack size 32 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>

<P><STRONG><a name="[4ab]"></a>HAL_UART_Receive_DMA</STRONG> (Thumb, 294 bytes, Stack size 24 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>

<P><STRONG><a name="[8e0]"></a>HAL_UART_DMAPause</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)

<P><STRONG><a name="[8e1]"></a>HAL_UART_DMAResume</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)

<P><STRONG><a name="[4ad]"></a>HAL_UART_DMAStop</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_GetError
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTxTransfer
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
</UL>

<P><STRONG><a name="[4af]"></a>HAL_UART_Abort</STRONG> (Thumb, 312 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_GetError
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
</UL>

<P><STRONG><a name="[4b0]"></a>HAL_UART_AbortTransmit</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_GetError
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
</UL>

<P><STRONG><a name="[4b1]"></a>HAL_UART_AbortReceive</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_GetError
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
</UL>

<P><STRONG><a name="[4b2]"></a>HAL_UART_Abort_IT</STRONG> (Thumb, 398 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_AbortCpltCallback
</UL>

<P><STRONG><a name="[4b3]"></a>HAL_UART_AbortCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_UART_AbortCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Abort_IT
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMATxAbortCallback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMARxAbortCallback
</UL>

<P><STRONG><a name="[4b4]"></a>HAL_UART_AbortTransmit_IT</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_AbortTransmitCpltCallback
</UL>

<P><STRONG><a name="[4b5]"></a>HAL_UART_AbortTransmitCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_UART_AbortTransmitCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_AbortTransmit_IT
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMATxOnlyAbortCallback
</UL>

<P><STRONG><a name="[4b6]"></a>HAL_UART_AbortReceive_IT</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_AbortReceiveCpltCallback
</UL>

<P><STRONG><a name="[4b7]"></a>HAL_UART_AbortReceiveCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_UART_AbortReceiveCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_AbortReceive_IT
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMARxOnlyAbortCallback
</UL>

<P><STRONG><a name="[397]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 828 bytes, Stack size 32 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_UART_IRQHandler &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_WakeupCallback
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_TxFifoEmptyCallback
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxFifoFullCallback
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTransmit_IT
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[4aa]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_UART_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAError
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
</UL>

<P><STRONG><a name="[4a6]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_UART_TxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTransmit_IT
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMATransmitCplt
</UL>

<P><STRONG><a name="[4a7]"></a>HAL_UART_TxHalfCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_UART_TxHalfCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMATxHalfCplt
</UL>

<P><STRONG><a name="[4ac]"></a>HAL_UART_RxHalfCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_UART_RxHalfCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMARxHalfCplt
</UL>

<P><STRONG><a name="[8e2]"></a>HAL_UART_ReceiverTimeout_Config</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)

<P><STRONG><a name="[8e3]"></a>HAL_UART_EnableReceiverTimeout</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)

<P><STRONG><a name="[8e4]"></a>HAL_UART_DisableReceiverTimeout</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)

<P><STRONG><a name="[4bc]"></a>HAL_MultiProcessor_EnableMuteMode</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[4bd]"></a>HAL_MultiProcessor_DisableMuteMode</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[8e5]"></a>HAL_MultiProcessor_EnterMuteMode</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)

<P><STRONG><a name="[8e6]"></a>HAL_HalfDuplex_EnableTransmitter</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)

<P><STRONG><a name="[8e7]"></a>HAL_HalfDuplex_EnableReceiver</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)

<P><STRONG><a name="[8e8]"></a>HAL_LIN_SendBreak</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)

<P><STRONG><a name="[8e9]"></a>HAL_UART_GetState</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)

<P><STRONG><a name="[8ea]"></a>HAL_UART_GetError</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, stm32h7xx_hal_uart.o(.text), UNUSED)

<P><STRONG><a name="[4be]"></a>HAL_RS485Ex_Init</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, stm32h7xx_hal_uart_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
</UL>

<P><STRONG><a name="[4b8]"></a>HAL_UARTEx_WakeupCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_uart_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_UARTEx_WakeupCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[4bb]"></a>HAL_UARTEx_RxFifoFullCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_uart_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_UARTEx_RxFifoFullCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[4ba]"></a>HAL_UARTEx_TxFifoEmptyCallback</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32h7xx_hal_uart_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_UARTEx_TxFifoEmptyCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[4bf]"></a>HAL_MultiProcessorEx_AddressLength_Set</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, stm32h7xx_hal_uart_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[4c0]"></a>HAL_UARTEx_StopModeWakeUpSourceConfig</STRONG> (Thumb, 190 bytes, Stack size 40 bytes, stm32h7xx_hal_uart_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEx_Wakeup_AddressConfig
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>

<P><STRONG><a name="[8eb]"></a>HAL_UARTEx_EnableStopMode</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, stm32h7xx_hal_uart_ex.o(.text), UNUSED)

<P><STRONG><a name="[8ec]"></a>HAL_UARTEx_DisableStopMode</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, stm32h7xx_hal_uart_ex.o(.text), UNUSED)

<P><STRONG><a name="[4c2]"></a>HAL_UARTEx_EnableFifoMode</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, stm32h7xx_hal_uart_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEx_SetNbDataToProcess
</UL>

<P><STRONG><a name="[394]"></a>HAL_UARTEx_DisableFifoMode</STRONG> (Thumb, 112 bytes, Stack size 12 bytes, stm32h7xx_hal_uart_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_UARTEx_DisableFifoMode
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[392]"></a>HAL_UARTEx_SetTxFifoThreshold</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, stm32h7xx_hal_uart_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_UARTEx_SetTxFifoThreshold &rArr; UARTEx_SetNbDataToProcess
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEx_SetNbDataToProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[393]"></a>HAL_UARTEx_SetRxFifoThreshold</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, stm32h7xx_hal_uart_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_UARTEx_SetRxFifoThreshold &rArr; UARTEx_SetNbDataToProcess
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTEx_SetNbDataToProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[98]"></a>SystemInit</STRONG> (Thumb, 360 bytes, Stack size 0 bytes, system_stm32h7xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(.text)
</UL>
<P><STRONG><a name="[8ed]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 720 bytes, Stack size 44 bytes, system_stm32h7xx.o(.text), UNUSED)

<P><STRONG><a name="[4c4]"></a>TouchGFXHAL::initialize()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, touchgfxhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[10c]"></a>TouchGFXHAL::getTFTFrameBuffer() const</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, touchgfxhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TouchGFXHAL::getTFTFrameBuffer() const &rArr; TouchGFXGeneratedHAL::getTFTFrameBuffer() const
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::getTFTFrameBuffer() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[129]"></a>TouchGFXHAL::setTFTFrameBuffer(unsigned short*)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TouchGFXHAL::setTFTFrameBuffer(unsigned short*) &rArr; TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[107]"></a>TouchGFXHAL::flushFrameBuffer(touchgfx::Rect const&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TouchGFXHAL::flushFrameBuffer(touchgfx::Rect const&) &rArr; TouchGFXGeneratedHAL::flushFrameBuffer(touchgfx::Rect const&) &rArr; SCB_CleanInvalidateDCache()
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer(touchgfx::Rect const&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[10d]"></a>TouchGFXHAL::blockCopy(void*, void const*, unsigned int)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, touchgfxhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TouchGFXHAL::blockCopy(void*, void const*, unsigned int) &rArr; TouchGFXGeneratedHAL::blockCopy(void*, void const*, unsigned int) &rArr; touchgfx::HAL::blockCopy(void*, void const*, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::blockCopy(void*, void const*, unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[119]"></a>TouchGFXHAL::configureInterrupts()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, touchgfxhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TouchGFXHAL::configureInterrupts() &rArr; TouchGFXGeneratedHAL::configureInterrupts() &rArr; __NVIC_SetPriority(IRQn_Type, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::configureInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[11a]"></a>TouchGFXHAL::enableInterrupts()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, touchgfxhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TouchGFXHAL::enableInterrupts() &rArr; TouchGFXGeneratedHAL::enableInterrupts() &rArr; __NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::enableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[11b]"></a>TouchGFXHAL::disableInterrupts()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, touchgfxhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TouchGFXHAL::disableInterrupts() &rArr; TouchGFXGeneratedHAL::disableInterrupts() &rArr; __NVIC_DisableIRQ(IRQn_Type)
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::disableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[11c]"></a>TouchGFXHAL::enableLCDControllerInterrupt()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, touchgfxhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TouchGFXHAL::enableLCDControllerInterrupt() &rArr; TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[161]"></a>STM32TouchController::init()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32touchcontroller.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = STM32TouchController::init()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[162]"></a>STM32TouchController::sampleTouch(int&, int&)</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, stm32touchcontroller.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = STM32TouchController::sampleTouch(int&, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnTy
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReturnTx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[8ee]"></a>touchgfx::GPIO::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgpio.o(.text), UNUSED)

<P><STRONG><a name="[4e6]"></a>touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, touchgfxgpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[4e7]"></a>touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, touchgfxgpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[729]"></a>touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, touchgfxgpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
</UL>

<P><STRONG><a name="[8ef]"></a>touchgfx::GPIO::get(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, touchgfxgpio.o(.text), UNUSED)

<P><STRONG><a name="[4d2]"></a>touchgfx_init</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, touchgfxconfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = touchgfx_init &rArr; TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::registerTexts(touchgfx::Texts const*)
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(touchgfx::Bitmap::BitmapData const*, unsigned short, unsigned short*, unsigned int, unsigned int)
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstanceSize()
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstance()
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::getInstance()
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
</UL>

<P><STRONG><a name="[4da]"></a>touchgfx_taskEntry</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = touchgfx_taskEntry &rArr; touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::taskEntry()
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Process
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFX_Task
</UL>

<P><STRONG><a name="[4c5]"></a>TouchGFXGeneratedHAL::initialize()</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, touchgfxgeneratedhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>

<P><STRONG><a name="[169]"></a>TouchGFXGeneratedHAL::configureInterrupts()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TouchGFXGeneratedHAL::configureInterrupts() &rArr; __NVIC_SetPriority(IRQn_Type, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority(IRQn_Type, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::configureInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[16a]"></a>TouchGFXGeneratedHAL::enableInterrupts()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TouchGFXGeneratedHAL::enableInterrupts() &rArr; __NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::enableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[16b]"></a>TouchGFXGeneratedHAL::disableInterrupts()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TouchGFXGeneratedHAL::disableInterrupts() &rArr; __NVIC_DisableIRQ(IRQn_Type)
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ(IRQn_Type)
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::disableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[16c]"></a>TouchGFXGeneratedHAL::enableLCDControllerInterrupt()</STRONG> (Thumb, 88 bytes, Stack size 4 bytes, touchgfxgeneratedhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::enableLCDControllerInterrupt()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[167]"></a>TouchGFXGeneratedHAL::getTFTFrameBuffer() const</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, touchgfxgeneratedhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TouchGFXGeneratedHAL::getTFTFrameBuffer() const
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::getTFTFrameBuffer() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[16d]"></a>TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::setTFTFrameBuffer(unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[166]"></a>TouchGFXGeneratedHAL::flushFrameBuffer(touchgfx::Rect const&)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TouchGFXGeneratedHAL::flushFrameBuffer(touchgfx::Rect const&) &rArr; SCB_CleanInvalidateDCache()
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::flushFrameBuffer(touchgfx::Rect const&)
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_CleanInvalidateDCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::flushFrameBuffer(touchgfx::Rect const&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[168]"></a>TouchGFXGeneratedHAL::blockCopy(void*, void const*, unsigned int)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, touchgfxgeneratedhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TouchGFXGeneratedHAL::blockCopy(void*, void const*, unsigned int) &rArr; touchgfx::HAL::blockCopy(void*, void const*, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blockCopy(void*, void const*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::blockCopy(void*, void const*, unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[12d]"></a>TouchGFXGeneratedHAL::InvalidateCache()</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TouchGFXGeneratedHAL::InvalidateCache() &rArr; SCB_CleanInvalidateDCache()
</UL>
<BR>[Calls]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_CleanInvalidateDCache()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[12e]"></a>TouchGFXGeneratedHAL::FlushCache()</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TouchGFXGeneratedHAL::FlushCache() &rArr; SCB_CleanInvalidateDCache()
</UL>
<BR>[Calls]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_CleanInvalidateDCache()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[40f]"></a>HAL_LTDC_LineEventCallback</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, touchgfxgeneratedhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = HAL_LTDC_LineEventCallback &rArr; touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ProgramLineEvent
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::vSync()
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::frontPorchEntered()
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getInstance()
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::signalVSync()
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[4cc]"></a>STM32H7DMA::STM32H7DMA()</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, stm32dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = STM32H7DMA::STM32H7DMA() &rArr; touchgfx::BlitOp::BlitOp__sub_object() &rArr; touchgfx::colortype::colortype__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BlitOp::BlitOp__sub_object()
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::DMA_Interface__sub_object(touchgfx::DMA_Queue&)
</UL>
<BR>[Called By]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.1
</UL>

<P><STRONG><a name="[8f0]"></a>STM32H7DMA::STM32H7DMA__sub_object()</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, stm32dma.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>STM32H7DMA::~STM32H7DMA()</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, stm32dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = STM32H7DMA::~STM32H7DMA() &rArr; touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__sub_object()
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ(IRQn_Type)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::~DMA_Interface__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::~STM32H7DMA__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(.text)
<LI> stm32dma.o(.rodata._ZTV10STM32H7DMA)
</UL>
<P><STRONG><a name="[8f1]"></a>STM32H7DMA::~STM32H7DMA__sub_object()</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, stm32dma.o(.text), UNUSED)

<P><STRONG><a name="[ea]"></a>STM32H7DMA::~STM32H7DMA__deallocating()</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, stm32dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = STM32H7DMA::~STM32H7DMA__deallocating() &rArr; STM32H7DMA::~STM32H7DMA() &rArr; touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::~STM32H7DMA()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV10STM32H7DMA)
</UL>
<P><STRONG><a name="[e6]"></a>STM32H7DMA::initialize()</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = STM32H7DMA::initialize() &rArr; __NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV10STM32H7DMA)
</UL>
<P><STRONG><a name="[e3]"></a>STM32H7DMA::getBlitCaps()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, stm32dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = STM32H7DMA::getBlitCaps()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV10STM32H7DMA)
</UL>
<P><STRONG><a name="[ee]"></a>STM32H7DMA::setupDataCopy(touchgfx::BlitOp const&)</STRONG> (Thumb, 1010 bytes, Stack size 64 bytes, stm32dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = STM32H7DMA::setupDataCopy(touchgfx::BlitOp const&) &rArr; STM32H7DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::operator unsigned int() const
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::getChromARTInputFormat(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV10STM32H7DMA)
</UL>
<P><STRONG><a name="[ef]"></a>STM32H7DMA::setupDataFill(touchgfx::BlitOp const&)</STRONG> (Thumb, 440 bytes, Stack size 40 bytes, stm32dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = STM32H7DMA::setupDataFill(touchgfx::BlitOp const&) &rArr; STM32H7DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::operator unsigned int() const
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV10STM32H7DMA)
</UL>
<P><STRONG><a name="[4f5]"></a>touchgfx::OSWrappers::initialize()</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, oswrappers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
</UL>

<P><STRONG><a name="[4f8]"></a>touchgfx::OSWrappers::takeFrameBufferSemaphore()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, oswrappers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[4fa]"></a>touchgfx::OSWrappers::giveFrameBufferSemaphore()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, oswrappers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = touchgfx::OSWrappers::giveFrameBufferSemaphore() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::unlockFrameBuffer()
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[4fc]"></a>touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, oswrappers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = touchgfx::OSWrappers::tryTakeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::addToQueue(touchgfx::BlitOp const&)
</UL>

<P><STRONG><a name="[4fd]"></a>touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, oswrappers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::executeCompleted()
</UL>

<P><STRONG><a name="[4e4]"></a>touchgfx::OSWrappers::signalVSync()</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, oswrappers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
</UL>
<BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[8f2]"></a>touchgfx::OSWrappers::signalRenderingDone()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, oswrappers.o(.text), UNUSED)

<P><STRONG><a name="[4ff]"></a>touchgfx::OSWrappers::waitForVSync()</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, oswrappers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::taskEntry()
</UL>

<P><STRONG><a name="[501]"></a>touchgfx::OSWrappers::taskDelay(unsigned short)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, oswrappers.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>

<P><STRONG><a name="[36d]"></a>MX_TouchGFX_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app_touchgfx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 372 + Unknown Stack Size
<LI>Call Chain = MX_TouchGFX_Init &rArr; touchgfx_init &rArr; TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[380]"></a>MX_TouchGFX_Process</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app_touchgfx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = MX_TouchGFX_Process &rArr; touchgfx_taskEntry &rArr; touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_taskEntry
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiShowTask
</UL>

<P><STRONG><a name="[502]"></a>TouchGFX_Task</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, app_touchgfx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_taskEntry
</UL>

<P><STRONG><a name="[503]"></a>FrontendApplication::FrontendApplication(Model&, FrontendHeap&)</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, frontendapplication.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)
</UL>
<BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap__sub_object()
</UL>

<P><STRONG><a name="[8f3]"></a>FrontendApplication::FrontendApplication__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, frontendapplication.o(.text), UNUSED)

<P><STRONG><a name="[684]"></a>Model::Model()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, model.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Model::Model()
</UL>
<BR>[Called By]<UL><LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap__sub_object()
</UL>

<P><STRONG><a name="[8f4]"></a>Model::Model__sub_object()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, model.o(.text), UNUSED)

<P><STRONG><a name="[690]"></a>Model::tick()</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, model.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Model::tick()
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>

<P><STRONG><a name="[505]"></a>Screen1Presenter::Screen1Presenter(Screen1View&)</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, screen1presenter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Screen1Presenter::Screen1Presenter(Screen1View&) &rArr; touchgfx::Presenter::Presenter__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Presenter::Presenter__sub_object()
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::ModelListener__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[8f5]"></a>Screen1Presenter::Screen1Presenter__sub_object(Screen1View&)</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, screen1presenter.o(.text), UNUSED)

<P><STRONG><a name="[149]"></a>Screen1Presenter::activate()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, screen1presenter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Screen1Presenter::activate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.rodata._ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[14a]"></a>Screen1Presenter::deactivate()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, screen1presenter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Screen1Presenter::deactivate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.rodata._ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[14d]"></a>Screen1Presenter::UpDateHeartRateLine(int)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, screen1presenter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Screen1Presenter::UpDateHeartRateLine(int) &rArr; Screen1View::UpDateHeartRateLine(int) &rArr; touchgfx::AbstractDataGraphWithY::addDataPoint(int) &rArr; touchgfx::AbstractDataGraphWithY::addDataPointScaled(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::UpDateHeartRateLine(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to Screen1Presenter::UpDateHeartRateLine(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.rodata._ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[150]"></a>non-virtual thunk to Screen1Presenter::UpDateHeartRateLine(int)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, screen1presenter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = non-virtual thunk to Screen1Presenter::UpDateHeartRateLine(int) &rArr; Screen1Presenter::UpDateHeartRateLine(int) &rArr; Screen1View::UpDateHeartRateLine(int) &rArr; touchgfx::AbstractDataGraphWithY::addDataPoint(int) &rArr; touchgfx::AbstractDataGraphWithY::addDataPointScaled(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::UpDateHeartRateLine(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.rodata._ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[509]"></a>Screen1View::Screen1View()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, screen1view.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 744<LI>Call Chain = Screen1View::Screen1View() &rArr; Screen1ViewBase::Screen1ViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[8f6]"></a>Screen1View::Screen1View__sub_object()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, screen1view.o(.text), UNUSED)

<P><STRONG><a name="[101]"></a>Screen1View::setupScreen()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, screen1view.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Screen1View::setupScreen() &rArr; Screen1ViewBase::setupScreen()
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
</UL>
<P><STRONG><a name="[102]"></a>Screen1View::tearDownScreen()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, screen1view.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Screen1View::tearDownScreen()
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::tearDownScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
</UL>
<P><STRONG><a name="[508]"></a>Screen1View::UpDateHeartRateLine(int)</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, screen1view.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Screen1View::UpDateHeartRateLine(int) &rArr; touchgfx::AbstractDataGraphWithY::addDataPoint(int) &rArr; touchgfx::AbstractDataGraphWithY::addDataPointScaled(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::getValue()
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::setGraphRangeY(int, int)
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::addDataPoint(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::UpDateHeartRateLine(int)
</UL>

<P><STRONG><a name="[50d]"></a>screenPresenter::screenPresenter(screenView&)</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, screenpresenter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = screenPresenter::screenPresenter(screenView&) &rArr; touchgfx::Presenter::Presenter__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Presenter::Presenter__sub_object()
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::ModelListener__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[8f7]"></a>screenPresenter::screenPresenter__sub_object(screenView&)</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, screenpresenter.o(.text), UNUSED)

<P><STRONG><a name="[13d]"></a>screenPresenter::activate()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, screenpresenter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = screenPresenter::activate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenpresenter.o(.rodata._ZTV15screenPresenter)
</UL>
<P><STRONG><a name="[13e]"></a>screenPresenter::deactivate()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, screenpresenter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = screenPresenter::deactivate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenpresenter.o(.rodata._ZTV15screenPresenter)
</UL>
<P><STRONG><a name="[141]"></a>screenPresenter::UpDateHeartNum(int)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, screenpresenter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = screenPresenter::UpDateHeartNum(int) &rArr; screenView::UpDateHeartNum(int) &rArr; touchgfx::CircleProgress::setValue(int) &rArr; void touchgfx::Circle::updateArcEnd&lang;touchgfx::CWRUtil::Q5&rang;(touchgfx::CWRUtil::Q5) &rArr; touchgfx::Circle::getMinimalRectForUpdatedEndAngle(touchgfx::CWRUtil::Q5 const&) const &rArr; touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAR(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::UpDateHeartNum(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to screenPresenter::UpDateHeartNum(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenpresenter.o(.rodata._ZTV15screenPresenter)
</UL>
<P><STRONG><a name="[145]"></a>non-virtual thunk to screenPresenter::UpDateHeartNum(int)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, screenpresenter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = non-virtual thunk to screenPresenter::UpDateHeartNum(int) &rArr; screenPresenter::UpDateHeartNum(int) &rArr; screenView::UpDateHeartNum(int) &rArr; touchgfx::CircleProgress::setValue(int) &rArr; void touchgfx::Circle::updateArcEnd&lang;touchgfx::CWRUtil::Q5&rang;(touchgfx::CWRUtil::Q5) &rArr; touchgfx::Circle::getMinimalRectForUpdatedEndAngle(touchgfx::CWRUtil::Q5 const&) const &rArr; touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAR(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter::UpDateHeartNum(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenpresenter.o(.rodata._ZTV15screenPresenter)
</UL>
<P><STRONG><a name="[142]"></a>screenPresenter::UpDateTemNum(int)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, screenpresenter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = screenPresenter::UpDateTemNum(int) &rArr; screenView::UpDateTemNum(int) &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, char const*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, char const*, float const*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, unsigned short const*, char const*, float const*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::UpDateTemNum(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to screenPresenter::UpDateTemNum(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenpresenter.o(.rodata._ZTV15screenPresenter)
</UL>
<P><STRONG><a name="[146]"></a>non-virtual thunk to screenPresenter::UpDateTemNum(int)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, screenpresenter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = non-virtual thunk to screenPresenter::UpDateTemNum(int) &rArr; screenPresenter::UpDateTemNum(int) &rArr; screenView::UpDateTemNum(int) &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, char const*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, char const*, float const*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, unsigned short const*, char const*, float const*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter::UpDateTemNum(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenpresenter.o(.rodata._ZTV15screenPresenter)
</UL>
<P><STRONG><a name="[510]"></a>screenView::screenView()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, screenview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = screenView::screenView() &rArr; screenViewBase::screenViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[8f8]"></a>screenView::screenView__sub_object()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, screenview.o(.text), UNUSED)

<P><STRONG><a name="[f7]"></a>screenView::setupScreen()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, screenview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = screenView::setupScreen() &rArr; screenViewBase::setupScreen()
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[f9]"></a>screenView::tearDownScreen()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, screenview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = screenView::tearDownScreen()
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::tearDownScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[50e]"></a>screenView::UpDateHeartNum(int)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, screenview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = screenView::UpDateHeartNum(int) &rArr; touchgfx::CircleProgress::setValue(int) &rArr; void touchgfx::Circle::updateArcEnd&lang;touchgfx::CWRUtil::Q5&rang;(touchgfx::CWRUtil::Q5) &rArr; touchgfx::Circle::getMinimalRectForUpdatedEndAngle(touchgfx::CWRUtil::Q5 const&) const &rArr; touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAR(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setValue(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter::UpDateHeartNum(int)
</UL>

<P><STRONG><a name="[50f]"></a>screenView::UpDateTemNum(int)</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, screenview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = screenView::UpDateTemNum(int) &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, char const*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, char const*, float const*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, unsigned short const*, char const*, float const*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, char const*, float)
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard(unsigned short const*)
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setValue(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter::UpDateTemNum(int)
</UL>

<P><STRONG><a name="[16e]"></a>ApplicationFontProvider::getFont(unsigned short)</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, applicationfontprovider.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ApplicationFontProvider::getFont(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getFonts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
</UL>
<P><STRONG><a name="[4d3]"></a>BitmapDatabase::getInstance()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bitmapdatabase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[4d4]"></a>BitmapDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bitmapdatabase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[515]"></a>FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, frontendapplicationbase.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getInstance()
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object()
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::MVPApplication__sub_object()
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>

<P><STRONG><a name="[504]"></a>FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, frontendapplicationbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[51a]"></a>FrontendApplicationBase::gotoscreenScreenNoTransition()</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, frontendapplicationbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = FrontendApplicationBase::gotoscreenScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)()) &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object()
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator=(touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&&)
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)())
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::gotoStartScreen(FrontendApplication&)
</UL>

<P><STRONG><a name="[c2]"></a>FrontendApplicationBase::gotoscreenScreenNoTransitionImpl()</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoscreenScreenNoTransitionImpl() &rArr; screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*) &rArr; screenView::screenView() &rArr; screenViewBase::screenViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.text)
</UL>
<P><STRONG><a name="[51e]"></a>FrontendApplicationBase::gotoscreenScreenWipeTransitionEast()</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, frontendapplicationbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = FrontendApplicationBase::gotoscreenScreenWipeTransitionEast() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)()) &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object()
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator=(touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&&)
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)())
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::buttonCallbackHandler(touchgfx::AbstractButton const&)
</UL>

<P><STRONG><a name="[c3]"></a>FrontendApplicationBase::gotoscreenScreenWipeTransitionEastImpl()</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoscreenScreenWipeTransitionEastImpl() &rArr; screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*) &rArr; screenView::screenView() &rArr; screenViewBase::screenViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.text)
</UL>
<P><STRONG><a name="[520]"></a>FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEast()</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, frontendapplicationbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEast() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)()) &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object()
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator=(touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&&)
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)())
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::buttonCallbackHandler(touchgfx::AbstractButton const&)
</UL>

<P><STRONG><a name="[c4]"></a>FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEastImpl()</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 832 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEastImpl() &rArr; Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*) &rArr; Screen1View::Screen1View() &rArr; Screen1ViewBase::Screen1ViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.text)
</UL>
<P><STRONG><a name="[526]"></a>touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*)</STRONG> (Thumb, 232 bytes, Stack size 144 bytes, generatedfont.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*)
</UL>
<BR>[Calls]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::ConstFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_STSONG_TTF_40_4bpp()
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_STSONG_TTF_20_4bpp()
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_STSONG_TTF_10_4bpp()
</UL>

<P><STRONG><a name="[8f9]"></a>touchgfx::GeneratedFont::GeneratedFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*)</STRONG> (Thumb, 232 bytes, Stack size 144 bytes, generatedfont.o(.text), UNUSED)

<P><STRONG><a name="[1ff]"></a>touchgfx::GeneratedFont::getPixelData(touchgfx::GlyphNode const*) const</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, generatedfont.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::GeneratedFont::getPixelData(touchgfx::GlyphNode const*) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[1fc]"></a>touchgfx::GeneratedFont::getKerning(unsigned short, touchgfx::GlyphNode const*) const</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, generatedfont.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = touchgfx::GeneratedFont::getKerning(unsigned short, touchgfx::GlyphNode const*) const &rArr; touchgfx::GlyphNode::kerningTablePos() const
</UL>
<BR>[Calls]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::kerningTablePos() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[529]"></a>Screen1ViewBase::Screen1ViewBase()</STRONG> (Thumb, 3232 bytes, Stack size 728 bytes, screen1viewbase.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::setGraphRangeY(int, int)
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::colortype__sub_object(unsigned int)
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText__sub_object(unsigned short)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea__sub_object()
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setColor(touchgfx::colortype)
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setLinespacing(short)
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(touchgfx::TypedText)
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::Callback__sub_object(Screen1ViewBase*, void (Screen1ViewBase::*)(touchgfx::AbstractButton const&))
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::Slider()
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setValue(int)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setupHorizontalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setValueRange(int, int)
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&, touchgfx::Bitmap const&)
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&)
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap__sub_object(unsigned short)
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;Screen1Presenter&rang;::View__sub_object()
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box__sub_object()
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::setColor(touchgfx::colortype)
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElementNoCWR::setColor(touchgfx::colortype)
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::setScale(int)
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::addDataPoint(float)
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::GraphElementHistogram()
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::setBaseline(int)
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::setBarWidth(unsigned short)
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::setupBuffer(unsigned char*, unsigned int)
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::setScale(int)
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CacheableContainer::CacheableContainer()
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphAreaPadding(short, short, short, short)
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short)
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::addGraphElement(touchgfx::AbstractGraphElement&)
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::GraphElementLine()
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::setLineWidth(unsigned char)
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::GraphElementDots()
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::setDotWidth(unsigned char)
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::ButtonWithLabel()
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::setLabelColorPressed(touchgfx::colortype)
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::setLabelColor(touchgfx::colortype)
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::setLabelText(touchgfx::TypedText)
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButton::setAction(touchgfx::GenericCallback&lang;touchgfx::AbstractButton const&, void, void&rang;&)
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::PainterRGB565__sub_object(touchgfx::colortype, unsigned char)
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::setColor(touchgfx::colortype)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::setPainter(touchgfx::AbstractPainter&)
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphScroll&lang;(short)125&rang;::GraphScroll__sub_object()
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::setAlpha(unsigned char)
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::~TypedText__sub_object()
</UL>

<P><STRONG><a name="[50a]"></a>Screen1ViewBase::Screen1ViewBase__sub_object()</STRONG> (Thumb, 3232 bytes, Stack size 728 bytes, screen1viewbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = Screen1ViewBase::Screen1ViewBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1View()
</UL>

<P><STRONG><a name="[c5]"></a>Screen1ViewBase::buttonCallbackHandler(touchgfx::AbstractButton const&)</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, screen1viewbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = Screen1ViewBase::buttonCallbackHandler(touchgfx::AbstractButton const&) &rArr; FrontendApplicationBase::gotoscreenScreenWipeTransitionEast() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)()) &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoscreenScreenWipeTransitionEast()
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::application()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.text)
</UL>
<P><STRONG><a name="[13c]"></a>Screen1ViewBase::setupScreen()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, screen1viewbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Screen1ViewBase::setupScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[550]"></a>screenViewBase::screenViewBase()</STRONG> (Thumb, 1334 bytes, Stack size 360 bytes, screenviewbase.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard(unsigned short const*)
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setValue(int)
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText__sub_object(unsigned short)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea__sub_object()
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setColor(touchgfx::colortype)
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setLinespacing(short)
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(touchgfx::TypedText)
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&)
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap__sub_object(unsigned short)
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box__sub_object()
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::setColor(touchgfx::colortype)
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::setupBuffer(unsigned char*, unsigned int)
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::ButtonWithLabel()
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::setLabelColorPressed(touchgfx::colortype)
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::setLabelColor(touchgfx::colortype)
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::setLabelText(touchgfx::TypedText)
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButton::setAction(touchgfx::GenericCallback&lang;touchgfx::AbstractButton const&, void, void&rang;&)
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::Container__sub_object()
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::Callback__sub_object(screenViewBase*, void (screenViewBase::*)(touchgfx::AbstractButton const&))
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, char const*, ...)
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;screenPresenter&rang;::View__sub_object()
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::setRange(int, int, unsigned short, unsigned short)
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::setBackground(touchgfx::Bitmap const&)
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard__sub_object()
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::PainterRGB565Bitmap__sub_object(touchgfx::Bitmap const&, unsigned char)
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::setBitmap(touchgfx::Bitmap const&)
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::CircleProgress()
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setRadius(int)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setCenter(int, int)
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setProgressIndicatorPosition(short, short, short, short)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setStartEndAngle(int, int)
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setLineWidth(int)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setPainter(touchgfx::AbstractPainter&)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::~TypedText__sub_object()
</UL>

<P><STRONG><a name="[511]"></a>screenViewBase::screenViewBase__sub_object()</STRONG> (Thumb, 1334 bytes, Stack size 360 bytes, screenviewbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = screenViewBase::screenViewBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::screenView()
</UL>

<P><STRONG><a name="[c6]"></a>screenViewBase::buttonCallbackHandler(touchgfx::AbstractButton const&)</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, screenviewbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = screenViewBase::buttonCallbackHandler(touchgfx::AbstractButton const&) &rArr; FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEast() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)()) &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEast()
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::application()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.text)
</UL>
<P><STRONG><a name="[138]"></a>screenViewBase::setupScreen()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, screenviewbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = screenViewBase::setupScreen()
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[55c]"></a>getFont_STSONG_TTF_10_4bpp()</STRONG> (Thumb, 166 bytes, Stack size 56 bytes, table_stsong_ttf_10_4bpp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = getFont_STSONG_TTF_10_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*)
</UL>
<BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*)
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::resetFont(unsigned short)
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>

<P><STRONG><a name="[55f]"></a>getFont_STSONG_TTF_20_4bpp()</STRONG> (Thumb, 168 bytes, Stack size 56 bytes, table_stsong_ttf_20_4bpp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = getFont_STSONG_TTF_20_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*)
</UL>
<BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*)
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::resetFont(unsigned short)
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>

<P><STRONG><a name="[560]"></a>getFont_STSONG_TTF_40_4bpp()</STRONG> (Thumb, 166 bytes, Stack size 56 bytes, table_stsong_ttf_40_4bpp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = getFont_STSONG_TTF_40_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*)
</UL>
<BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*)
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::resetFont(unsigned short)
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>

<P><STRONG><a name="[1f3]"></a>touchgfx::Font::getStringWidth(unsigned short const*, ...) const</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, texts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getStringWidth(unsigned short const*, ...) const &rArr; touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1f4]"></a>touchgfx::Font::getStringWidth(unsigned char, unsigned short const*, ...) const</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, texts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getStringWidth(unsigned char, unsigned short const*, ...) const &rArr; touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[562]"></a>touchgfx::TextProvider::getNextLigature(unsigned char)</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, texts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::replaceAt0(unsigned short)
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar()
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar(unsigned short)
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::replaceAt1(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&)
</UL>

<P><STRONG><a name="[569]"></a>touchgfx::TextProvider::initializeInternal()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, texts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*)
</UL>

<P><STRONG><a name="[56b]"></a>touchgfx::LCD::drawString(touchgfx::Rect, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, ...)</STRONG> (Thumb, 66 bytes, Stack size 72 bytes, texts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 888 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawString(touchgfx::Rect, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, ...) &rArr; touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(touchgfx::Rect const&) const
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(touchgfx::Rect const&) const
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[4d7]"></a>touchgfx::Texts::setLanguage(unsigned short)</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, texts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = touchgfx::Texts::setLanguage(unsigned short) &rArr; touchgfx::TypedText::registerTypedTextDatabase(touchgfx::TypedText::TypedTextData const*, touchgfx::Font const* const*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getFonts()
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::registerTypedTextDatabase(touchgfx::TypedText::TypedTextData const*, touchgfx::Font const* const*, unsigned short)
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getInstanceSize()
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[8fa]"></a>touchgfx::Texts::setTranslation(unsigned short, void const*)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, texts.o(.text), UNUSED)

<P><STRONG><a name="[802]"></a>touchgfx::Texts::getText(unsigned short) const</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, texts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Texts::getText(unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
</UL>

<P><STRONG><a name="[8fb]"></a>TypedTextDatabase::getInstance(unsigned short)</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, typedtextdatabase.o(.text), UNUSED)

<P><STRONG><a name="[56d]"></a>TypedTextDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typedtextdatabase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[514]"></a>TypedTextDatabase::getFonts()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, typedtextdatabase.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationFontProvider::getFont(unsigned short)
</UL>

<P><STRONG><a name="[8fc]"></a>TypedTextDatabase::setFont(unsigned short, touchgfx::Font const*)</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, typedtextdatabase.o(.text), UNUSED)

<P><STRONG><a name="[570]"></a>TypedTextDatabase::resetFont(unsigned short)</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, typedtextdatabase.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_STSONG_TTF_40_4bpp()
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_STSONG_TTF_20_4bpp()
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_STSONG_TTF_10_4bpp()
</UL>

<P><STRONG><a name="[571]"></a>xEventGroupCreateStatic</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, event_groups.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
</UL>

<P><STRONG><a name="[573]"></a>xEventGroupCreate</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, event_groups.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
</UL>

<P><STRONG><a name="[575]"></a>xEventGroupSync</STRONG> (Thumb, 376 bytes, Stack size 64 bytes, event_groups.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBits
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnUnorderedEventList
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskResetEventItemValue
</UL>

<P><STRONG><a name="[578]"></a>xEventGroupSetBits</STRONG> (Thumb, 296 bytes, Stack size 64 bytes, event_groups.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = xEventGroupSetBits &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskRemoveFromUnorderedEventList
</UL>
<BR>[Called By]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSync
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEventGroupSetBitsCallback
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
</UL>

<P><STRONG><a name="[57f]"></a>xEventGroupWaitBits</STRONG> (Thumb, 470 bytes, Stack size 72 bytes, event_groups.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnUnorderedEventList
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskResetEventItemValue
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTestWaitCondition
</UL>
<BR>[Called By]<UL><LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
</UL>

<P><STRONG><a name="[581]"></a>xEventGroupClearBits</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, event_groups.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xEventGroupClearBits &rArr; vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEventGroupClearBitsCallback
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsGet
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsClear
</UL>

<P><STRONG><a name="[582]"></a>xEventGroupClearBitsFromISR</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, event_groups.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerPendFunctionCallFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsClear
</UL>

<P><STRONG><a name="[c8]"></a>vEventGroupClearBitsCallback</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, event_groups.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vEventGroupClearBitsCallback &rArr; xEventGroupClearBits &rArr; vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupClearBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> event_groups.o(.text)
</UL>
<P><STRONG><a name="[61d]"></a>xEventGroupGetBitsFromISR</STRONG> (Thumb, 58 bytes, Stack size 28 bytes, event_groups.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsGet
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsClear
</UL>

<P><STRONG><a name="[584]"></a>vEventGroupDelete</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, event_groups.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskRemoveFromUnorderedEventList
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsDelete
</UL>

<P><STRONG><a name="[c9]"></a>vEventGroupSetBitsCallback</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, event_groups.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = vEventGroupSetBitsCallback &rArr; xEventGroupSetBits &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> event_groups.o(.text)
</UL>
<P><STRONG><a name="[586]"></a>xEventGroupSetBitsFromISR</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, event_groups.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerPendFunctionCallFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
</UL>

<P><STRONG><a name="[8fd]"></a>uxEventGroupGetNumber</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, event_groups.o(.text), UNUSED)

<P><STRONG><a name="[8fe]"></a>vEventGroupSetNumber</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, event_groups.o(.text), UNUSED)

<P><STRONG><a name="[572]"></a>vListInitialise</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, list.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupCreateStatic
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupCreate
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
</UL>

<P><STRONG><a name="[5b7]"></a>vListInitialiseItem</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, list.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = vListInitialiseItem
</UL>
<BR>[Called By]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTimer
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[5ba]"></a>vListInsertEnd</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, list.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskRemoveFromUnorderedEventList
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnUnorderedEventList
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPrioritySet
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskNotifyGiveFromISR
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotifyFromISR
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
</UL>

<P><STRONG><a name="[5c2]"></a>vListInsert</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, list.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[5bd]"></a>uxListRemove</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, list.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskRemoveFromUnorderedEventList
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPrioritySet
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskNotifyGiveFromISR
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotifyFromISR
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
</UL>

<P><STRONG><a name="[587]"></a>xQueueGenericReset</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueReset
</UL>

<P><STRONG><a name="[589]"></a>xQueueGenericCreateStatic</STRONG> (Thumb, 282 bytes, Stack size 72 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutexStatic
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphoreStatic
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>

<P><STRONG><a name="[58b]"></a>xQueueGenericCreate</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
</UL>

<P><STRONG><a name="[58c]"></a>xQueueCreateMutex</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
</UL>

<P><STRONG><a name="[58f]"></a>xQueueCreateMutexStatic</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseMutex
</UL>
<BR>[Called By]<UL><LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
</UL>

<P><STRONG><a name="[590]"></a>xQueueGetMutexHolder</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexGetOwner
</UL>

<P><STRONG><a name="[8ff]"></a>xQueueGetMutexHolderFromISR</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, queue.o(.text), UNUSED)

<P><STRONG><a name="[591]"></a>xQueueGiveMutexRecursive</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetCurrentTaskHandle
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
</UL>

<P><STRONG><a name="[58e]"></a>xQueueGenericSend</STRONG> (Thumb, 586 bytes, Stack size 80 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveMutexRecursive
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseMutex
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerPendFunctionCall
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexRelease
</UL>

<P><STRONG><a name="[599]"></a>xQueueTakeMutexRecursive</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetCurrentTaskHandle
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>
<BR>[Called By]<UL><LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>

<P><STRONG><a name="[59a]"></a>xQueueSemaphoreTake</STRONG> (Thumb, 596 bytes, Stack size 72 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTaskIncrementMutexHeldCount
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvGetDisinheritPriorityAfterTimeout
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueTakeMutexRecursive
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexAcquire
</UL>

<P><STRONG><a name="[5a0]"></a>xQueueCreateCountingSemaphoreStatic</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[5a1]"></a>xQueueCreateCountingSemaphore</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[5a5]"></a>xQueueGenericSendFromISR</STRONG> (Thumb, 342 bytes, Stack size 72 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerPendFunctionCallFromISR
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>

<P><STRONG><a name="[5a7]"></a>xQueueGiveFromISR</STRONG> (Thumb, 308 bytes, Stack size 64 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = xQueueGiveFromISR &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>

<P><STRONG><a name="[5a8]"></a>xQueueReceive</STRONG> (Thumb, 510 bytes, Stack size 72 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[5aa]"></a>xQueuePeek</STRONG> (Thumb, 514 bytes, Stack size 72 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[5ab]"></a>xQueueReceiveFromISR</STRONG> (Thumb, 280 bytes, Stack size 64 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = xQueueReceiveFromISR &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>

<P><STRONG><a name="[5ac]"></a>xQueuePeekFromISR</STRONG> (Thumb, 222 bytes, Stack size 64 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>

<P><STRONG><a name="[5ad]"></a>uxQueueMessagesWaiting</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreGetCount
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGetCount
</UL>

<P><STRONG><a name="[5ae]"></a>uxQueueSpacesAvailable</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGetSpace
</UL>

<P><STRONG><a name="[627]"></a>uxQueueMessagesWaitingFromISR</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, queue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreGetCount
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGetCount
</UL>

<P><STRONG><a name="[5af]"></a>vQueueDelete</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = vQueueDelete &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueUnregisterQueue
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreDelete
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexDelete
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueDelete
</UL>

<P><STRONG><a name="[5b0]"></a>vQueueUnregisterQueue</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vQueueUnregisterQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreDelete
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexDelete
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueDelete
</UL>

<P><STRONG><a name="[900]"></a>uxQueueGetQueueNumber</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, queue.o(.text), UNUSED)

<P><STRONG><a name="[901]"></a>vQueueSetQueueNumber</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, queue.o(.text), UNUSED)

<P><STRONG><a name="[902]"></a>ucQueueGetQueueType</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, queue.o(.text), UNUSED)

<P><STRONG><a name="[903]"></a>xQueueIsQueueEmptyFromISR</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, queue.o(.text), UNUSED)

<P><STRONG><a name="[904]"></a>xQueueIsQueueFullFromISR</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, queue.o(.text), UNUSED)

<P><STRONG><a name="[5e6]"></a>vQueueAddToRegistry</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vQueueAddToRegistry
</UL>
<BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMutexNew
</UL>

<P><STRONG><a name="[905]"></a>pcQueueGetName</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, queue.o(.text), UNUSED)

<P><STRONG><a name="[5b1]"></a>vQueueWaitForMessageRestricted</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = vQueueWaitForMessageRestricted &rArr; vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[5b3]"></a>xTaskCreateStatic</STRONG> (Thumb, 214 bytes, Stack size 72 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148 + Unknown Stack Size
<LI>Call Chain = xTaskCreateStatic &rArr; prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[5bb]"></a>xTaskCreate</STRONG> (Thumb, 178 bytes, Stack size 72 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
</UL>

<P><STRONG><a name="[5bc]"></a>vTaskDelete</STRONG> (Thumb, 280 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>
<BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadTerminate
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadExit
</UL>

<P><STRONG><a name="[5c0]"></a>vTaskDelayUntil</STRONG> (Thumb, 286 bytes, Stack size 48 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelayUntil
</UL>

<P><STRONG><a name="[577]"></a>vTaskSuspendAll</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSync
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBits
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEventGroupDelete
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskGetInfo
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelayUntil
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskGetSystemState
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadEnumerate
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelRestoreLock
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelLock
</UL>

<P><STRONG><a name="[57a]"></a>xTaskResumeAll</STRONG> (Thumb, 410 bytes, Stack size 32 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSync
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBits
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEventGroupDelete
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskGetInfo
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelayUntil
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskGetSystemState
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadEnumerate
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelUnlock
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelRestoreLock
</UL>

<P><STRONG><a name="[5c4]"></a>vTaskDelay</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>

<P><STRONG><a name="[5c5]"></a>eTaskGetState</STRONG> (Thumb, 236 bytes, Stack size 40 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskGetInfo
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadTerminate
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetState
</UL>

<P><STRONG><a name="[5c6]"></a>uxTaskPriorityGet</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetPriority
</UL>

<P><STRONG><a name="[5c7]"></a>uxTaskPriorityGetFromISR</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>

<P><STRONG><a name="[5c8]"></a>vTaskPrioritySet</STRONG> (Thumb, 424 bytes, Stack size 48 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSetPriority
</UL>

<P><STRONG><a name="[5c9]"></a>vTaskSuspend</STRONG> (Thumb, 308 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadSuspend
</UL>

<P><STRONG><a name="[5ca]"></a>vTaskSwitchContext</STRONG> (Thumb, 204 bytes, Stack size 12 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vTaskSwitchContext
</UL>
<BR>[Called By]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[5cb]"></a>vTaskResume</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskIsTaskSuspended
</UL>
<BR>[Called By]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadResume
</UL>

<P><STRONG><a name="[5cd]"></a>xTaskResumeFromISR</STRONG> (Thumb, 252 bytes, Stack size 48 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskIsTaskSuspended
</UL>

<P><STRONG><a name="[5ce]"></a>vTaskStartScheduler</STRONG> (Thumb, 232 bytes, Stack size 48 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationGetIdleTaskMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
</UL>

<P><STRONG><a name="[5d3]"></a>vTaskEndScheduler</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEndScheduler
</UL>

<P><STRONG><a name="[5c3]"></a>xTaskIncrementTick</STRONG> (Thumb, 468 bytes, Stack size 40 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[5f6]"></a>xTaskGetTickCount</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsWait
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetSysTimerCount
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelayUntil
</UL>

<P><STRONG><a name="[5d5]"></a>xTaskGetTickCountFromISR</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetTickCount
</UL>

<P><STRONG><a name="[60c]"></a>uxTaskGetNumberOfTasks</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetCount
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadEnumerate
</UL>

<P><STRONG><a name="[601]"></a>pcTaskGetName</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetName
</UL>

<P><STRONG><a name="[5d6]"></a>uxTaskGetSystemState</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvListTasksWithinSingleList
</UL>
<BR>[Called By]<UL><LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadEnumerate
</UL>

<P><STRONG><a name="[5d9]"></a>vTaskSetApplicationTaskTag</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[5da]"></a>xTaskGetApplicationTaskTag</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[906]"></a>xTaskGetApplicationTaskTagFromISR</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, tasks.o(.text), UNUSED)

<P><STRONG><a name="[907]"></a>xTaskCallApplicationTaskHook</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, tasks.o(.text), UNUSED)

<P><STRONG><a name="[597]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[579]"></a>vTaskPlaceOnUnorderedEventList</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSync
</UL>

<P><STRONG><a name="[5b2]"></a>vTaskPlaceOnEventListRestricted</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[588]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[57e]"></a>vTaskRemoveFromUnorderedEventList</STRONG> (Thumb, 218 bytes, Stack size 40 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = vTaskRemoveFromUnorderedEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBits
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEventGroupDelete
</UL>

<P><STRONG><a name="[5db]"></a>vTaskSetTimeOutState</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[594]"></a>vTaskInternalSetTimeOutState</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = vTaskInternalSetTimeOutState
</UL>
<BR>[Called By]<UL><LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[595]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xTaskCheckForTimeOut &rArr; vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[5a4]"></a>vTaskMissedYield</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[908]"></a>uxTaskGetTaskNumber</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, tasks.o(.text), UNUSED)

<P><STRONG><a name="[909]"></a>vTaskSetTaskNumber</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, tasks.o(.text), UNUSED)

<P><STRONG><a name="[5d8]"></a>vTaskGetInfo</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eTaskGetState
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskCheckFreeStackSpace
</UL>
<BR>[Called By]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvListTasksWithinSingleList
</UL>

<P><STRONG><a name="[5dd]"></a>uxTaskGetStackHighWaterMark</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskCheckFreeStackSpace
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetStackSpace
</UL>

<P><STRONG><a name="[592]"></a>xTaskGetCurrentTaskHandle</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueTakeMutexRecursive
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveMutexRecursive
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadGetId
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsGet
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsClear
</UL>

<P><STRONG><a name="[576]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 60 bytes, Stack size 4 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = xTaskGetSchedulerState
</UL>
<BR>[Called By]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSync
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelUnlock
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelRestoreLock
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelLock
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetState
</UL>

<P><STRONG><a name="[59d]"></a>xTaskPriorityInherit</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = xTaskPriorityInherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[5a2]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[59f]"></a>vTaskPriorityDisinheritAfterTimeout</STRONG> (Thumb, 318 bytes, Stack size 48 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = vTaskPriorityDisinheritAfterTimeout &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[57b]"></a>uxTaskResetEventItemValue</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSync
</UL>

<P><STRONG><a name="[59b]"></a>pvTaskIncrementMutexHeldCount</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[5de]"></a>ulTaskNotifyTake</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[5df]"></a>xTaskNotifyWait</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsWait
</UL>

<P><STRONG><a name="[5e0]"></a>xTaskGenericNotify</STRONG> (Thumb, 384 bytes, Stack size 56 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsSet
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsGet
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsClear
</UL>

<P><STRONG><a name="[5e1]"></a>xTaskGenericNotifyFromISR</STRONG> (Thumb, 464 bytes, Stack size 72 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadFlagsSet
</UL>

<P><STRONG><a name="[5e2]"></a>vTaskNotifyGiveFromISR</STRONG> (Thumb, 326 bytes, Stack size 56 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>

<P><STRONG><a name="[5e3]"></a>xTaskNotifyStateClear</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[5d0]"></a>xTimerCreateTimerTask</STRONG> (Thumb, 154 bytes, Stack size 48 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = xTimerCreateTimerTask &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationGetTimerTaskMemory
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[5ea]"></a>xTimerCreate</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, timers.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerNew
</UL>

<P><STRONG><a name="[5ec]"></a>xTimerCreateStatic</STRONG> (Thumb, 144 bytes, Stack size 48 bytes, timers.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerNew
</UL>

<P><STRONG><a name="[5ed]"></a>xTimerGenericCommand</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = xTimerGenericCommand &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
</UL>
<BR>[Called By]<UL><LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStop
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStart
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerDelete
</UL>

<P><STRONG><a name="[90a]"></a>xTimerGetTimerDaemonTaskHandle</STRONG> (Thumb, 54 bytes, Stack size 4 bytes, timers.o(.text), UNUSED)

<P><STRONG><a name="[90b]"></a>xTimerGetPeriod</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, timers.o(.text), UNUSED)

<P><STRONG><a name="[5ee]"></a>vTimerSetReloadMode</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, timers.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[90c]"></a>xTimerGetExpiryTime</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, timers.o(.text), UNUSED)

<P><STRONG><a name="[615]"></a>pcTimerGetName</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, timers.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerGetName
</UL>

<P><STRONG><a name="[5ef]"></a>xTimerIsTimerActive</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, timers.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerStop
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerIsRunning
</UL>

<P><STRONG><a name="[5f0]"></a>pvTimerGetTimerID</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pvTimerGetTimerID &rArr; vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerDelete
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerCallback
</UL>

<P><STRONG><a name="[5f1]"></a>vTimerSetTimerID</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, timers.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>

<P><STRONG><a name="[583]"></a>xTimerPendFunctionCallFromISR</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, timers.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBitsFromISR
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupClearBitsFromISR
</UL>

<P><STRONG><a name="[5f2]"></a>xTimerPendFunctionCall</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, timers.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[90d]"></a>uxTimerGetTimerNumber</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, timers.o(.text), UNUSED)

<P><STRONG><a name="[90e]"></a>vTimerSetTimerNumber</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, timers.o(.text), UNUSED)

<P><STRONG><a name="[371]"></a>osKernelInitialize</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, cmsis_os2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = osKernelInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f8]"></a>osKernelGetInfo</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[5f9]"></a>osKernelGetState</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
</UL>

<P><STRONG><a name="[373]"></a>osKernelStart</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, cmsis_os2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = osKernelStart &rArr; vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Setup
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5fb]"></a>osKernelLock</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>

<P><STRONG><a name="[5fc]"></a>osKernelUnlock</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
</UL>

<P><STRONG><a name="[5fd]"></a>osKernelRestoreLock</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>

<P><STRONG><a name="[5fe]"></a>osKernelGetTickCount</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>

<P><STRONG><a name="[90f]"></a>osKernelGetTickFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cmsis_os2.o(.text), UNUSED)

<P><STRONG><a name="[5ff]"></a>osKernelGetSysTimerCount</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>

<P><STRONG><a name="[910]"></a>osKernelGetSysTimerFreq</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cmsis_os2.o(.text), UNUSED)

<P><STRONG><a name="[37f]"></a>osThreadNew</STRONG> (Thumb, 414 bytes, Stack size 80 bytes, cmsis_os2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = osThreadNew &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init
</UL>

<P><STRONG><a name="[600]"></a>osThreadGetName</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcTaskGetName
</UL>

<P><STRONG><a name="[602]"></a>osThreadGetId</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetCurrentTaskHandle
</UL>

<P><STRONG><a name="[603]"></a>osThreadGetState</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eTaskGetState
</UL>

<P><STRONG><a name="[604]"></a>osThreadGetStackSpace</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskGetStackHighWaterMark
</UL>

<P><STRONG><a name="[605]"></a>osThreadSetPriority</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPrioritySet
</UL>

<P><STRONG><a name="[606]"></a>osThreadGetPriority</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskPriorityGet
</UL>

<P><STRONG><a name="[911]"></a>osThreadYield</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, cmsis_os2.o(.text), UNUSED)

<P><STRONG><a name="[607]"></a>osThreadSuspend</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
</UL>

<P><STRONG><a name="[608]"></a>osThreadResume</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
</UL>

<P><STRONG><a name="[609]"></a>osThreadExit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
</UL>

<P><STRONG><a name="[60a]"></a>osThreadTerminate</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eTaskGetState
</UL>

<P><STRONG><a name="[60b]"></a>osThreadGetCount</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskGetNumberOfTasks
</UL>

<P><STRONG><a name="[60d]"></a>osThreadEnumerate</STRONG> (Thumb, 236 bytes, Stack size 56 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskGetSystemState
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskGetNumberOfTasks
</UL>

<P><STRONG><a name="[60e]"></a>osThreadFlagsSet</STRONG> (Thumb, 234 bytes, Stack size 64 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotifyFromISR
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
</UL>

<P><STRONG><a name="[60f]"></a>osThreadFlagsClear</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetCurrentTaskHandle
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
</UL>

<P><STRONG><a name="[610]"></a>osThreadFlagsGet</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetCurrentTaskHandle
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
</UL>

<P><STRONG><a name="[611]"></a>osThreadFlagsWait</STRONG> (Thumb, 336 bytes, Stack size 64 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskNotifyWait
</UL>

<P><STRONG><a name="[381]"></a>osDelay</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, cmsis_os2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTask
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchTask
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuiShowTask
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::taskDelay(unsigned short)
</UL>

<P><STRONG><a name="[612]"></a>osDelayUntil</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelayUntil
</UL>

<P><STRONG><a name="[613]"></a>osTimerNew</STRONG> (Thumb, 326 bytes, Stack size 64 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateStatic
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
</UL>

<P><STRONG><a name="[614]"></a>osTimerGetName</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcTimerGetName
</UL>

<P><STRONG><a name="[616]"></a>osTimerStart</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>

<P><STRONG><a name="[617]"></a>osTimerStop</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerIsTimerActive
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>

<P><STRONG><a name="[618]"></a>osTimerIsRunning</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerIsTimerActive
</UL>

<P><STRONG><a name="[619]"></a>osTimerDelete</STRONG> (Thumb, 154 bytes, Stack size 48 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTimerGetTimerID
</UL>

<P><STRONG><a name="[61a]"></a>osEventFlagsNew</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupCreateStatic
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupCreate
</UL>

<P><STRONG><a name="[61b]"></a>osEventFlagsSet</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBitsFromISR
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBits
</UL>

<P><STRONG><a name="[61c]"></a>osEventFlagsClear</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupGetBitsFromISR
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupClearBitsFromISR
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupClearBits
</UL>

<P><STRONG><a name="[61e]"></a>osEventFlagsGet</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupGetBitsFromISR
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupClearBits
</UL>

<P><STRONG><a name="[61f]"></a>osEventFlagsWait</STRONG> (Thumb, 278 bytes, Stack size 56 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
</UL>

<P><STRONG><a name="[620]"></a>osEventFlagsDelete</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEventGroupDelete
</UL>

<P><STRONG><a name="[621]"></a>osMutexNew</STRONG> (Thumb, 368 bytes, Stack size 48 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutexStatic
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
</UL>

<P><STRONG><a name="[622]"></a>osMutexAcquire</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueTakeMutexRecursive
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[623]"></a>osMutexRelease</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveMutexRecursive
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[624]"></a>osMutexGetOwner</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGetMutexHolder
</UL>

<P><STRONG><a name="[625]"></a>osMutexDelete</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueUnregisterQueue
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>

<P><STRONG><a name="[4f6]"></a>osSemaphoreNew</STRONG> (Thumb, 380 bytes, Stack size 56 bytes, cmsis_os2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphoreStatic
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
</UL>
<BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>

<P><STRONG><a name="[4f9]"></a>osSemaphoreAcquire</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, cmsis_os2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[4fb]"></a>osSemaphoreRelease</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, cmsis_os2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = osSemaphoreRelease &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[626]"></a>osSemaphoreGetCount</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxQueueMessagesWaitingFromISR
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxQueueMessagesWaiting
</UL>

<P><STRONG><a name="[628]"></a>osSemaphoreDelete</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueUnregisterQueue
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>

<P><STRONG><a name="[4f7]"></a>osMessageQueueNew</STRONG> (Thumb, 320 bytes, Stack size 48 bytes, cmsis_os2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = osMessageQueueNew &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
</UL>
<BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>

<P><STRONG><a name="[4fe]"></a>osMessageQueuePut</STRONG> (Thumb, 268 bytes, Stack size 56 bytes, cmsis_os2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = osMessageQueuePut &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::signalVSync()
</UL>

<P><STRONG><a name="[500]"></a>osMessageQueueGet</STRONG> (Thumb, 252 bytes, Stack size 48 bytes, cmsis_os2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::waitForVSync()
</UL>

<P><STRONG><a name="[912]"></a>osMessageQueueGetCapacity</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, cmsis_os2.o(.text), UNUSED)

<P><STRONG><a name="[913]"></a>osMessageQueueGetMsgSize</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, cmsis_os2.o(.text), UNUSED)

<P><STRONG><a name="[629]"></a>osMessageQueueGetCount</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxQueueMessagesWaitingFromISR
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxQueueMessagesWaiting
</UL>

<P><STRONG><a name="[62a]"></a>osMessageQueueGetSpace</STRONG> (Thumb, 150 bytes, Stack size 48 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxQueueSpacesAvailable
</UL>

<P><STRONG><a name="[62b]"></a>osMessageQueueReset</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>

<P><STRONG><a name="[62c]"></a>osMessageQueueDelete</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, cmsis_os2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueUnregisterQueue
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>

<P><STRONG><a name="[5cf]"></a>vApplicationGetIdleTaskMemory</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, cmsis_os2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vApplicationGetIdleTaskMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[5e5]"></a>vApplicationGetTimerTaskMemory</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, cmsis_os2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vApplicationGetTimerTaskMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[574]"></a>pvPortMalloc</STRONG> (Thumb, 492 bytes, Stack size 48 bytes, heap_4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupCreate
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerNew
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadEnumerate
</UL>

<P><STRONG><a name="[585]"></a>vPortFree</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, heap_4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEventGroupDelete
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osTimerDelete
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadEnumerate
</UL>

<P><STRONG><a name="[914]"></a>xPortGetFreeHeapSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, heap_4.o(.text), UNUSED)

<P><STRONG><a name="[915]"></a>xPortGetMinimumEverFreeHeapSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, heap_4.o(.text), UNUSED)

<P><STRONG><a name="[916]"></a>vPortInitialiseBlocks</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heap_4.o(.text), UNUSED)

<P><STRONG><a name="[5b8]"></a>pxPortInitialiseStack</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pxPortInitialiseStack
</UL>
<BR>[Called By]<UL><LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[5d1]"></a>xPortStartScheduler</STRONG> (Thumb, 342 bytes, Stack size 40 bytes, port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = xPortStartScheduler &rArr; vTaskSwitchContext
</UL>
<BR>[Calls]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnableVFP
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskExitError
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvPortStartFirstTask
</UL>
<BR>[Called By]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[62f]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, port.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[5d4]"></a>vPortEndScheduler</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, port.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskEndScheduler
</UL>

<P><STRONG><a name="[57c]"></a>vPortEnterCritical</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGetMutexHolder
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxQueueSpacesAvailable
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxQueueMessagesWaiting
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSync
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupClearBits
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerIsTimerActive
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerSetTimerID
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerSetReloadMode
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTimerGetTimerID
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetApplicationTaskTag
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetApplicationTaskTag
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPrioritySet
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskPriorityGet
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskNotifyTake
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eTaskGetState
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskNotifyWait
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskNotifyStateClear
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
</UL>

<P><STRONG><a name="[57d]"></a>vPortExitCritical</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vPortExitCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGetMutexHolder
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxQueueSpacesAvailable
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxQueueMessagesWaiting
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSync
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupClearBits
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerIsTimerActive
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerSetTimerID
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerSetReloadMode
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTimerGetTimerID
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetApplicationTaskTag
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetApplicationTaskTag
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPrioritySet
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskPriorityGet
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskNotifyTake
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eTaskGetState
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskNotifyWait
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskNotifyStateClear
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
</UL>

<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PendSV_Handler &rArr; vTaskSwitchContext
</UL>
<BR>[Calls]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SysTick_Handler &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[5a6]"></a>vPortValidateInterruptPriority</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vPortValidateInterruptPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeekFromISR
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCountFromISR
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskNotifyGiveFromISR
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskPriorityGetFromISR
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotifyFromISR
</UL>

<P><STRONG><a name="[370]"></a>gt9147_init</STRONG> (Thumb, 322 bytes, Stack size 80 bytes, gt9147.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = gt9147_init &rArr; gt9147_update_cfg &rArr; mcu_vi2c_transfer_reg &rArr; mcu_vi2c_wait_ack &rArr; mcu_vi2c_stop &rArr; mcu_vi2c_sda_output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_transfer_reg
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt9147_update_cfg
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt9147_io_init
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[382]"></a>gt9147_task</STRONG> (Thumb, 350 bytes, Stack size 40 bytes, gt9147.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = gt9147_task &rArr; mcu_vi2c_transfer_reg &rArr; mcu_vi2c_wait_ack &rArr; mcu_vi2c_stop &rArr; mcu_vi2c_sda_output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_transfer_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchTask
</UL>

<P><STRONG><a name="[4c6]"></a>ReturnTx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gt9147.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::sampleTouch(int&, int&)
</UL>

<P><STRONG><a name="[4c7]"></a>ReturnTy</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gt9147.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::sampleTouch(int&, int&)
</UL>

<P><STRONG><a name="[635]"></a>mcu_vi2c_sda_input</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, vi2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = mcu_vi2c_sda_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_wait_ack
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_readbyte
</UL>

<P><STRONG><a name="[636]"></a>mcu_vi2c_sda_output</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, vi2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = mcu_vi2c_sda_output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_writebyte
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_stop
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_start
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_ack
</UL>

<P><STRONG><a name="[637]"></a>mcu_vi2c_start</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, vi2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = mcu_vi2c_start &rArr; mcu_vi2c_sda_output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_sda_output
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_sda
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_scl
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_transfer
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_transfer_reg
</UL>

<P><STRONG><a name="[63b]"></a>mcu_vi2c_stop</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, vi2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = mcu_vi2c_stop &rArr; mcu_vi2c_sda_output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_sda_output
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_sda
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_scl
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_wait_ack
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_transfer
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_transfer_reg
</UL>

<P><STRONG><a name="[63c]"></a>mcu_vi2c_wait_ack</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, vi2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = mcu_vi2c_wait_ack &rArr; mcu_vi2c_stop &rArr; mcu_vi2c_sda_output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_stop
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_sda_input
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_sda
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_scl
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_readsda
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_transfer
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_transfer_reg
</UL>

<P><STRONG><a name="[63f]"></a>mcu_vi2c_ack</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, vi2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = mcu_vi2c_ack &rArr; mcu_vi2c_sda_output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_sda_output
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_sda
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_scl
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_transfer
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_transfer_reg
</UL>

<P><STRONG><a name="[640]"></a>mcu_vi2c_writebyte</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, vi2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = mcu_vi2c_writebyte &rArr; mcu_vi2c_sda_output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_sda_output
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_sda
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_scl
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_transfer
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_transfer_reg
</UL>

<P><STRONG><a name="[641]"></a>mcu_vi2c_readbyte</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, vi2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = mcu_vi2c_readbyte &rArr; mcu_vi2c_sda_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_sda_input
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_scl
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_readsda
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_transfer
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_transfer_reg
</UL>

<P><STRONG><a name="[36f]"></a>mcu_vi2c_init</STRONG> (Thumb, 98 bytes, Stack size 56 bytes, vi2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = mcu_vi2c_init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[642]"></a>mcu_vi2c_transfer</STRONG> (Thumb, 246 bytes, Stack size 56 bytes, vi2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_writebyte
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_wait_ack
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_stop
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_start
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_readbyte
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_ack
</UL>

<P><STRONG><a name="[633]"></a>mcu_vi2c_transfer_reg</STRONG> (Thumb, 350 bytes, Stack size 88 bytes, vi2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = mcu_vi2c_transfer_reg &rArr; mcu_vi2c_wait_ack &rArr; mcu_vi2c_stop &rArr; mcu_vi2c_sda_output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_writebyte
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_wait_ack
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_stop
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_start
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_readbyte
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_ack
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt9147_task
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt9147_init
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt9147_update_cfg
</UL>

<P><STRONG><a name="[49d]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[917]"></a>_ll_udiv</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[4ca]"></a>__cxa_atexit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cxa_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __cxa_atexit &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::getInstance()
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.4
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.3
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.2
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.1
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_STSONG_TTF_40_4bpp()
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_STSONG_TTF_20_4bpp()
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_STSONG_TTF_10_4bpp()
</UL>

<P><STRONG><a name="[4f4]"></a>__aeabi_assert</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, assert.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__assert_puts
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::switchScreen(touchgfx::Screen*)
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::execute()
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::getChromARTInputFormat(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::setupDataCopy(touchgfx::BlitOp const&)
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::allocate(unsigned short)
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::indexOf(void const*)
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setupHorizontalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&, touchgfx::Bitmap const&)
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::setGraphRangeYScaled(int, int)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::setGraphRangeX(int, int)
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object()
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::setRange(int, int, unsigned short, unsigned short)
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::setBitmap(touchgfx::Bitmap const&)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setStartEndAngle(int, int)
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*)
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::AbstractDataGraphWithY__sub_object(short, int*)
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getId() const
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned int, unsigned int)
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char)
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned char)
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getFramebufferStride()
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char)
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::setScanlineWidth(unsigned int)
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::getPainter() const
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::assertValid() const
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pop()
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pushCopyOf(touchgfx::BlitOp const&)
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(touchgfx::CanvasWidget const*, touchgfx::Rect const&)
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setupVerticalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setValueRange(int, int, int)
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront()
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;2u&rang;::peekChar(unsigned short)
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;2u&rang;::allocateFront(unsigned short)
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::replaceAt(unsigned short, unsigned short)
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::dropFront(unsigned short)
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::pushBack(unsigned short)
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::popFront()
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar()
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar(unsigned short)
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::popBack()
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::allocateFront(unsigned short)
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::replaceAt1(unsigned short)
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::floorDivMod(int, int, int&, int&)
</UL>

<P><STRONG><a name="[918]"></a>__assert</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, assert.o(.text), UNUSED)

<P><STRONG><a name="[5a3]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelGetInfo
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pushCopyOf(touchgfx::BlitOp const&)
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*, unsigned short)
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*)
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, touchgfx::GlyphNode const*&, touchgfx::Font const*)
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_init_local
</UL>

<P><STRONG><a name="[645]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[919]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[646]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[91a]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[91b]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[91c]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[5b6]"></a>__aeabi_memset4</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[91d]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_memset4.o(.text), UNUSED)

<P><STRONG><a name="[6b0]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::Slider()
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CacheableContainer::CacheableContainer()
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::AbstractProgressIndicator()
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short)
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
</UL>

<P><STRONG><a name="[648]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[91e]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[374]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::LCD16bpp()
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::WipeTransition__sub_object(unsigned char)
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea__sub_object()
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box__sub_object()
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CacheableContainer::CacheableContainer()
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::ButtonWithLabel()
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image__sub_object(touchgfx::Bitmap const&)
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::AbstractProgressIndicator()
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::CanvasWidget__sub_object()
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::Outline()
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__class_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfo(unw_proc_info_t*)
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dynamic_cast
</UL>

<P><STRONG><a name="[675]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr8
</UL>
<BR>[Called By]<UL><LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_init_local
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*)
</UL>

<P><STRONG><a name="[91f]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[647]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>

<P><STRONG><a name="[920]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[921]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[922]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[34d]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, init_aeabi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_cpp_2
</UL>

<P><STRONG><a name="[649]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[64c]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__aligned_free_with_fallback(void*)
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[64d]"></a>posix_memalign</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, h1_memalign.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__aligned_malloc_with_fallback(unsigned int)
</UL>

<P><STRONG><a name="[0]"></a>abort</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, abort.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setReg(int, unsigned int)
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getReg(int)
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setFloatReg(int, unsigned long long)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getFloatReg(int)
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Pop
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Set
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Get
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler)
</UL>
<P><STRONG><a name="[643]"></a>__aeabi_atexit</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, aeabi_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>

<P><STRONG><a name="[644]"></a>__assert_puts</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, assert_puts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __assert_puts &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>

<P><STRONG><a name="[660]"></a>__unw_getcontext</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, UnwindRegistersSave.S.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_RaiseException
</UL>

<P><STRONG><a name="[923]"></a>unw_getcontext</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, UnwindRegistersSave.S.o(.text), UNUSED)

<P><STRONG><a name="[7de]"></a>libunwind::Registers_arm::saveVFPWithFSTMD(void*)</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, UnwindRegistersSave.S.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setFloatReg(int, unsigned long long)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getFloatReg(int)
</UL>

<P><STRONG><a name="[7dc]"></a>libunwind::Registers_arm::saveVFPWithFSTMX(void*)</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, UnwindRegistersSave.S.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setFloatReg(int, unsigned long long)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getFloatReg(int)
</UL>

<P><STRONG><a name="[7dd]"></a>libunwind::Registers_arm::saveVFPv3(void*)</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, UnwindRegistersSave.S.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setFloatReg(int, unsigned long long)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getFloatReg(int)
</UL>

<P><STRONG><a name="[650]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__assert_puts
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[363]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[64a]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;posix_memalign
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[64f]"></a>__rt_ddtor_pointer_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_ddtor_pointer_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[924]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[925]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[926]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[927]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[64b]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;posix_memalign
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[652]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[355]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[654]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[928]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[358]"></a>__cxa_finalize</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, cxa_finalize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_cpp_2
</UL>

<P><STRONG><a name="[64e]"></a>__rt_SIGABRT</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>

<P><STRONG><a name="[7e4]"></a>libunwind::Registers_arm::restoreCoreAndJumpTo()</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, UnwindRegistersRestore.S.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::jumpto()
</UL>

<P><STRONG><a name="[7e6]"></a>libunwind::Registers_arm::restoreVFPWithFLDMD(void*)</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, UnwindRegistersRestore.S.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::restoreSavedFloatRegisters()
</UL>

<P><STRONG><a name="[7e5]"></a>libunwind::Registers_arm::restoreVFPWithFLDMX(void*)</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, UnwindRegistersRestore.S.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::restoreSavedFloatRegisters()
</UL>

<P><STRONG><a name="[7e7]"></a>libunwind::Registers_arm::restoreVFPv3(void*)</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, UnwindRegistersRestore.S.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::restoreSavedFloatRegisters()
</UL>

<P><STRONG><a name="[929]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[657]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[92a]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[92b]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[92c]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[92d]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[35a]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[651]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[92e]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.text), UNUSED)

<P><STRONG><a name="[35f]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[656]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[655]"></a>__rt_SIGABRT_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[653]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[7e8]"></a>strcmp</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, strcmpv7m_pel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const
</UL>

<P><STRONG><a name="[65a]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
</UL>

<P><STRONG><a name="[65b]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[6b1]"></a>CRC_Lock</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, stm32_crc_lock.o(.text.CRC_Lock), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[92f]"></a>_Unwind_Complete</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, Unwind-EHABI.cpp.o(.text._Unwind_Complete), UNUSED)

<P><STRONG><a name="[810]"></a>_Unwind_DeleteException</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, Unwind-EHABI.cpp.o(.text._Unwind_DeleteException))
<BR><BR>[Called By]<UL><LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
</UL>

<P><STRONG><a name="[65c]"></a>_Unwind_GetLanguageSpecificData</STRONG> (Thumb, 24 bytes, Stack size 48 bytes, Unwind-EHABI.cpp.o(.text._Unwind_GetLanguageSpecificData))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Unwind_GetLanguageSpecificData &rArr; __unw_get_proc_info
</UL>
<BR>[Calls]<UL><LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_proc_info
</UL>
<BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*)
</UL>

<P><STRONG><a name="[65e]"></a>_Unwind_GetRegionStart</STRONG> (Thumb, 24 bytes, Stack size 48 bytes, Unwind-EHABI.cpp.o(.text._Unwind_GetRegionStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Unwind_GetRegionStart &rArr; __unw_get_proc_info
</UL>
<BR>[Calls]<UL><LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_proc_info
</UL>
<BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*)
</UL>

<P><STRONG><a name="[65f]"></a>_Unwind_RaiseException</STRONG> (Thumb, 120 bytes, Stack size 784 bytes, Unwind-EHABI.cpp.o(.text._Unwind_RaiseException))
<BR><BR>[Stack]<UL><LI>Max Depth = 992 + Unknown Stack Size
<LI>Call Chain = _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_init_local
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_getcontext
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_proc_info
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
</UL>

<P><STRONG><a name="[663]"></a>_Unwind_Resume</STRONG> (Thumb, 32 bytes, Stack size 744 bytes, Unwind-EHABI.cpp.o(.text._Unwind_Resume))
<BR><BR>[Stack]<UL><LI>Max Depth = 952 + Unknown Stack Size
<LI>Call Chain = _Unwind_Resume &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_getcontext
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::Slider()
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::AbstractProgressIndicator()
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(touchgfx::CanvasWidget const*, touchgfx::Rect const&)
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setBaselineY(short)
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::Rasterizer__sub_object()
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[664]"></a>_Unwind_VRS_Get</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, Unwind-EHABI.cpp.o(.text._Unwind_VRS_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _Unwind_VRS_Get &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_save_vfp_as_X
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_reg
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_fpreg
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gxx_personality_v0
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::set_registers(_Unwind_Control_Block*, _Unwind_Context*, __cxxabiv1::(anonymous namespace)::scan_results const&)
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*)
</UL>

<P><STRONG><a name="[668]"></a>_Unwind_VRS_Interpret</STRONG> (Thumb, 532 bytes, Stack size 40 bytes, Unwind-EHABI.cpp.o(.text._Unwind_VRS_Interpret))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _Unwind_VRS_Interpret &rArr; _Unwind_VRS_Pop &rArr; _Unwind_VRS_Set &rArr; __unw_set_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_set_reg
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_reg
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Pop
</UL>
<BR>[Called By]<UL><LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::stepWithEHABI()
</UL>

<P><STRONG><a name="[66a]"></a>_Unwind_VRS_Pop</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, Unwind-EHABI.cpp.o(.text._Unwind_VRS_Pop))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _Unwind_VRS_Pop &rArr; _Unwind_VRS_Set &rArr; __unw_set_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_set_reg
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_reg
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Interpret
</UL>

<P><STRONG><a name="[66b]"></a>_Unwind_VRS_Set</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, Unwind-EHABI.cpp.o(.text._Unwind_VRS_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _Unwind_VRS_Set &rArr; __unw_set_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_set_reg
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_set_fpreg
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_save_vfp_as_X
</UL>
<BR>[Called By]<UL><LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Pop
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::set_registers(_Unwind_Control_Block*, _Unwind_Context*, __cxxabiv1::(anonymous namespace)::scan_results const&)
</UL>

<P><STRONG><a name="[e9]"></a>STM32H7DMA::getDMAType()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, stm32dma.o(.text._ZN10STM32H7DMA10getDMATypeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = STM32H7DMA::getDMAType()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV10STM32H7DMA)
</UL>
<P><STRONG><a name="[e8]"></a>STM32H7DMA::signalDMAInterrupt()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, stm32dma.o(.text._ZN10STM32H7DMA18signalDMAInterruptEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = STM32H7DMA::signalDMAInterrupt()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.rodata._ZTV10STM32H7DMA)
</UL>
<P><STRONG><a name="[4f1]"></a>STM32H7DMA::getChromARTInputFormat(touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, stm32dma.o(.text._ZN10STM32H7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = STM32H7DMA::getChromARTInputFormat(touchgfx::Bitmap::BitmapFormat) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::setupDataCopy(touchgfx::BlitOp const&)
</UL>

<P><STRONG><a name="[4f2]"></a>STM32H7DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32dma.o(.text._ZN10STM32H7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = STM32H7DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::setupDataFill(touchgfx::BlitOp const&)
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::setupDataCopy(touchgfx::BlitOp const&)
</UL>

<P><STRONG><a name="[66e]"></a>__cxxabiv1::__enum_type_info::~__enum_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::type_info::~type_info__sub_object()
</UL>

<P><STRONG><a name="[930]"></a>__cxxabiv1::__enum_type_info::~__enum_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[931]"></a>__cxxabiv1::__shim_type_info::~__shim_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[173]"></a>__cxxabiv1::__shim_type_info::~__shim_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev))
<BR>[Address Reference Count : 2]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
<LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
</UL>
<P><STRONG><a name="[932]"></a>__cxxabiv1::__array_type_info::~__array_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[933]"></a>__cxxabiv1::__array_type_info::~__array_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[934]"></a>__cxxabiv1::__class_type_info::~__class_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[935]"></a>__cxxabiv1::__class_type_info::~__class_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[936]"></a>__cxxabiv1::__pbase_type_info::~__pbase_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[937]"></a>__cxxabiv1::__pbase_type_info::~__pbase_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[938]"></a>__cxxabiv1::__pointer_type_info::~__pointer_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[939]"></a>__cxxabiv1::__pointer_type_info::~__pointer_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[93a]"></a>__cxxabiv1::__function_type_info::~__function_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[93b]"></a>__cxxabiv1::__function_type_info::~__function_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[93c]"></a>__cxxabiv1::__si_class_type_info::~__si_class_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[93d]"></a>__cxxabiv1::__si_class_type_info::~__si_class_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[93e]"></a>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[93f]"></a>__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[940]"></a>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[941]"></a>__cxxabiv1::__fundamental_type_info::~__fundamental_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[942]"></a>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[943]"></a>__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv116__shim_type_infoD2Ev), UNUSED)

<P><STRONG><a name="[174]"></a>__cxxabiv1::__class_type_info::~__class_type_info__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv117__class_type_infoD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __cxxabiv1::__class_type_info::~__class_type_info__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
</UL>
<P><STRONG><a name="[17b]"></a>__cxxabiv1::__si_class_type_info::~__si_class_type_info__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, private_typeinfo.cpp.o(.text._ZN10__cxxabiv120__si_class_type_infoD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __cxxabiv1::__si_class_type_info::~__si_class_type_info__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
</UL>
<P><STRONG><a name="[807]"></a>__cxxabiv1::__isOurExceptionClass(_Unwind_Control_Block const*)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, cxa_exception.cpp.o(.text._ZN10__cxxabiv121__isOurExceptionClassEPK21_Unwind_Control_Block))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gxx_personality_v0
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[670]"></a>__cxxabiv1::__aligned_free_with_fallback(void*)</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, fallback_malloc.cpp.o(.text._ZN10__cxxabiv128__aligned_free_with_fallbackEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __cxxabiv1::__aligned_free_with_fallback(void*) &rArr; (anonymous namespace)::fallback_free(void*)
</UL>
<BR>[Calls]<UL><LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;(anonymous namespace)::fallback_free(void*)
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_decrement_exception_refcount
</UL>

<P><STRONG><a name="[672]"></a>__cxxabiv1::__aligned_malloc_with_fallback(unsigned int)</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, fallback_malloc.cpp.o(.text._ZN10__cxxabiv130__aligned_malloc_with_fallbackEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __cxxabiv1::__aligned_malloc_with_fallback(unsigned int) &rArr; posix_memalign &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;(anonymous namespace)::fallback_malloc(unsigned int)
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;posix_memalign
</UL>
<BR>[Called By]<UL><LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
</UL>

<P><STRONG><a name="[f5]"></a>screenView::~screenView__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenViewD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = screenView::~screenView__deallocating() &rArr; screenView::~screenView__sub_object() &rArr; screenViewBase::~screenViewBase__sub_object() &rArr; touchgfx::Box::~Box__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::~screenView__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[f4]"></a>screenView::~screenView__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screenview.o(.text._ZN10screenViewD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = screenView::~screenView__sub_object() &rArr; screenViewBase::~screenViewBase__sub_object() &rArr; touchgfx::Box::~Box__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::~screenViewBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::~screenView__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenview.o(.rodata._ZTV10screenView)
</UL>
<P><STRONG><a name="[100]"></a>Screen1View::~Screen1View__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, screen1view.o(.text._ZN11Screen1ViewD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Screen1View::~Screen1View__deallocating() &rArr; Screen1View::~Screen1View__sub_object() &rArr; Screen1ViewBase::~Screen1ViewBase__sub_object() &rArr; touchgfx::GraphElementHistogram::~GraphElementHistogram__sub_object() &rArr; touchgfx::AbstractGraphElementNoCWR::~AbstractGraphElementNoCWR__sub_object() &rArr; touchgfx::AbstractGraphElement::~AbstractGraphElement__sub_object() &rArr; touchgfx::CanvasWidget::~CanvasWidget__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::~Screen1View__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
</UL>
<P><STRONG><a name="[ff]"></a>Screen1View::~Screen1View__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screen1view.o(.text._ZN11Screen1ViewD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Screen1View::~Screen1View__sub_object() &rArr; Screen1ViewBase::~Screen1ViewBase__sub_object() &rArr; touchgfx::GraphElementHistogram::~GraphElementHistogram__sub_object() &rArr; touchgfx::AbstractGraphElementNoCWR::~AbstractGraphElementNoCWR__sub_object() &rArr; touchgfx::AbstractGraphElement::~AbstractGraphElement__sub_object() &rArr; touchgfx::CanvasWidget::~CanvasWidget__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::~Screen1View__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
</UL>
<P><STRONG><a name="[106]"></a>TouchGFXHAL::flushFrameBuffer()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, touchgfxhal.o(.text._ZN11TouchGFXHAL16flushFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TouchGFXHAL::flushFrameBuffer() &rArr; TouchGFXGeneratedHAL::flushFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[4d1]"></a>TouchGFXHAL::TouchGFXHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, touchgfxconfiguration.o(.text._ZN11TouchGFXHALC2ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = TouchGFXHAL::TouchGFXHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; TouchGFXGeneratedHAL::TouchGFXGeneratedHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; touchgfx::Gestures::Gestures__sub_object() &rArr; touchgfx::Gestures::DragState::DragState__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::TouchGFXGeneratedHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.4
</UL>

<P><STRONG><a name="[103]"></a>TouchGFXHAL::~TouchGFXHAL__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, touchgfxhal.o(.text._ZN11TouchGFXHALD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TouchGFXHAL::~TouchGFXHAL__deallocating() &rArr; TouchGFXHAL::~TouchGFXHAL__sub_object() &rArr; TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::~TouchGFXHAL__sub_object()
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[c0]"></a>TouchGFXHAL::~TouchGFXHAL__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxhal.o(.text._ZN11TouchGFXHALD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TouchGFXHAL::~TouchGFXHAL__sub_object() &rArr; TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::~TouchGFXHAL__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(.text)
<LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[4d9]"></a>FrontendHeap::getInstance()</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN12FrontendHeap11getInstanceEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = FrontendHeap::getInstance() &rArr; FrontendHeap::FrontendHeap__sub_object() &rArr; FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)
</UL>
<BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap__sub_object()
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[67f]"></a>FrontendHeap::FrontendHeap__sub_object()</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, touchgfxconfiguration.o(.text._ZN12FrontendHeapC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = FrontendHeap::FrontendHeap__sub_object() &rArr; FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)
</UL>
<BR>[Calls]<UL><LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::Partition__sub_object()
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::Partition__sub_object()
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::Partition__sub_object()
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::Model()
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::FrontendHeapBase__sub_object(touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, FrontendApplication&)
</UL>
<BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::getInstance()
</UL>

<P><STRONG><a name="[12f]"></a>FrontendHeap::~FrontendHeap__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN12FrontendHeapD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = FrontendHeap::~FrontendHeap__deallocating() &rArr; FrontendHeap::~FrontendHeap__sub_object() &rArr; FrontendApplication::~FrontendApplication__sub_object() &rArr; FrontendApplicationBase::~FrontendApplicationBase__sub_object() &rArr; touchgfx::MVPApplication::~MVPApplication__sub_object() &rArr; touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
</UL>
<P><STRONG><a name="[ce]"></a>FrontendHeap::~FrontendHeap__sub_object()</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, touchgfxconfiguration.o(.text._ZN12FrontendHeapD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = FrontendHeap::~FrontendHeap__sub_object() &rArr; FrontendApplication::~FrontendApplication__sub_object() &rArr; FrontendApplicationBase::~FrontendApplicationBase__sub_object() &rArr; touchgfx::MVPApplication::~MVPApplication__sub_object() &rArr; touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__sub_object()
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__sub_object()
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__sub_object()
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::~FrontendApplication__sub_object()
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::~FrontendHeapBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(.text._ZN12FrontendHeap11getInstanceEv)
<LI> touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
</UL>
<P><STRONG><a name="[135]"></a>ModelListener::UpDateTemNum(int)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, screen1presenter.o(.text._ZN13ModelListener12UpDateTemNumEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ModelListener::UpDateTemNum(int)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screen1presenter.o(.rodata._ZTV16Screen1Presenter)
<LI> screen1presenter.o(.rodata._ZTV13ModelListener)
</UL>
<P><STRONG><a name="[134]"></a>ModelListener::UpDateHeartNum(int)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, screen1presenter.o(.text._ZN13ModelListener14UpDateHeartNumEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ModelListener::UpDateHeartNum(int)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screen1presenter.o(.rodata._ZTV16Screen1Presenter)
<LI> screen1presenter.o(.rodata._ZTV13ModelListener)
</UL>
<P><STRONG><a name="[133]"></a>ModelListener::UpDateHeartRateLine(int)</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, screen1presenter.o(.text._ZN13ModelListener19UpDateHeartRateLineEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ModelListener::UpDateHeartRateLine(int)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screen1presenter.o(.rodata._ZTV13ModelListener)
<LI> screenpresenter.o(.rodata._ZTV15screenPresenter)
</UL>
<P><STRONG><a name="[6ec]"></a>ModelListener::bind(Model*)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, frontendapplicationbase.o(.text._ZN13ModelListener4bindEP5Model))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ModelListener::bind(Model*)
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[507]"></a>ModelListener::ModelListener__sub_object()</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, screen1presenter.o(.text._ZN13ModelListenerC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ModelListener::ModelListener__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::Screen1Presenter(Screen1View&)
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter::screenPresenter(screenView&)
</UL>

<P><STRONG><a name="[132]"></a>ModelListener::~ModelListener__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, screen1presenter.o(.text._ZN13ModelListenerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ModelListener::~ModelListener__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::~ModelListener__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.rodata._ZTV13ModelListener)
</UL>
<P><STRONG><a name="[131]"></a>ModelListener::~ModelListener__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, screen1presenter.o(.text._ZN13ModelListenerD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ModelListener::~ModelListener__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::~Screen1Presenter__sub_object()
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::~ModelListener__deallocating()
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter::~screenPresenter__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.rodata._ZTV13ModelListener)
</UL>
<P><STRONG><a name="[55b]"></a>screenViewBase::application()</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN14screenViewBase11applicationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = screenViewBase::application()
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::buttonCallbackHandler(touchgfx::AbstractButton const&)
</UL>

<P><STRONG><a name="[137]"></a>screenViewBase::~screenViewBase__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN14screenViewBaseD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = screenViewBase::~screenViewBase__deallocating() &rArr; screenViewBase::~screenViewBase__sub_object() &rArr; touchgfx::Box::~Box__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::~screenViewBase__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[136]"></a>screenViewBase::~screenViewBase__sub_object()</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, screenview.o(.text._ZN14screenViewBaseD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = screenViewBase::~screenViewBase__sub_object() &rArr; touchgfx::Box::~Box__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::~Container__sub_object()
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::~Box__sub_object()
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__sub_object()
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;screenPresenter&rang;::~View__sub_object()
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__sub_object()
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::~PainterRGB565Bitmap__sub_object()
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::~ButtonWithLabel__sub_object()
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::~CircleProgress__sub_object()
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::~screenView__sub_object()
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::~screenViewBase__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
</UL>
<P><STRONG><a name="[54f]"></a>Screen1ViewBase::application()</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, screen1viewbase.o(.text._ZN15Screen1ViewBase11applicationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Screen1ViewBase::application()
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::buttonCallbackHandler(touchgfx::AbstractButton const&)
</UL>

<P><STRONG><a name="[13b]"></a>Screen1ViewBase::~Screen1ViewBase__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, screen1viewbase.o(.text._ZN15Screen1ViewBaseD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Screen1ViewBase::~Screen1ViewBase__deallocating() &rArr; Screen1ViewBase::~Screen1ViewBase__sub_object() &rArr; touchgfx::GraphElementHistogram::~GraphElementHistogram__sub_object() &rArr; touchgfx::AbstractGraphElementNoCWR::~AbstractGraphElementNoCWR__sub_object() &rArr; touchgfx::AbstractGraphElement::~AbstractGraphElement__sub_object() &rArr; touchgfx::CanvasWidget::~CanvasWidget__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[13a]"></a>Screen1ViewBase::~Screen1ViewBase__sub_object()</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, screen1view.o(.text._ZN15Screen1ViewBaseD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Screen1ViewBase::~Screen1ViewBase__sub_object() &rArr; touchgfx::GraphElementHistogram::~GraphElementHistogram__sub_object() &rArr; touchgfx::AbstractGraphElementNoCWR::~AbstractGraphElementNoCWR__sub_object() &rArr; touchgfx::AbstractGraphElement::~AbstractGraphElement__sub_object() &rArr; touchgfx::CanvasWidget::~CanvasWidget__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__sub_object()
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;Screen1Presenter&rang;::~View__sub_object()
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::~Box__sub_object()
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::~GraphElementHistogram__sub_object()
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::~GraphElementLine__sub_object()
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::~GraphElementDots__sub_object()
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::~PainterRGB565__sub_object()
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphScroll&lang;(short)125&rang;::~GraphScroll__sub_object()
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CacheableContainer::~CacheableContainer__sub_object()
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::~ButtonWithLabel__sub_object()
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::~Slider__sub_object()
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::~Screen1View__sub_object()
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[140]"></a>screenPresenter::~screenPresenter__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, screenpresenter.o(.text._ZN15screenPresenterD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = screenPresenter::~screenPresenter__deallocating() &rArr; screenPresenter::~screenPresenter__sub_object() &rArr; touchgfx::Presenter::~Presenter__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter::~screenPresenter__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to screenPresenter::~screenPresenter__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenpresenter.o(.rodata._ZTV15screenPresenter)
</UL>
<P><STRONG><a name="[13f]"></a>screenPresenter::~screenPresenter__sub_object()</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, screenpresenter.o(.text._ZN15screenPresenterD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = screenPresenter::~screenPresenter__sub_object() &rArr; touchgfx::Presenter::~Presenter__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Presenter::~Presenter__sub_object()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::~ModelListener__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to screenPresenter::~screenPresenter()
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter::~screenPresenter__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenpresenter.o(.rodata._ZTV15screenPresenter)
</UL>
<P><STRONG><a name="[130]"></a>FrontendHeapBase::gotoStartScreen(FrontendApplication&)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = FrontendHeapBase::gotoStartScreen(FrontendApplication&) &rArr; FrontendApplicationBase::gotoscreenScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)()) &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoscreenScreenNoTransition()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(.rodata._ZTV12FrontendHeap)
<LI> touchgfxconfiguration.o(.rodata._ZTV16FrontendHeapBase)
</UL>
<P><STRONG><a name="[680]"></a>FrontendHeapBase::FrontendHeapBase__sub_object(touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, FrontendApplication&)</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, touchgfxconfiguration.o(.text._ZN16FrontendHeapBaseC2ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FrontendHeapBase::FrontendHeapBase__sub_object(touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, FrontendApplication&) &rArr; touchgfx::MVPHeap::MVPHeap__sub_object(touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::MVPApplication&)
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPHeap::MVPHeap__sub_object(touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::MVPApplication&)
</UL>
<BR>[Called By]<UL><LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap__sub_object()
</UL>

<P><STRONG><a name="[148]"></a>FrontendHeapBase::~FrontendHeapBase__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN16FrontendHeapBaseD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = FrontendHeapBase::~FrontendHeapBase__deallocating() &rArr; FrontendHeapBase::~FrontendHeapBase__sub_object() &rArr; touchgfx::MVPHeap::~MVPHeap__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::~FrontendHeapBase__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTV16FrontendHeapBase)
</UL>
<P><STRONG><a name="[147]"></a>FrontendHeapBase::~FrontendHeapBase__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN16FrontendHeapBaseD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FrontendHeapBase::~FrontendHeapBase__sub_object() &rArr; touchgfx::MVPHeap::~MVPHeap__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPHeap::~MVPHeap__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::~FrontendHeapBase__deallocating()
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTV16FrontendHeapBase)
</UL>
<P><STRONG><a name="[14c]"></a>Screen1Presenter::~Screen1Presenter__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, screen1presenter.o(.text._ZN16Screen1PresenterD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Screen1Presenter::~Screen1Presenter__deallocating() &rArr; Screen1Presenter::~Screen1Presenter__sub_object() &rArr; touchgfx::Presenter::~Presenter__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::~Screen1Presenter__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to Screen1Presenter::~Screen1Presenter__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.rodata._ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[14b]"></a>Screen1Presenter::~Screen1Presenter__sub_object()</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, screen1presenter.o(.text._ZN16Screen1PresenterD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Screen1Presenter::~Screen1Presenter__sub_object() &rArr; touchgfx::Presenter::~Presenter__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Presenter::~Presenter__sub_object()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::~ModelListener__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;non-virtual thunk to Screen1Presenter::~Screen1Presenter()
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::~Screen1Presenter__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.rodata._ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[155]"></a>FrontendApplication::handleTickEvent()</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, frontendapplication.o(.text._ZN19FrontendApplication15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FrontendApplication::handleTickEvent() &rArr; touchgfx::Application::handleTickEvent()
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleTickEvent()
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tick()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
</UL>
<P><STRONG><a name="[158]"></a>FrontendApplication::~FrontendApplication__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, frontendapplication.o(.text._ZN19FrontendApplicationD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = FrontendApplication::~FrontendApplication__deallocating() &rArr; FrontendApplication::~FrontendApplication__sub_object() &rArr; FrontendApplicationBase::~FrontendApplicationBase__sub_object() &rArr; touchgfx::MVPApplication::~MVPApplication__sub_object() &rArr; touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::~FrontendApplication__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
</UL>
<P><STRONG><a name="[157]"></a>FrontendApplication::~FrontendApplication__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN19FrontendApplicationD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendApplication::~FrontendApplication__sub_object() &rArr; FrontendApplicationBase::~FrontendApplicationBase__sub_object() &rArr; touchgfx::MVPApplication::~MVPApplication__sub_object() &rArr; touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::~FrontendApplication__deallocating()
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
</UL>
<P><STRONG><a name="[4c9]"></a>STM32TouchController::STM32TouchController__sub_object()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN20STM32TouchControllerC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = STM32TouchController::STM32TouchController__sub_object() &rArr; touchgfx::TouchController::TouchController__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchController::TouchController__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>

<P><STRONG><a name="[160]"></a>STM32TouchController::~STM32TouchController__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, stm32touchcontroller.o(.text._ZN20STM32TouchControllerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = STM32TouchController::~STM32TouchController__deallocating() &rArr; STM32TouchController::~STM32TouchController__sub_object() &rArr; touchgfx::TouchController::~TouchController__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::~STM32TouchController__sub_object()
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[bc]"></a>STM32TouchController::~STM32TouchController__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, stm32touchcontroller.o(.text._ZN20STM32TouchControllerD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = STM32TouchController::~STM32TouchController__sub_object() &rArr; touchgfx::TouchController::~TouchController__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchController::~TouchController__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::~STM32TouchController__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(.text)
<LI> stm32touchcontroller.o(.rodata._ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[165]"></a>TouchGFXGeneratedHAL::flushFrameBuffer()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, touchgfxhal.o(.text._ZN20TouchGFXGeneratedHAL16flushFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXGeneratedHAL::flushFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::flushFrameBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::flushFrameBuffer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[67e]"></a>TouchGFXGeneratedHAL::TouchGFXGeneratedHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, touchgfxconfiguration.o(.text._ZN20TouchGFXGeneratedHALC2ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = TouchGFXGeneratedHAL::TouchGFXGeneratedHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; touchgfx::Gestures::Gestures__sub_object() &rArr; touchgfx::Gestures::DragState::DragState__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::TouchGFXHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[164]"></a>TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(.text._ZN20TouchGFXGeneratedHALD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[163]"></a>TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxhal.o(.text._ZN20TouchGFXGeneratedHALD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::~HAL__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::~TouchGFXHAL__sub_object()
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
</UL>
<P><STRONG><a name="[16f]"></a>ApplicationFontProvider::~ApplicationFontProvider__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, applicationfontprovider.o(.text._ZN23ApplicationFontProviderD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ApplicationFontProvider::~ApplicationFontProvider__deallocating() &rArr; ApplicationFontProvider::~ApplicationFontProvider__sub_object() &rArr; touchgfx::FontProvider::~FontProvider__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationFontProvider::~ApplicationFontProvider__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
</UL>
<P><STRONG><a name="[bf]"></a>ApplicationFontProvider::~ApplicationFontProvider__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN23ApplicationFontProviderD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ApplicationFontProvider::~ApplicationFontProvider__sub_object() &rArr; touchgfx::FontProvider::~FontProvider__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FontProvider::~FontProvider__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationFontProvider::~ApplicationFontProvider__deallocating()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(.text)
<LI> applicationfontprovider.o(.rodata._ZTV23ApplicationFontProvider)
</UL>
<P><STRONG><a name="[172]"></a>FrontendApplicationBase::~FrontendApplicationBase__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN23FrontendApplicationBaseD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendApplicationBase::~FrontendApplicationBase__deallocating() &rArr; FrontendApplicationBase::~FrontendApplicationBase__sub_object() &rArr; touchgfx::MVPApplication::~MVPApplication__sub_object() &rArr; touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
</UL>
<P><STRONG><a name="[171]"></a>FrontendApplicationBase::~FrontendApplicationBase__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN23FrontendApplicationBaseD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FrontendApplicationBase::~FrontendApplicationBase__sub_object() &rArr; touchgfx::MVPApplication::~MVPApplication__sub_object() &rArr; touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object()
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::~MVPApplication__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::~FrontendApplication__sub_object()
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
</UL>
<P><STRONG><a name="[6eb]"></a>Model::bind(ModelListener*)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, frontendapplicationbase.o(.text._ZN5Model4bindEP13ModelListener))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Model::bind(ModelListener*)
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[17f]"></a>touchgfx::ClickEvent::getEventType()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx10ClickEvent12getEventTypeEv))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
</UL>
<P><STRONG><a name="[181]"></a>touchgfx::ClickEvent::~ClickEvent__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx10ClickEventD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ClickEvent::~ClickEvent__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
</UL>
<P><STRONG><a name="[694]"></a>touchgfx::Rasterizer::lineTo(int, int)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, canvas.o(.text._ZN8touchgfx10Rasterizer6lineToEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::Rasterizer::lineTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::close()
</UL>

<P><STRONG><a name="[696]"></a>touchgfx::Rasterizer::moveTo(int, int)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, canvas.o(.text._ZN8touchgfx10Rasterizer6moveToEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = touchgfx::Rasterizer::moveTo(int, int) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[698]"></a>bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(touchgfx::Renderer&)</STRONG> (Thumb, 334 bytes, Stack size 56 bytes, canvas.o(.text._ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(touchgfx::Renderer&) &rArr; touchgfx::Outline::getCells() &rArr; touchgfx::Outline::sortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::calculateAlpha(int) const
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::addSpan(int, int, unsigned int, unsigned int)
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::addCell(int, int, unsigned int)
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::reset()
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Renderer::render(touchgfx::Scanline const&)
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::getCells()
</UL>
<BR>[Called By]<UL><LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
</UL>

<P><STRONG><a name="[69f]"></a>touchgfx::Rasterizer::Rasterizer__sub_object()</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, canvas.o(.text._ZN8touchgfx10RasterizerC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 968 + Unknown Stack Size
<LI>Call Chain = touchgfx::Rasterizer::Rasterizer__sub_object() &rArr; _Unwind_Resume &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::Scanline()
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::~Outline()
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::Outline()
</UL>
<BR>[Called By]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(touchgfx::CanvasWidget const*, touchgfx::Rect const&)
</UL>

<P><STRONG><a name="[6a3]"></a>touchgfx::Rasterizer::~Rasterizer__sub_object()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, canvas.o(.text._ZN8touchgfx10RasterizerD2Ev))
<BR><BR>[Calls]<UL><LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::~Outline()
</UL>
<BR>[Called By]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas()
</UL>

<P><STRONG><a name="[187]"></a>touchgfx::Transition::invalidate()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10Transition10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Transition::invalidate()
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
</UL>
<P><STRONG><a name="[184]"></a>touchgfx::Transition::handleTickEvent()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10Transition15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Transition::handleTickEvent()
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
</UL>
<P><STRONG><a name="[188]"></a>touchgfx::Transition::setScreenContainer(touchgfx::Container&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Transition::setScreenContainer(touchgfx::Container&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[186]"></a>touchgfx::Transition::init()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10Transition4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Transition::init()
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::init()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
</UL>
<P><STRONG><a name="[185]"></a>touchgfx::Transition::tearDown()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10Transition8tearDownEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Transition::tearDown()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
</UL>
<P><STRONG><a name="[6ba]"></a>touchgfx::Transition::Transition__sub_object()</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10TransitionC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Transition::Transition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::WipeTransition__sub_object(unsigned char)
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition__sub_object()
</UL>

<P><STRONG><a name="[183]"></a>touchgfx::Transition::~Transition__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10TransitionD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Transition::~Transition__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::~Transition__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
</UL>
<P><STRONG><a name="[182]"></a>touchgfx::Transition::~Transition__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZN8touchgfx10TransitionD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Transition::~Transition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::~WipeTransition__sub_object()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::~NoTransition__sub_object()
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::~Transition__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx10TransitionE)
</UL>
<P><STRONG><a name="[4dc]"></a>touchgfx::Application::getInstance()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveRelative(short, short)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::invalidate()
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::application()
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::application()
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::handleTickEvent()
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::updateValue(int, unsigned short)
</UL>

<P><STRONG><a name="[159]"></a>touchgfx::Application::switchScreen(touchgfx::Screen*)</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11Application12switchScreenEPNS_6ScreenE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::switchScreen(touchgfx::Screen*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[15c]"></a>touchgfx::Application::requestRedraw(touchgfx::Rect&)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application13requestRedrawERNS_4RectE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[15b]"></a>touchgfx::Application::requestRedraw()</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application13requestRedrawEv))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[154]"></a>touchgfx::Application::handleKeyEvent(unsigned char)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application14handleKeyEventEh))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[6a4]"></a>touchgfx::Application::invalidateArea(touchgfx::Rect)</STRONG> (Thumb, 1486 bytes, Stack size 72 bytes, application.o(.text._ZN8touchgfx11Application14invalidateAreaENS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(touchgfx::Rect const&) const
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::includes(touchgfx::Rect const&) const
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(touchgfx::Rect const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::draw(touchgfx::Rect&)
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
</UL>

<P><STRONG><a name="[15a]"></a>touchgfx::Application::appSwitchScreen(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application15appSwitchScreenEh))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[152]"></a>touchgfx::Application::handleDragEvent(touchgfx::DragEvent const&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[170]"></a>touchgfx::Application::handleTickEvent()</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, application.o(.text._ZN8touchgfx11Application15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Application::handleTickEvent()
</UL>
<BR>[Calls]<UL><LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::removeAt(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[151]"></a>touchgfx::Application::handleClickEvent(touchgfx::ClickEvent const&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[153]"></a>touchgfx::Application::handleGestureEvent(touchgfx::GestureEvent const&)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[15f]"></a>touchgfx::Application::cacheDrawOperations(bool)</STRONG> (Thumb, 1196 bytes, Stack size 128 bytes, application.o(.text._ZN8touchgfx11Application19cacheDrawOperationsEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::cacheDrawOperations(bool) &rArr; touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&(touchgfx::Rect const&) const
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[6ad]"></a>touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, application.o(.text._ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*)
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::updateValue(int, unsigned short)
</UL>

<P><STRONG><a name="[523]"></a>touchgfx::Application::clearAllTimerWidgets()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application20clearAllTimerWidgetsEv))
<BR><BR>[Called By]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
</UL>

<P><STRONG><a name="[722]"></a>touchgfx::Application::unregisterTimerWidget(touchgfx::Drawable const*)</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, application.o(.text._ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Application::unregisterTimerWidget(touchgfx::Drawable const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::handleTickEvent()
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::updateValue(int, unsigned short)
</UL>

<P><STRONG><a name="[189]"></a>touchgfx::Application::handlePendingScreenTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11Application29handlePendingScreenTransitionEv))
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[15e]"></a>touchgfx::Application::draw(touchgfx::Rect&)</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, application.o(.text._ZN8touchgfx11Application4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::draw(touchgfx::Rect&) &rArr; touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&(touchgfx::Rect const&) const
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[15d]"></a>touchgfx::Application::draw()</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11Application4drawEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Application::draw()
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[6af]"></a>touchgfx::Application::Application()</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11ApplicationC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw()
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Lock
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[6df]"></a>touchgfx::Application::Application__sub_object()</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, application.o(.text._ZN8touchgfx11ApplicationC2Ev), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::MVPApplication__sub_object()
</UL>

<P><STRONG><a name="[18b]"></a>touchgfx::Application::~Application__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx11ApplicationD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Application::~Application__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[6b3]"></a>touchgfx::Application::~Application__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx11ApplicationD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::UIEventListener::~UIEventListener__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::~MVPApplication__sub_object()
</UL>

<P><STRONG><a name="[4d8]"></a>touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fontmanager.o(.text._ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE))
<BR><BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[52f]"></a>touchgfx::GraphScroll&lang;(short)125&rang;::GraphScroll__sub_object()</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, screen1viewbase.o(.text._ZN8touchgfx11GraphScrollILs125EEC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DataGraphScroll::DataGraphScroll__sub_object(short, int*)
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[18d]"></a>touchgfx::GraphScroll&lang;(short)125&rang;::~GraphScroll__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, screen1viewbase.o(.text._ZN8touchgfx11GraphScrollILs125EED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::GraphScroll&lang;(short)125&rang;::~GraphScroll__deallocating() &rArr; touchgfx::GraphScroll&lang;(short)125&rang;::~GraphScroll__sub_object() &rArr; touchgfx::DataGraphScroll::~DataGraphScroll__sub_object() &rArr; touchgfx::AbstractDataGraphWithY::~AbstractDataGraphWithY__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphScroll&lang;(short)125&rang;::~GraphScroll__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
</UL>
<P><STRONG><a name="[18c]"></a>touchgfx::GraphScroll&lang;(short)125&rang;::~GraphScroll__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screen1view.o(.text._ZN8touchgfx11GraphScrollILs125EED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::GraphScroll&lang;(short)125&rang;::~GraphScroll__sub_object() &rArr; touchgfx::DataGraphScroll::~DataGraphScroll__sub_object() &rArr; touchgfx::AbstractDataGraphWithY::~AbstractDataGraphWithY__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DataGraphScroll::~DataGraphScroll__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase__sub_object()
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphScroll&lang;(short)125&rang;::~GraphScroll__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
</UL>
<P><STRONG><a name="[6b6]"></a>touchgfx::floorDivMod(int, int, int&, int&)</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, texturemaptypes.o(.text._ZN8touchgfx11floorDivModEiiRiS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::floorDivMod(int, int, int&, int&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Edge::Edge(touchgfx::Gradients const&, touchgfx::Point3D const*, int, int)
</UL>

<P><STRONG><a name="[1df]"></a>touchgfx::CanvasWidget::setPainter(touchgfx::AbstractPainter&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, canvaswidget.o(.text._ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE))
<BR><BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setPainter(touchgfx::AbstractPainter&)
</UL>
<BR>[Address Reference Count : 5]<UL><LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
</UL>
<P><STRONG><a name="[1e1]"></a>touchgfx::CanvasWidget::setAlpha(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canvaswidget.o(.text._ZN8touchgfx12CanvasWidget8setAlphaEh))
<BR><BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 7]<UL><LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
</UL>
<P><STRONG><a name="[6b7]"></a>touchgfx::CanvasWidget::CanvasWidget__sub_object()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, canvaswidget.o(.text._ZN8touchgfx12CanvasWidgetC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::Circle()
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::AbstractGraphElement__sub_object()
</UL>

<P><STRONG><a name="[1d4]"></a>touchgfx::CanvasWidget::~CanvasWidget__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, canvaswidget.o(.text._ZN8touchgfx12CanvasWidgetD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
</UL>
<P><STRONG><a name="[6b8]"></a>touchgfx::CanvasWidget::~CanvasWidget__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screen1view.o(.text._ZN8touchgfx12CanvasWidgetD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::CanvasWidget::~CanvasWidget__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::~AbstractGraphElement__sub_object()
</UL>

<P><STRONG><a name="[693]"></a>touchgfx::FontProvider::~FontProvider__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx12FontProviderD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::FontProvider::~FontProvider__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationFontProvider::~ApplicationFontProvider__sub_object()
</UL>

<P><STRONG><a name="[1e5]"></a>touchgfx::GestureEvent::getEventType()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx12GestureEvent12getEventTypeEv))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
</UL>
<P><STRONG><a name="[1e6]"></a>touchgfx::GestureEvent::~GestureEvent__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx12GestureEventD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::GestureEvent::~GestureEvent__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
</UL>
<P><STRONG><a name="[1e9]"></a>touchgfx::NoTransition::handleTickEvent()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZN8touchgfx12NoTransition15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::NoTransition::handleTickEvent()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[6b9]"></a>touchgfx::NoTransition::NoTransition__sub_object()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx12NoTransitionC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::NoTransition::NoTransition__sub_object() &rArr; touchgfx::Transition::Transition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::Transition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[1e8]"></a>touchgfx::NoTransition::~NoTransition__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx12NoTransitionD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::NoTransition::~NoTransition__deallocating() &rArr; touchgfx::NoTransition::~NoTransition__sub_object() &rArr; touchgfx::Transition::~Transition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::~NoTransition__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[1e7]"></a>touchgfx::NoTransition::~NoTransition__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx12NoTransitionD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::NoTransition::~NoTransition__sub_object() &rArr; touchgfx::Transition::~Transition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::~Transition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::~NoTransition__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[6bb]"></a>touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*) &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(unsigned short const*, ...) const
</UL>

<P><STRONG><a name="[6bc]"></a>touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, touchgfx::GlyphNode const*&, touchgfx::Font const*)</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider11adjustGlyphEttRPKNS_9GlyphNodeEPKNS_4FontE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, touchgfx::GlyphNode const*&, touchgfx::Font const*) &rArr; touchgfx::TextProvider::adjustThaiGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*) &rArr; touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*, unsigned short)
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*)
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&)
</UL>

<P><STRONG><a name="[568]"></a>touchgfx::TextProvider::getNextChar()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider11getNextCharEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;2u&rang;::pushFrontForce(unsigned short)
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::popFront()
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, touchgfx::Font const*, short)
</UL>

<P><STRONG><a name="[6c1]"></a>touchgfx::TextProvider::gsubRuleMatch(unsigned short const*, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::gsubRuleMatch(unsigned short const*, unsigned short, unsigned short, unsigned short) &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::peekChar(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;2u&rang;::peekChar(unsigned short)
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short)
</UL>

<P><STRONG><a name="[6c3]"></a>touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short)</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14applyGsubRulesEPKtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*)
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubRuleMatch(unsigned short const*, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
</UL>

<P><STRONG><a name="[567]"></a>touchgfx::TextProvider::circularBuffer&lang;10u&rang;::replaceAt0(unsigned short)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, texts.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE10replaceAt0Et))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;10u&rang;::replaceAt0(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>

<P><STRONG><a name="[566]"></a>touchgfx::TextProvider::circularBuffer&lang;10u&rang;::replaceAt1(unsigned short)</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE10replaceAt1Et))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;10u&rang;::replaceAt1(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>

<P><STRONG><a name="[6c5]"></a>touchgfx::TextProvider::circularBuffer&lang;10u&rang;::allocateFront(unsigned short)</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE13allocateFrontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;10u&rang;::allocateFront(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::pushFront(unsigned short)
</UL>

<P><STRONG><a name="[6c6]"></a>touchgfx::TextProvider::circularBuffer&lang;10u&rang;::popBack()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE7popBackEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;10u&rang;::popBack() &rArr; touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar(unsigned short)
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*)
</UL>

<P><STRONG><a name="[565]"></a>touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar(unsigned short)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::popBack()
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubRuleMatch(unsigned short const*, unsigned short, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[563]"></a>touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&)
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*)
</UL>

<P><STRONG><a name="[6bf]"></a>touchgfx::TextProvider::circularBuffer&lang;10u&rang;::popFront()</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE8popFrontEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;10u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
</UL>

<P><STRONG><a name="[6c7]"></a>touchgfx::TextProvider::circularBuffer&lang;10u&rang;::pushBack(unsigned short)</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;10u&rang;::pushBack(unsigned short) &rArr; touchgfx::TextProvider::circularBuffer&lang;10u&rang;::replaceAt(unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::replaceAt(unsigned short, unsigned short)
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>

<P><STRONG><a name="[6c9]"></a>touchgfx::TextProvider::circularBuffer&lang;10u&rang;::dropFront(unsigned short)</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;10u&rang;::dropFront(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*)
</UL>

<P><STRONG><a name="[6ca]"></a>touchgfx::TextProvider::circularBuffer&lang;10u&rang;::pushFront(unsigned short)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE9pushFrontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;10u&rang;::pushFront(unsigned short) &rArr; touchgfx::TextProvider::circularBuffer&lang;10u&rang;::allocateFront(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::allocateFront(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*)
</UL>

<P><STRONG><a name="[6c8]"></a>touchgfx::TextProvider::circularBuffer&lang;10u&rang;::replaceAt(unsigned short, unsigned short)</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;10u&rang;::replaceAt(unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::pushBack(unsigned short)
</UL>

<P><STRONG><a name="[6cb]"></a>touchgfx::TextProvider::circularBuffer&lang;2u&rang;::allocateFront(unsigned short)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;2u&rang;::allocateFront(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;2u&rang;::pushFront(unsigned short)
</UL>

<P><STRONG><a name="[6c0]"></a>touchgfx::TextProvider::circularBuffer&lang;2u&rang;::pushFrontForce(unsigned short)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj2EE14pushFrontForceEt))
<BR><BR>[Called By]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
</UL>

<P><STRONG><a name="[6c2]"></a>touchgfx::TextProvider::circularBuffer&lang;2u&rang;::peekChar(unsigned short)</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj2EE8peekCharEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;2u&rang;::peekChar(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubRuleMatch(unsigned short const*, unsigned short, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[6cc]"></a>touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront()</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj2EE8popFrontEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>

<P><STRONG><a name="[6cd]"></a>touchgfx::TextProvider::circularBuffer&lang;2u&rang;::pushFront(unsigned short)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider14circularBufferILj2EE9pushFrontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;2u&rang;::pushFront(unsigned short) &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::allocateFront(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;2u&rang;::allocateFront(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*)
</UL>

<P><STRONG><a name="[6be]"></a>touchgfx::TextProvider::adjustThaiGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*)</STRONG> (Thumb, 388 bytes, Stack size 32 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::adjustThaiGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*) &rArr; touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::top() const
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::setTop(short)
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar()
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, touchgfx::GlyphNode const*&, touchgfx::Font const*)
</UL>

<P><STRONG><a name="[56a]"></a>touchgfx::TextProvider::fillInputBuffer()</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider15fillInputBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextCharInternal()
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront()
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::pushBack(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*)
</UL>

<P><STRONG><a name="[6d1]"></a>touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar()
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, touchgfx::GlyphNode const*&, touchgfx::Font const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, touchgfx::Font const&, int, unsigned char)
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
</UL>

<P><STRONG><a name="[6d2]"></a>touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&)</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar()
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, touchgfx::GlyphNode const*&, touchgfx::Font const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool)
</UL>

<P><STRONG><a name="[564]"></a>touchgfx::TextProvider::substituteGlyphs()</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider16substituteGlyphsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::gsubTableBinarySearch(unsigned short, unsigned short const*, unsigned short) const
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::peekChar()
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>

<P><STRONG><a name="[6bd]"></a>touchgfx::TextProvider::adjustArabicGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*, unsigned short)</STRONG> (Thumb, 588 bytes, Stack size 24 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextProvider::adjustArabicGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::top() const
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::setTop(short)
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, touchgfx::GlyphNode const*&, touchgfx::Font const*)
</UL>

<P><STRONG><a name="[6d0]"></a>touchgfx::TextProvider::getNextCharInternal()</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider19getNextCharInternalEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>

<P><STRONG><a name="[6c4]"></a>touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*)</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, textprovider.o(.text._ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;2u&rang;::pushFront(unsigned short)
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::pushFront(unsigned short)
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::dropFront(unsigned short)
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;10u&rang;::popBack()
</UL>
<BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short)
</UL>

<P><STRONG><a name="[6d4]"></a>touchgfx::TextProvider::TextProvider()</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, textprovider.o(.text._ZN8touchgfx12TextProviderC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextProvider::TextProvider() &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(unsigned short const*, ...) const
</UL>

<P><STRONG><a name="[944]"></a>touchgfx::TextProvider::TextProvider__sub_object()</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, textprovider.o(.text._ZN8touchgfx12TextProviderC2Ev), UNUSED)

<P><STRONG><a name="[e4]"></a>touchgfx::DMA_Interface::addToQueue(touchgfx::BlitOp const&)</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = touchgfx::DMA_Interface::addToQueue(touchgfx::BlitOp const&) &rArr; touchgfx::OSWrappers::tryTakeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setRenderingVariant(touchgfx::HAL::RenderingVariant)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.rodata._ZTV10STM32H7DMA)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[1eb]"></a>touchgfx::DMA_Interface::getDMAType()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface10getDMATypeEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[1ea]"></a>touchgfx::DMA_Interface::initialize()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface10initializeEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[f0]"></a>touchgfx::DMA_Interface::enableAlpha(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface11enableAlphaEh))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.rodata._ZTV10STM32H7DMA)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[f1]"></a>touchgfx::DMA_Interface::disableAlpha()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface12disableAlphaEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.rodata._ZTV10STM32H7DMA)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[ed]"></a>touchgfx::DMA_Interface::seedExecution()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface13seedExecutionEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.rodata._ZTV10STM32H7DMA)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[727]"></a>touchgfx::DMA_Interface::isDmaQueueEmpty()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::isDmaQueueEmpty()
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
</UL>

<P><STRONG><a name="[ec]"></a>touchgfx::DMA_Interface::executeCompleted()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface16executeCompletedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = touchgfx::DMA_Interface::executeCompleted() &rArr; touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.rodata._ZTV10STM32H7DMA)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[f3]"></a>touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = touchgfx::DMA_Interface::waitForFrameBufferSemaphore() &rArr; touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.rodata._ZTV10STM32H7DMA)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[f2]"></a>touchgfx::DMA_Interface::enableCopyWithTransparentPixels(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface31enableCopyWithTransparentPixelsEh))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.rodata._ZTV10STM32H7DMA)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[e5]"></a>touchgfx::DMA_Interface::flush()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface5flushEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.rodata._ZTV10STM32H7DMA)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[e7]"></a>touchgfx::DMA_Interface::start()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface5startEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::start()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.rodata._ZTV10STM32H7DMA)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[eb]"></a>touchgfx::DMA_Interface::execute()</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, dma.o(.text._ZN8touchgfx13DMA_Interface7executeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::DMA_Interface::execute() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32dma.o(.rodata._ZTV10STM32H7DMA)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[4e9]"></a>touchgfx::DMA_Interface::DMA_Interface__sub_object(touchgfx::DMA_Queue&)</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32dma.o(.text._ZN8touchgfx13DMA_InterfaceC2ERNS_9DMA_QueueE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::DMA_Interface__sub_object(touchgfx::DMA_Queue&)
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::STM32H7DMA()
</UL>

<P><STRONG><a name="[1ed]"></a>touchgfx::DMA_Interface::~DMA_Interface__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_InterfaceD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[1ec]"></a>touchgfx::DMA_Interface::~DMA_Interface__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx13DMA_InterfaceD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::~STM32H7DMA()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[1ee]"></a>touchgfx::GeneratedFont::~GeneratedFont__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, generatedfont.o(.text._ZN8touchgfx13GeneratedFontD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::GeneratedFont::~GeneratedFont__deallocating() &rArr; touchgfx::GeneratedFont::~GeneratedFont__sub_object() &rArr; touchgfx::ConstFont::~ConstFont__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::~GeneratedFont__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[c7]"></a>touchgfx::GeneratedFont::~GeneratedFont__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, cachedfont.o(.text._ZN8touchgfx13GeneratedFontD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::GeneratedFont::~GeneratedFont__sub_object() &rArr; touchgfx::ConstFont::~ConstFont__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::~ConstFont__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::~GeneratedFont__deallocating()
</UL>
<BR>[Address Reference Count : 4]<UL><LI> table_stsong_ttf_20_4bpp.o(.text)
<LI> table_stsong_ttf_40_4bpp.o(.text)
<LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> table_stsong_ttf_10_4bpp.o(.text)
</UL>
<P><STRONG><a name="[206]"></a>touchgfx::PainterRGB565::renderNext(unsigned char&, unsigned char&, unsigned char&, unsigned char&)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, painterrgb565.o(.text._ZN8touchgfx13PainterRGB56510renderNextERhS1_S1_S1_))
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[202]"></a>touchgfx::PainterRGB565::render(unsigned char*, int, int, int, unsigned int, unsigned char const*)</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, painterrgb565.o(.text._ZN8touchgfx13PainterRGB5656renderEPhiiijPKh))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::PainterRGB565::render(unsigned char*, int, int, int, unsigned int, unsigned char const*) &rArr; touchgfx::AbstractPainterRGB565::mixColors(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::mixColors(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[544]"></a>touchgfx::PainterRGB565::setColor(touchgfx::colortype)</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, screen1viewbase.o(.text._ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::operator unsigned int() const
</UL>
<BR>[Called By]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::PainterRGB565__sub_object(touchgfx::colortype, unsigned char)
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[532]"></a>touchgfx::PainterRGB565::PainterRGB565__sub_object(touchgfx::colortype, unsigned char)</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, screen1viewbase.o(.text._ZN8touchgfx13PainterRGB565C2ENS_9colortypeEh), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object()
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::setColor(touchgfx::colortype)
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[201]"></a>touchgfx::PainterRGB565::~PainterRGB565__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, painterrgb565.o(.text._ZN8touchgfx13PainterRGB565D0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::PainterRGB565::~PainterRGB565__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[68b]"></a>touchgfx::PainterRGB565::~PainterRGB565__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screen1view.o(.text._ZN8touchgfx13PainterRGB565D2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::PainterRGB565::~PainterRGB565__sub_object() &rArr; touchgfx::AbstractPainterRGB565::~AbstractPainterRGB565__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::~AbstractPainterRGB565__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase__sub_object()
</UL>

<P><STRONG><a name="[23d]"></a>touchgfx::AbstractButton::executeAction()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, button.o(.text._ZN8touchgfx14AbstractButton13executeActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractButton::executeAction()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[23c]"></a>touchgfx::AbstractButton::handleClickEvent(touchgfx::ClickEvent const&)</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, abstractbutton.o(.text._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractButton::handleClickEvent(touchgfx::ClickEvent const&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[540]"></a>touchgfx::AbstractButton::setAction(touchgfx::GenericCallback&lang;touchgfx::AbstractButton const&, void, void&rang;&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, screen1viewbase.o(.text._ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[21d]"></a>touchgfx::CircleProgress::setPainter(touchgfx::AbstractPainter&)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, circleprogress.o(.text._ZN8touchgfx14CircleProgress10setPainterERNS_15AbstractPainterE))
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::setPainter(touchgfx::AbstractPainter&)
</UL>
<BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[222]"></a>touchgfx::CircleProgress::setLineWidth(int)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, circleprogress.o(.text._ZN8touchgfx14CircleProgress12setLineWidthEi))
<BR><BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[224]"></a>touchgfx::CircleProgress::setCapPrecision(int)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, circleprogress.o(.text._ZN8touchgfx14CircleProgress15setCapPrecisionEi))
<BR><BR>[Calls]<UL><LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::setCapPrecision(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[226]"></a>touchgfx::CircleProgress::setStartEndAngle(int, int)</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, circleprogress.o(.text._ZN8touchgfx14CircleProgress16setStartEndAngleEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = touchgfx::CircleProgress::setStartEndAngle(int, int) &rArr; touchgfx::CircleProgress::setValue(int) &rArr; void touchgfx::Circle::updateArcEnd&lang;touchgfx::CWRUtil::Q5&rang;(touchgfx::CWRUtil::Q5) &rArr; touchgfx::Circle::getMinimalRectForUpdatedEndAngle(touchgfx::CWRUtil::Q5 const&) const &rArr; touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAR(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setValue(int)
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::getValue() const
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::CircleProgress()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[20c]"></a>touchgfx::CircleProgress::setProgressIndicatorPosition(short, short, short, short)</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, circleprogress.o(.text._ZN8touchgfx14CircleProgress28setProgressIndicatorPositionEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::CircleProgress::setProgressIndicatorPosition(short, short, short, short) &rArr; touchgfx::AbstractProgressIndicator::setProgressIndicatorPosition(short, short, short, short) &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::setProgressIndicatorPosition(short, short, short, short)
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[229]"></a>touchgfx::CircleProgress::setAlpha(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, circleprogress.o(.text._ZN8touchgfx14CircleProgress8setAlphaEh))
<BR>[Address Reference Count : 1]<UL><LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[218]"></a>touchgfx::CircleProgress::setValue(int)</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, circleprogress.o(.text._ZN8touchgfx14CircleProgress8setValueEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = touchgfx::CircleProgress::setValue(int) &rArr; void touchgfx::Circle::updateArcEnd&lang;touchgfx::CWRUtil::Q5&rang;(touchgfx::CWRUtil::Q5) &rArr; touchgfx::Circle::getMinimalRectForUpdatedEndAngle(touchgfx::CWRUtil::Q5 const&) const &rArr; touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAR(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::setValue(int)
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void touchgfx::Circle::updateArcEnd&lang;touchgfx::CWRUtil::Q5&rang;(touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::UpDateHeartNum(int)
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::UpDateTemNum(int)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setStartEndAngle(int, int)
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[21e]"></a>touchgfx::CircleProgress::setCenter(int, int)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, circleprogress.o(.text._ZN8touchgfx14CircleProgress9setCenterEii))
<BR><BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[220]"></a>touchgfx::CircleProgress::setRadius(int)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, circleprogress.o(.text._ZN8touchgfx14CircleProgress9setRadiusEi))
<BR><BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[554]"></a>touchgfx::CircleProgress::CircleProgress()</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, circleprogress.o(.text._ZN8touchgfx14CircleProgressC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setStartEndAngle(int, int)
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::AbstractProgressIndicator__sub_object()
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::Circle()
</UL>
<BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[945]"></a>touchgfx::CircleProgress::CircleProgress__sub_object()</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, circleprogress.o(.text._ZN8touchgfx14CircleProgressC2Ev), UNUSED)

<P><STRONG><a name="[209]"></a>touchgfx::CircleProgress::~CircleProgress__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, circleprogress.o(.text._ZN8touchgfx14CircleProgressD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::CircleProgress::~CircleProgress__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[208]"></a>touchgfx::CircleProgress::~CircleProgress__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, circleprogress.o(.text._ZN8touchgfx14CircleProgressD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::~screenViewBase__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[156]"></a>touchgfx::MVPApplication::handlePendingScreenTransition()</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, frontendapplication.o(.text._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::MVPApplication::handlePendingScreenTransition() &rArr; touchgfx::MVPApplication::evaluatePendingScreenTransition()
</UL>
<BR>[Calls]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::evaluatePendingScreenTransition()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.rodata._ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.rodata._ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
</UL>
<P><STRONG><a name="[6de]"></a>touchgfx::MVPApplication::evaluatePendingScreenTransition()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, frontendapplication.o(.text._ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::MVPApplication::evaluatePendingScreenTransition()
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::handlePendingScreenTransition()
</UL>

<P><STRONG><a name="[516]"></a>touchgfx::MVPApplication::MVPApplication__sub_object()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14MVPApplicationC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[22c]"></a>touchgfx::MVPApplication::~MVPApplication__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14MVPApplicationD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::MVPApplication::~MVPApplication__deallocating() &rArr; touchgfx::MVPApplication::~MVPApplication__sub_object() &rArr; touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::~MVPApplication__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
</UL>
<P><STRONG><a name="[22b]"></a>touchgfx::MVPApplication::~MVPApplication__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx14MVPApplicationD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::MVPApplication::~MVPApplication__sub_object() &rArr; touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase__sub_object()
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::~MVPApplication__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14MVPApplicationE)
</UL>
<P><STRONG><a name="[236]"></a>touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::invalidate()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::invalidate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[6e0]"></a>touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::FullSolidRect__sub_object()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::FullSolidRect__sub_object() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object() &rArr; touchgfx::Rect::Rect__sub_object(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::WipeTransition__sub_object(unsigned char)
</UL>

<P><STRONG><a name="[22e]"></a>touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::~FullSolidRect__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::~FullSolidRect__deallocating() &rArr; touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::~FullSolidRect__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::~FullSolidRect__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
</UL>
<P><STRONG><a name="[22d]"></a>touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::~FullSolidRect__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::~FullSolidRect__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::~WipeTransition__sub_object()
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::~FullSolidRect__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
</UL>
<P><STRONG><a name="[233]"></a>touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()</STRONG> (Thumb, 392 bytes, Stack size 88 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent() &rArr; touchgfx::Rect::Rect__sub_object(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getInstance()
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect__sub_object()
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getWidth() const
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getRect() const
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect__sub_object(short, short, short, short)
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::cubicEaseOut(unsigned short, short, short, unsigned short)
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::handleTickEvent()
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidth(short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[235]"></a>touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::init()</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::init() &rArr; touchgfx::Transition::init()
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::init()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[234]"></a>touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::tearDown()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::tearDown()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[6e7]"></a>touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::WipeTransition__sub_object(unsigned char)</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC2Eh))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::WipeTransition__sub_object(unsigned char) &rArr; touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::FullSolidRect__sub_object() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object() &rArr; touchgfx::Rect::Rect__sub_object(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::FullSolidRect__sub_object()
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::Transition__sub_object()
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[232]"></a>touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::~WipeTransition__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::~WipeTransition__deallocating() &rArr; touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::~WipeTransition__sub_object() &rArr; touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::~FullSolidRect__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::~WipeTransition__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[231]"></a>touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::~WipeTransition__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::~WipeTransition__sub_object() &rArr; touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::~FullSolidRect__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::~FullSolidRect__sub_object()
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::~Transition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::~WipeTransition__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[51d]"></a>screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)</STRONG> (Thumb, 310 bytes, Stack size 72 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*) &rArr; screenView::screenView() &rArr; screenViewBase::screenViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::screenView()
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter::screenPresenter(screenView&)
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;screenPresenter&rang;::bind(screenPresenter&)
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter& touchgfx::AbstractPartition::at&lang;screenPresenter&rang;(unsigned short)
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView& touchgfx::AbstractPartition::at&lang;screenView&rang;(unsigned short)
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition__sub_object()
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoscreenScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[51f]"></a>screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)</STRONG> (Thumb, 312 bytes, Stack size 72 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_14WipeTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*) &rArr; screenView::screenView() &rArr; screenViewBase::screenViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::screenView()
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter::screenPresenter(screenView&)
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;screenPresenter&rang;::bind(screenPresenter&)
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;& touchgfx::AbstractPartition::at&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang; &rang;(unsigned short)
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter& touchgfx::AbstractPartition::at&lang;screenPresenter&rang;(unsigned short)
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView& touchgfx::AbstractPartition::at&lang;screenView&rang;(unsigned short)
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::WipeTransition__sub_object(unsigned char)
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoscreenScreenWipeTransitionEastImpl()
</UL>

<P><STRONG><a name="[521]"></a>Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)</STRONG> (Thumb, 312 bytes, Stack size 72 bytes, frontendapplicationbase.o(.text._ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_14WipeTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 816 + Unknown Stack Size
<LI>Call Chain = Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*) &rArr; Screen1View::Screen1View() &rArr; Screen1ViewBase::Screen1ViewBase__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1View()
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::Screen1Presenter(Screen1View&)
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;Screen1Presenter&rang;::bind(Screen1Presenter&)
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;& touchgfx::AbstractPartition::at&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang; &rang;(unsigned short)
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter& touchgfx::AbstractPartition::at&lang;Screen1Presenter&rang;(unsigned short)
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View& touchgfx::AbstractPartition::at&lang;Screen1View&rang;(unsigned short)
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::WipeTransition__sub_object(unsigned char)
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEastImpl()
</UL>

<P><STRONG><a name="[6f2]"></a>touchgfx::AbstractPainter::compatibleFramebuffer(touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, screen1viewbase.o(.text._ZN8touchgfx15AbstractPainter21compatibleFramebufferENS_6Bitmap12BitmapFormatE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getInstance()
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getAuxiliaryLCD()
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Called By]<UL><LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object()
</UL>

<P><STRONG><a name="[203]"></a>touchgfx::AbstractPainter::setAlpha(unsigned char)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractpainterrgb565.o(.text._ZN8touchgfx15AbstractPainter8setAlphaEh))
<BR>[Address Reference Count : 4]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx15AbstractPainterE)
<LI> abstractpainterrgb565.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
<LI> painterrgb565bitmap.o(.rodata._ZTVN8touchgfx19PainterRGB565BitmapE)
<LI> painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[719]"></a>touchgfx::AbstractPainter::AbstractPainter__sub_object()</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, screen1viewbase.o(.text._ZN8touchgfx15AbstractPainterC2Ev), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object()
</UL>

<P><STRONG><a name="[237]"></a>touchgfx::AbstractPainter::~AbstractPainter__deallocating()</STRONG> (Thumb, 6 bytes, Stack size 4 bytes, screen1viewbase.o(.text._ZN8touchgfx15AbstractPainterD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::AbstractPainter::~AbstractPainter__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx15AbstractPainterE)
</UL>
<P><STRONG><a name="[200]"></a>touchgfx::AbstractPainter::~AbstractPainter__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpainterrgb565.o(.text._ZN8touchgfx15AbstractPainterD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::~AbstractPainterRGB565__sub_object()
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx15AbstractPainterE)
<LI> abstractpainterrgb565.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
<LI> painterrgb565bitmap.o(.rodata._ZTVN8touchgfx19PainterRGB565BitmapE)
<LI> painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[53d]"></a>touchgfx::ButtonWithLabel::setLabelText(touchgfx::TypedText)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, screen1viewbase.o(.text._ZN8touchgfx15ButtonWithLabel12setLabelTextENS_9TypedTextE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::operator=(touchgfx::TypedText const&)
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::updateTextPosition()
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[53e]"></a>touchgfx::ButtonWithLabel::setLabelColor(touchgfx::colortype)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, screen1viewbase.o(.text._ZN8touchgfx15ButtonWithLabel13setLabelColorENS_9colortypeE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[6f5]"></a>touchgfx::ButtonWithLabel::updateTextPosition()</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, screen1viewbase.o(.text._ZN8touchgfx15ButtonWithLabel18updateTextPositionEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::setLabelText(touchgfx::TypedText)
</UL>

<P><STRONG><a name="[53f]"></a>touchgfx::ButtonWithLabel::setLabelColorPressed(touchgfx::colortype)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, screen1viewbase.o(.text._ZN8touchgfx15ButtonWithLabel20setLabelColorPressedENS_9colortypeE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[52e]"></a>touchgfx::ButtonWithLabel::ButtonWithLabel()</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, buttonwithlabel.o(.text._ZN8touchgfx15ButtonWithLabelC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[946]"></a>touchgfx::ButtonWithLabel::ButtonWithLabel__sub_object()</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, buttonwithlabel.o(.text._ZN8touchgfx15ButtonWithLabelC2Ev), UNUSED)

<P><STRONG><a name="[239]"></a>touchgfx::ButtonWithLabel::~ButtonWithLabel__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, buttonwithlabel.o(.text._ZN8touchgfx15ButtonWithLabelD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ButtonWithLabel::~ButtonWithLabel__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[238]"></a>touchgfx::ButtonWithLabel::~ButtonWithLabel__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, buttonwithlabel.o(.text._ZN8touchgfx15ButtonWithLabelD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase__sub_object()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::~screenViewBase__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[1cd]"></a>touchgfx::DataGraphScroll::beforeAddValue()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, graphscroll.o(.text._ZN8touchgfx15DataGraphScroll14beforeAddValueEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::DataGraphScroll::beforeAddValue() &rArr; touchgfx::AbstractDataGraph::invalidateAllXAxisPoints() &rArr; touchgfx::AbstractDataGraph::invalidateXAxisPointAt(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateAllXAxisPoints()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
</UL>
<P><STRONG><a name="[1b5]"></a>touchgfx::DataGraphScroll::clear()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, graphscroll.o(.text._ZN8touchgfx15DataGraphScroll5clearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DataGraphScroll::clear()
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::clear()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
</UL>
<P><STRONG><a name="[1ce]"></a>touchgfx::DataGraphScroll::addValue(int)</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, graphscroll.o(.text._ZN8touchgfx15DataGraphScroll8addValueEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::DataGraphScroll::addValue(int) &rArr; touchgfx::AbstractDataGraph::invalidateAllXAxisPoints() &rArr; touchgfx::AbstractDataGraph::invalidateXAxisPointAt(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateAllXAxisPoints()
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateGraphPointAt(short)
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateGraphArea()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
</UL>
<P><STRONG><a name="[6fb]"></a>touchgfx::DataGraphScroll::DataGraphScroll(short, int*)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, graphscroll.o(.text._ZN8touchgfx15DataGraphScrollC2EsPi), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::AbstractDataGraphWithY__sub_object(short, int*)
</UL>

<P><STRONG><a name="[6b4]"></a>touchgfx::DataGraphScroll::DataGraphScroll__sub_object(short, int*)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, graphscroll.o(.text._ZN8touchgfx15DataGraphScrollC2EsPi), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphScroll&lang;(short)125&rang;::GraphScroll__sub_object()
</UL>

<P><STRONG><a name="[241]"></a>touchgfx::DataGraphScroll::~DataGraphScroll__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphscroll.o(.text._ZN8touchgfx15DataGraphScrollD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DataGraphScroll::~DataGraphScroll__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
</UL>
<P><STRONG><a name="[6b5]"></a>touchgfx::DataGraphScroll::~DataGraphScroll__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screen1view.o(.text._ZN8touchgfx15DataGraphScrollD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::DataGraphScroll::~DataGraphScroll__sub_object() &rArr; touchgfx::AbstractDataGraphWithY::~AbstractDataGraphWithY__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::~AbstractDataGraphWithY__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphScroll&lang;(short)125&rang;::~GraphScroll__sub_object()
</UL>

<P><STRONG><a name="[6e2]"></a>touchgfx::EasingEquations::cubicEaseOut(unsigned short, short, short, unsigned short)</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, easingequations.o(.text._ZN8touchgfx15EasingEquations12cubicEaseOutEtsst))
<BR><BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::roundRespectSign(float)
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[d2]"></a>touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, easingequations.o(.text._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst))
<BR>[Address Reference Count : 1]<UL><LI> abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicatorC2Ev)
</UL>
<P><STRONG><a name="[6fe]"></a>touchgfx::EasingEquations::roundRespectSign(float)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, easingequations.o(.text._ZN8touchgfx15EasingEquations16roundRespectSignEf))
<BR><BR>[Called By]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::cubicEaseOut(unsigned short, short, short, unsigned short)
</UL>

<P><STRONG><a name="[77b]"></a>touchgfx::GenericCallback&lang;touchgfx::AbstractButton const&, void, void&rang;::GenericCallback__sub_object()</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, screen1viewbase.o(.text._ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC2Ev), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::Callback__sub_object(Screen1ViewBase*, void (Screen1ViewBase::*)(touchgfx::AbstractButton const&))
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::Callback__sub_object(screenViewBase*, void (screenViewBase::*)(touchgfx::AbstractButton const&))
</UL>

<P><STRONG><a name="[243]"></a>touchgfx::GenericCallback&lang;touchgfx::AbstractButton const&, void, void&rang;::~GenericCallback__deallocating()</STRONG> (Thumb, 6 bytes, Stack size 4 bytes, screen1viewbase.o(.text._ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::GenericCallback&lang;touchgfx::AbstractButton const&, void, void&rang;::~GenericCallback__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[242]"></a>touchgfx::GenericCallback&lang;touchgfx::AbstractButton const&, void, void&rang;::~GenericCallback__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, screen1view.o(.text._ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::GenericCallback&lang;touchgfx::AbstractButton const&, void, void&rang;::~GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__sub_object()
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[77c]"></a>touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZN8touchgfx15GenericCallbackIvvvEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object()
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)())
</UL>

<P><STRONG><a name="[245]"></a>touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__deallocating()</STRONG> (Thumb, 6 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZN8touchgfx15GenericCallbackIvvvED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx15GenericCallbackIvvvEE)
</UL>
<P><STRONG><a name="[244]"></a>touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx15GenericCallbackIvvvED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx15GenericCallbackIvvvEE)
</UL>
<P><STRONG><a name="[77d]"></a>touchgfx::GenericCallback&lang;void, void, void&rang;::operator=(touchgfx::GenericCallback&lang;void, void, void&rang; const&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, frontendapplicationbase.o(.text._ZN8touchgfx15GenericCallbackIvvvEaSERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::GenericCallback&lang;void, void, void&rang;::operator=(touchgfx::GenericCallback&lang;void, void, void&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator=(touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&&)
</UL>

<P><STRONG><a name="[74e]"></a>touchgfx::RenderingBuffer::attach(unsigned char*, unsigned char, unsigned int, unsigned int, int)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, renderingbuffer.o(.text._ZN8touchgfx15RenderingBuffer6attachEPhhjji))
<BR><BR>[Called By]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(touchgfx::CanvasWidget const*, touchgfx::Rect const&)
</UL>

<P><STRONG><a name="[74b]"></a>touchgfx::RenderingBuffer::RenderingBuffer()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, renderingbuffer.o(.text._ZN8touchgfx15RenderingBufferC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(touchgfx::CanvasWidget const*, touchgfx::Rect const&)
</UL>

<P><STRONG><a name="[947]"></a>touchgfx::RenderingBuffer::RenderingBuffer__sub_object()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, renderingbuffer.o(.text._ZN8touchgfx15RenderingBufferC2Ev), UNUSED)

<P><STRONG><a name="[247]"></a>touchgfx::RenderingBuffer::~RenderingBuffer__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, renderingbuffer.o(.text._ZN8touchgfx15RenderingBufferD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::RenderingBuffer::~RenderingBuffer__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> renderingbuffer.o(.rodata._ZTVN8touchgfx15RenderingBufferE)
</UL>
<P><STRONG><a name="[74f]"></a>touchgfx::RenderingBuffer::~RenderingBuffer()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, renderingbuffer.o(.text._ZN8touchgfx15RenderingBufferD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas()
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(touchgfx::CanvasWidget const*, touchgfx::Rect const&)
</UL>

<P><STRONG><a name="[246]"></a>touchgfx::RenderingBuffer::~RenderingBuffer__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, renderingbuffer.o(.text._ZN8touchgfx15RenderingBufferD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> renderingbuffer.o(.rodata._ZTVN8touchgfx15RenderingBufferE)
</UL>
<P><STRONG><a name="[691]"></a>touchgfx::TouchController::TouchController__sub_object()</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx15TouchControllerC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::TouchController::TouchController__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::STM32TouchController__sub_object()
</UL>

<P><STRONG><a name="[249]"></a>touchgfx::TouchController::~TouchController__deallocating()</STRONG> (Thumb, 6 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx15TouchControllerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::TouchController::~TouchController__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx15TouchControllerE)
</UL>
<P><STRONG><a name="[248]"></a>touchgfx::TouchController::~TouchController__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, stm32touchcontroller.o(.text._ZN8touchgfx15TouchControllerD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::TouchController::~TouchController__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::~STM32TouchController__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx15TouchControllerE)
</UL>
<P><STRONG><a name="[18a]"></a>touchgfx::UIEventListener::~UIEventListener__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx15UIEventListenerD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::~Application__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.rodata._ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[549]"></a>touchgfx::GraphElementDots::setDotWidth(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, graphelements.o(.text._ZN8touchgfx16GraphElementDots11setDotWidthEh), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[24c]"></a>touchgfx::GraphElementDots::invalidateGraphPointAt(short)</STRONG> (Thumb, 154 bytes, Stack size 56 bytes, graphelements.o(.text._ZN8touchgfx16GraphElementDots22invalidateGraphPointAtEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::GraphElementDots::invalidateGraphPointAt(short) &rArr; touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaWidthIncludingPadding() const
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaPaddingTop() const
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaHeight() const
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&=(touchgfx::Rect const&)
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::isCenterInvisible(touchgfx::AbstractDataGraph const*, short) const
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
</UL>
<P><STRONG><a name="[530]"></a>touchgfx::GraphElementDots::GraphElementDots()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, graphelements.o(.text._ZN8touchgfx16GraphElementDotsC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::AbstractGraphElement__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[948]"></a>touchgfx::GraphElementDots::GraphElementDots__sub_object()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, graphelements.o(.text._ZN8touchgfx16GraphElementDotsC2Ev), UNUSED)

<P><STRONG><a name="[24a]"></a>touchgfx::GraphElementDots::~GraphElementDots__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphelements.o(.text._ZN8touchgfx16GraphElementDotsD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::GraphElementDots::~GraphElementDots__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
</UL>
<P><STRONG><a name="[68e]"></a>touchgfx::GraphElementDots::~GraphElementDots__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screen1view.o(.text._ZN8touchgfx16GraphElementDotsD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::GraphElementDots::~GraphElementDots__sub_object() &rArr; touchgfx::AbstractGraphElement::~AbstractGraphElement__sub_object() &rArr; touchgfx::CanvasWidget::~CanvasWidget__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::~AbstractGraphElement__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase__sub_object()
</UL>

<P><STRONG><a name="[545]"></a>touchgfx::GraphElementLine::setLineWidth(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, graphelements.o(.text._ZN8touchgfx16GraphElementLine12setLineWidthEh), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[24f]"></a>touchgfx::GraphElementLine::invalidateGraphPointAt(short)</STRONG> (Thumb, 272 bytes, Stack size 64 bytes, graphelements.o(.text._ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::GraphElementLine::invalidateGraphPointAt(short) &rArr; touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaWidthIncludingPadding() const
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaPaddingTop() const
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaHeight() const
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getUsedCapacity() const
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(touchgfx::Rect const&)
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&=(touchgfx::Rect const&)
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[534]"></a>touchgfx::GraphElementLine::GraphElementLine()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, graphelements.o(.text._ZN8touchgfx16GraphElementLineC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::AbstractGraphElement__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[949]"></a>touchgfx::GraphElementLine::GraphElementLine__sub_object()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, graphelements.o(.text._ZN8touchgfx16GraphElementLineC2Ev), UNUSED)

<P><STRONG><a name="[24d]"></a>touchgfx::GraphElementLine::~GraphElementLine__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphelements.o(.text._ZN8touchgfx16GraphElementLineD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::GraphElementLine::~GraphElementLine__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[68c]"></a>touchgfx::GraphElementLine::~GraphElementLine__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screen1view.o(.text._ZN8touchgfx16GraphElementLineD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::GraphElementLine::~GraphElementLine__sub_object() &rArr; touchgfx::AbstractGraphElement::~AbstractGraphElement__sub_object() &rArr; touchgfx::CanvasWidget::~CanvasWidget__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::~AbstractGraphElement__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase__sub_object()
</UL>

<P><STRONG><a name="[72f]"></a>touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, touchcalibration.o(.text._ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[708]"></a>touchgfx::TouchCalibration::clzu(unsigned int)</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, touchcalibration.o(.text._ZN8touchgfx16TouchCalibration4clzuEj))
<BR><BR>[Called By]<UL><LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&)
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>

<P><STRONG><a name="[cf]"></a>touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)</STRONG> (Thumb, 174 bytes, Stack size 48 bytes, touchcalibration.o(.text._ZN8touchgfx16TouchCalibration6muldivEiiiiRi))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&)
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::clzu(unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchcalibration.o(.text._ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE)
</UL>
<P><STRONG><a name="[709]"></a>touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&)</STRONG> (Thumb, 184 bytes, Stack size 48 bytes, touchcalibration.o(.text._ZN8touchgfx16TouchCalibration7muldivuEjjjjjRj))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&)
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::clzu(unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int&)
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>

<P><STRONG><a name="[7f3]"></a>touchgfx::AbstractDataGraph::scaled2int(int, int)</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph10scaled2intEii))
<BR><BR>[Called By]<UL><LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::scaled2int(int) const
</UL>

<P><STRONG><a name="[7f4]"></a>touchgfx::AbstractDataGraph::float2scaled(float, int)</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph12float2scaledEfi))
<BR><BR>[Called By]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::float2scaled(float) const
</UL>

<P><STRONG><a name="[546]"></a>touchgfx::AbstractDataGraph::addGraphElement(touchgfx::AbstractGraphElement&)</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[19d]"></a>touchgfx::AbstractDataGraph::handleDragEvent(touchgfx::DragEvent const&)</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::AbstractDataGraph::handleDragEvent(touchgfx::DragEvent const&)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[19b]"></a>touchgfx::AbstractDataGraph::handleClickEvent(touchgfx::ClickEvent const&)</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::AbstractDataGraph::handleClickEvent(touchgfx::ClickEvent const&)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[541]"></a>touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short)</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short)
</UL>

<P><STRONG><a name="[6f9]"></a>touchgfx::AbstractDataGraph::invalidateGraphArea()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph19invalidateGraphAreaEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractDataGraph::invalidateGraphArea() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DataGraphScroll::addValue(int)
</UL>

<P><STRONG><a name="[542]"></a>touchgfx::AbstractDataGraph::setGraphAreaPadding(short, short, short, short)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[70a]"></a>touchgfx::AbstractDataGraph::updateAreasPosition()</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::AbstractDataGraph::updateAreasPosition() &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setHeight(short)
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setWidth(short)
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short)
</UL>

<P><STRONG><a name="[6fa]"></a>touchgfx::AbstractDataGraph::invalidateGraphPointAt(short)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractDataGraph::invalidateGraphPointAt(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DataGraphScroll::addValue(int)
</UL>

<P><STRONG><a name="[70b]"></a>touchgfx::AbstractDataGraph::invalidateXAxisPointAt(short)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractDataGraph::invalidateXAxisPointAt(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateAllXAxisPoints()
</UL>

<P><STRONG><a name="[6f8]"></a>touchgfx::AbstractDataGraph::invalidateAllXAxisPoints()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::AbstractDataGraph::invalidateAllXAxisPoints() &rArr; touchgfx::AbstractDataGraph::invalidateXAxisPointAt(short)
</UL>
<BR>[Calls]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateXAxisPointAt(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DataGraphScroll::addValue(int)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DataGraphScroll::beforeAddValue()
</UL>

<P><STRONG><a name="[1b6]"></a>touchgfx::AbstractDataGraph::getNearestIndexForScreenXY(short, short, short&)</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::AbstractDataGraph::getNearestIndexForScreenXY(short, short, short&) &rArr; touchgfx::AbstractDataGraph::indexToScreenY(short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::indexToScreenY(short) const
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::indexToScreenX(short) const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[252]"></a>touchgfx::AbstractDataGraph::clear()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph5clearEv))
<BR><BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DataGraphScroll::clear()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[251]"></a>touchgfx::AbstractDataGraph::setScale(int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph8setScaleEi))
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
</UL>
<P><STRONG><a name="[198]"></a>touchgfx::AbstractDataGraph::setWidth(short)</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph8setWidthEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::AbstractDataGraph::setWidth(short) &rArr; touchgfx::AbstractDataGraph::updateAreasPosition() &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[199]"></a>touchgfx::AbstractDataGraph::setHeight(short)</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph9setHeightEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::AbstractDataGraph::setHeight(short) &rArr; touchgfx::AbstractDataGraph::updateAreasPosition() &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[70e]"></a>touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short)</STRONG> (Thumb, 296 bytes, Stack size 40 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraphC2Es), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short)
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::AbstractDataGraphWithY__sub_object(short, int*)
</UL>

<P><STRONG><a name="[250]"></a>touchgfx::AbstractDataGraph::~AbstractDataGraph__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraphD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
</UL>
<P><STRONG><a name="[240]"></a>touchgfx::AbstractDataGraph::~AbstractDataGraph__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraphD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::~AbstractDataGraphWithY__sub_object()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[259]"></a>touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short)</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartition10allocateAtEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractPartition::allocateAt(unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[6e9]"></a>screenView& touchgfx::AbstractPartition::at&lang;screenView&rang;(unsigned short)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, frontendapplicationbase.o(.text._ZN8touchgfx17AbstractPartition2atI10screenViewEERT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = screenView& touchgfx::AbstractPartition::at&lang;screenView&rang;(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[6ef]"></a>Screen1View& touchgfx::AbstractPartition::at&lang;Screen1View&rang;(unsigned short)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, frontendapplicationbase.o(.text._ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Screen1View& touchgfx::AbstractPartition::at&lang;Screen1View&rang;(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[6ea]"></a>screenPresenter& touchgfx::AbstractPartition::at&lang;screenPresenter&rang;(unsigned short)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, frontendapplicationbase.o(.text._ZN8touchgfx17AbstractPartition2atI15screenPresenterEERT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = screenPresenter& touchgfx::AbstractPartition::at&lang;screenPresenter&rang;(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[6f0]"></a>Screen1Presenter& touchgfx::AbstractPartition::at&lang;Screen1Presenter&rang;(unsigned short)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, frontendapplicationbase.o(.text._ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Screen1Presenter& touchgfx::AbstractPartition::at&lang;Screen1Presenter&rang;(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[6e8]"></a>touchgfx::NoTransition& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, frontendapplicationbase.o(.text._ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::NoTransition& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[6ee]"></a>touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;& touchgfx::AbstractPartition::at&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang; &rang;(unsigned short)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, frontendapplicationbase.o(.text._ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;& touchgfx::AbstractPartition::at&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang; &rang;(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[25c]"></a>touchgfx::AbstractPartition::clear()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartition5clearEv))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[25b]"></a>touchgfx::AbstractPartition::indexOf(void const*)</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartition7indexOfEPKv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractPartition::indexOf(void const*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[258]"></a>touchgfx::AbstractPartition::allocate(unsigned short)</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartition8allocateEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractPartition::allocate(unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[7db]"></a>touchgfx::AbstractPartition::AbstractPartition__sub_object()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::Partition__sub_object()
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::Partition__sub_object()
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::Partition__sub_object()
</UL>

<P><STRONG><a name="[257]"></a>touchgfx::AbstractPartition::~AbstractPartition__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[94a]"></a>touchgfx::AbstractPartition::~AbstractPartition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD2Ev), UNUSED)

<P><STRONG><a name="[256]"></a>touchgfx::AbstractPartition::~AbstractPartition__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZN8touchgfx17AbstractPartitionD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__sub_object()
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__sub_object()
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[25f]"></a>touchgfx::LockFreeDMA_Queue::pushCopyOf(touchgfx::BlitOp const&)</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::LockFreeDMA_Queue::pushCopyOf(touchgfx::BlitOp const&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[262]"></a>touchgfx::LockFreeDMA_Queue::pop()</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue3popEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::LockFreeDMA_Queue::pop() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[263]"></a>touchgfx::LockFreeDMA_Queue::first()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue5firstEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[25e]"></a>touchgfx::LockFreeDMA_Queue::isFull()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue6isFullEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[25d]"></a>touchgfx::LockFreeDMA_Queue::isEmpty()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[4ea]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_QueueC2EPNS_6BlitOpEm))
<BR><BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::STM32H7DMA()
</UL>

<P><STRONG><a name="[94b]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue__sub_object(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_QueueC2EPNS_6BlitOpEm), UNUSED)

<P><STRONG><a name="[261]"></a>touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx17LockFreeDMA_QueueD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[4ed]"></a>touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, stm32dma.o(.text._ZN8touchgfx17LockFreeDMA_QueueD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Queue::~DMA_Queue__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::~STM32H7DMA()
</UL>

<P><STRONG><a name="[267]"></a>touchgfx::CacheableContainer::CachedImage::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cacheablecontainer.o(.text._ZN8touchgfx18CacheableContainer11CachedImage14setupDrawChainERKNS_4RectEPPNS_8DrawableE))
<BR>[Address Reference Count : 1]<UL><LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
</UL>
<P><STRONG><a name="[70f]"></a>touchgfx::CacheableContainer::CachedImage::CachedImage__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, cacheablecontainer.o(.text._ZN8touchgfx18CacheableContainer11CachedImageC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image__sub_object(touchgfx::Bitmap const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CacheableContainer::CacheableContainer()
</UL>

<P><STRONG><a name="[264]"></a>touchgfx::CacheableContainer::CachedImage::~CachedImage__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cacheablecontainer.o(.text._ZN8touchgfx18CacheableContainer11CachedImageD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::CacheableContainer::CachedImage::~CachedImage__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
</UL>
<P><STRONG><a name="[26b]"></a>touchgfx::CacheableContainer::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, cacheablecontainer.o(.text._ZN8touchgfx18CacheableContainer14setupDrawChainERKNS_4RectEPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::CacheableContainer::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**) &rArr; touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**) &rArr; touchgfx::Rect::operator&(touchgfx::Rect const&) const &rArr; touchgfx::Rect::operator&=(touchgfx::Rect const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
</UL>
<P><STRONG><a name="[52c]"></a>touchgfx::CacheableContainer::CacheableContainer()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, cacheablecontainer.o(.text._ZN8touchgfx18CacheableContainerC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CacheableContainer::CachedImage::CachedImage__sub_object()
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[94c]"></a>touchgfx::CacheableContainer::CacheableContainer__sub_object()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, cacheablecontainer.o(.text._ZN8touchgfx18CacheableContainerC2Ev), UNUSED)

<P><STRONG><a name="[269]"></a>touchgfx::CacheableContainer::~CacheableContainer__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cacheablecontainer.o(.text._ZN8touchgfx18CacheableContainerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::CacheableContainer::~CacheableContainer__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
</UL>
<P><STRONG><a name="[268]"></a>touchgfx::CacheableContainer::~CacheableContainer__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cacheablecontainer.o(.text._ZN8touchgfx18CacheableContainerD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
</UL>
<P><STRONG><a name="[26e]"></a>touchgfx::PainterRGB565Bitmap::renderInit()</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, painterrgb565bitmap.o(.text._ZN8touchgfx19PainterRGB565Bitmap10renderInitEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::PainterRGB565Bitmap::renderInit() &rArr; touchgfx::Bitmap::getId() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getId() const
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getExtraData() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565bitmap.o(.rodata._ZTVN8touchgfx19PainterRGB565BitmapE)
</UL>
<P><STRONG><a name="[26f]"></a>touchgfx::PainterRGB565Bitmap::renderNext(unsigned char&, unsigned char&, unsigned char&, unsigned char&)</STRONG> (Thumb, 186 bytes, Stack size 8 bytes, painterrgb565bitmap.o(.text._ZN8touchgfx19PainterRGB565Bitmap10renderNextERhS1_S1_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::PainterRGB565Bitmap::renderNext(unsigned char&, unsigned char&, unsigned char&, unsigned char&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565bitmap.o(.rodata._ZTVN8touchgfx19PainterRGB565BitmapE)
</UL>
<P><STRONG><a name="[26d]"></a>touchgfx::PainterRGB565Bitmap::render(unsigned char*, int, int, int, unsigned int, unsigned char const*)</STRONG> (Thumb, 640 bytes, Stack size 48 bytes, painterrgb565bitmap.o(.text._ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::PainterRGB565Bitmap::render(unsigned char*, int, int, int, unsigned int, unsigned char const*) &rArr; touchgfx::AbstractPainterRGB565::mixColors(unsigned short, unsigned short, unsigned char) &rArr; touchgfx::AbstractPainterRGB565::mixColors(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::mixColors(unsigned short, unsigned short, unsigned char)
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::mixColors(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565bitmap.o(.rodata._ZTVN8touchgfx19PainterRGB565BitmapE)
</UL>
<P><STRONG><a name="[55a]"></a>touchgfx::PainterRGB565Bitmap::setBitmap(touchgfx::Bitmap const&)</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, painterrgb565bitmap.o(.text._ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getId() const
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getRect() const
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::PainterRGB565Bitmap__sub_object(touchgfx::Bitmap const&, unsigned char)
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[555]"></a>touchgfx::PainterRGB565Bitmap::PainterRGB565Bitmap__sub_object(touchgfx::Bitmap const&, unsigned char)</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, screenviewbase.o(.text._ZN8touchgfx19PainterRGB565BitmapC2ERKNS_6BitmapEh), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect__sub_object()
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap__sub_object(unsigned short)
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object()
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::setBitmap(touchgfx::Bitmap const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[26c]"></a>touchgfx::PainterRGB565Bitmap::~PainterRGB565Bitmap__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, painterrgb565bitmap.o(.text._ZN8touchgfx19PainterRGB565BitmapD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::PainterRGB565Bitmap::~PainterRGB565Bitmap__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565bitmap.o(.rodata._ZTVN8touchgfx19PainterRGB565BitmapE)
</UL>
<P><STRONG><a name="[687]"></a>touchgfx::PainterRGB565Bitmap::~PainterRGB565Bitmap__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screenview.o(.text._ZN8touchgfx19PainterRGB565BitmapD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::PainterRGB565Bitmap::~PainterRGB565Bitmap__sub_object() &rArr; touchgfx::AbstractPainterRGB565::~AbstractPainterRGB565__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::~AbstractPainterRGB565__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::~screenViewBase__sub_object()
</UL>

<P><STRONG><a name="[543]"></a>touchgfx::AbstractGraphElement::setScale(int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphelements.o(.text._ZN8touchgfx20AbstractGraphElement8setScaleEi), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[705]"></a>touchgfx::AbstractGraphElement::AbstractGraphElement__sub_object()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, graphelements.o(.text._ZN8touchgfx20AbstractGraphElementC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::CanvasWidget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::GraphElementLine()
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::GraphElementDots()
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElementNoCWR::AbstractGraphElementNoCWR__sub_object()
</UL>

<P><STRONG><a name="[270]"></a>touchgfx::AbstractGraphElement::~AbstractGraphElement__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, graphelements.o(.text._ZN8touchgfx20AbstractGraphElementD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
</UL>
<P><STRONG><a name="[706]"></a>touchgfx::AbstractGraphElement::~AbstractGraphElement__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screen1view.o(.text._ZN8touchgfx20AbstractGraphElementD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::AbstractGraphElement::~AbstractGraphElement__sub_object() &rArr; touchgfx::CanvasWidget::~CanvasWidget__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::~CanvasWidget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElementNoCWR::~AbstractGraphElementNoCWR__sub_object()
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::~GraphElementLine__sub_object()
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::~GraphElementDots__sub_object()
</UL>

<P><STRONG><a name="[537]"></a>touchgfx::CanvasWidgetRenderer::setupBuffer(unsigned char*, unsigned int)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(.text._ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[76c]"></a>touchgfx::CanvasWidgetRenderer::getOutlineBuffer()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(.text._ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv))
<BR><BR>[Called By]<UL><LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
</UL>

<P><STRONG><a name="[7d9]"></a>touchgfx::CanvasWidgetRenderer::getScanlineWidth()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(.text._ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv))
<BR><BR>[Called By]<UL><LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::addSpan(int, int, unsigned int, unsigned int)
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::addCell(int, int, unsigned int)
</UL>

<P><STRONG><a name="[718]"></a>touchgfx::CanvasWidgetRenderer::setScanlineWidth(unsigned int)</STRONG> (Thumb, 208 bytes, Stack size 8 bytes, canvaswidgetrenderer.o(.text._ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::CanvasWidgetRenderer::setScanlineWidth(unsigned int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(touchgfx::CanvasWidget const*, touchgfx::Rect const&)
</UL>

<P><STRONG><a name="[7d8]"></a>touchgfx::CanvasWidgetRenderer::getScanlineCounts()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(.text._ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv))
<BR><BR>[Called By]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::reset()
</UL>

<P><STRONG><a name="[7d6]"></a>touchgfx::CanvasWidgetRenderer::getScanlineCovers()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(.text._ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv))
<BR><BR>[Called By]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::reset()
</UL>

<P><STRONG><a name="[76d]"></a>touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(.text._ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
</UL>

<P><STRONG><a name="[7d7]"></a>touchgfx::CanvasWidgetRenderer::getScanlineStartIndices()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(.text._ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv))
<BR><BR>[Called By]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::reset()
</UL>

<P><STRONG><a name="[74c]"></a>touchgfx::CanvasWidgetRenderer::hasBuffer()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(.text._ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv))
<BR><BR>[Called By]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(touchgfx::CanvasWidget const*, touchgfx::Rect const&)
</UL>

<P><STRONG><a name="[205]"></a>touchgfx::AbstractPainterRGB565::renderInit()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractpainterrgb565.o(.text._ZN8touchgfx21AbstractPainterRGB56510renderInitEv))
<BR>[Address Reference Count : 2]<UL><LI> abstractpainterrgb565.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
<LI> painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[207]"></a>touchgfx::AbstractPainterRGB565::renderPixel(unsigned short*, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, abstractpainterrgb565.o(.text._ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh))
<BR>[Address Reference Count : 3]<UL><LI> abstractpainterrgb565.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
<LI> painterrgb565bitmap.o(.rodata._ZTVN8touchgfx19PainterRGB565BitmapE)
<LI> painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[272]"></a>touchgfx::AbstractPainterRGB565::render(unsigned char*, int, int, int, unsigned int, unsigned char const*)</STRONG> (Thumb, 298 bytes, Stack size 48 bytes, abstractpainterrgb565.o(.text._ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::AbstractPainterRGB565::render(unsigned char*, int, int, int, unsigned int, unsigned char const*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractpainterrgb565.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
</UL>
<P><STRONG><a name="[716]"></a>touchgfx::AbstractPainterRGB565::mixColors(unsigned short, unsigned short, unsigned char)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, painterrgb565bitmap.o(.text._ZN8touchgfx21AbstractPainterRGB5659mixColorsEtth))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::AbstractPainterRGB565::mixColors(unsigned short, unsigned short, unsigned char) &rArr; touchgfx::AbstractPainterRGB565::mixColors(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::mixColors(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::render(unsigned char*, int, int, int, unsigned int, unsigned char const*)
</UL>

<P><STRONG><a name="[6d7]"></a>touchgfx::AbstractPainterRGB565::mixColors(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, painterrgb565.o(.text._ZN8touchgfx21AbstractPainterRGB5659mixColorsEtttth))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractPainterRGB565::mixColors(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::mixColors(unsigned short, unsigned short, unsigned char)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::render(unsigned char*, int, int, int, unsigned int, unsigned char const*)
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::render(unsigned char*, int, int, int, unsigned int, unsigned char const*)
</UL>

<P><STRONG><a name="[6d8]"></a>touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object()</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, screen1viewbase.o(.text._ZN8touchgfx21AbstractPainterRGB565C2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainter::AbstractPainter__sub_object()
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainter::compatibleFramebuffer(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::PainterRGB565__sub_object(touchgfx::colortype, unsigned char)
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::PainterRGB565Bitmap__sub_object(touchgfx::Bitmap const&, unsigned char)
</UL>

<P><STRONG><a name="[271]"></a>touchgfx::AbstractPainterRGB565::~AbstractPainterRGB565__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpainterrgb565.o(.text._ZN8touchgfx21AbstractPainterRGB565D0Ev))
<BR>[Address Reference Count : 1]<UL><LI> abstractpainterrgb565.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
</UL>
<P><STRONG><a name="[6d9]"></a>touchgfx::AbstractPainterRGB565::~AbstractPainterRGB565__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screen1view.o(.text._ZN8touchgfx21AbstractPainterRGB565D2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractPainterRGB565::~AbstractPainterRGB565__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainter::~AbstractPainter__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::~PainterRGB565__sub_object()
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::~PainterRGB565Bitmap__sub_object()
</UL>

<P><STRONG><a name="[d7]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::setBitmap(touchgfx::Bitmap const&)
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(unsigned short const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(unsigned short const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(unsigned int const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(touchgfx::CanvasWidget const*, touchgfx::Rect const&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t)
</UL>
<P><STRONG><a name="[71a]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, touchgfx::Rect const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(unsigned short const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(unsigned short const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(unsigned int const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(touchgfx::CanvasWidget const*, touchgfx::Rect const&)
</UL>

<P><STRONG><a name="[7d4]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_))
<BR><BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[71b]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, touchgfx::Rect const&)</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
</UL>

<P><STRONG><a name="[6ab]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
</UL>

<P><STRONG><a name="[730]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, displaytransformation.o(.text._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[547]"></a>touchgfx::GraphElementHistogram::setBarWidth(unsigned short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphelements.o(.text._ZN8touchgfx21GraphElementHistogram11setBarWidthEt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[548]"></a>touchgfx::GraphElementHistogram::setBaseline(int)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, graphelements.o(.text._ZN8touchgfx21GraphElementHistogram11setBaselineEi), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[277]"></a>touchgfx::GraphElementHistogram::invalidateGraphPointAt(short)</STRONG> (Thumb, 180 bytes, Stack size 64 bytes, graphelements.o(.text._ZN8touchgfx21GraphElementHistogram22invalidateGraphPointAtEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::GraphElementHistogram::invalidateGraphPointAt(short) &rArr; touchgfx::AbstractDataGraph::convertToGraphScale(int, int) const &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaWidthIncludingPadding() const
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaPaddingTop() const
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::convertToGraphScale(int, int) const
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaHeight() const
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&=(touchgfx::Rect const&)
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
</UL>
<P><STRONG><a name="[533]"></a>touchgfx::GraphElementHistogram::GraphElementHistogram()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, graphelements.o(.text._ZN8touchgfx21GraphElementHistogramC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElementNoCWR::AbstractGraphElementNoCWR__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[94d]"></a>touchgfx::GraphElementHistogram::GraphElementHistogram__sub_object()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, graphelements.o(.text._ZN8touchgfx21GraphElementHistogramC2Ev), UNUSED)

<P><STRONG><a name="[273]"></a>touchgfx::GraphElementHistogram::~GraphElementHistogram__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphelements.o(.text._ZN8touchgfx21GraphElementHistogramD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::GraphElementHistogram::~GraphElementHistogram__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
</UL>
<P><STRONG><a name="[68d]"></a>touchgfx::GraphElementHistogram::~GraphElementHistogram__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screen1view.o(.text._ZN8touchgfx21GraphElementHistogramD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::GraphElementHistogram::~GraphElementHistogram__sub_object() &rArr; touchgfx::AbstractGraphElementNoCWR::~AbstractGraphElementNoCWR__sub_object() &rArr; touchgfx::AbstractGraphElement::~AbstractGraphElement__sub_object() &rArr; touchgfx::CanvasWidget::~CanvasWidget__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElementNoCWR::~AbstractGraphElementNoCWR__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase__sub_object()
</UL>

<P><STRONG><a name="[54a]"></a>touchgfx::AbstractDataGraphWithY::addDataPoint(float)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::float2scaled(float) const
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::addDataPointScaled(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[50b]"></a>touchgfx::AbstractDataGraphWithY::addDataPoint(int)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY12addDataPointEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractDataGraphWithY::addDataPoint(int) &rArr; touchgfx::AbstractDataGraphWithY::addDataPointScaled(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::addDataPointScaled(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::UpDateHeartRateLine(int)
</UL>

<P><STRONG><a name="[1c6]"></a>touchgfx::AbstractDataGraphWithY::setXAxisScale(float)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY13setXAxisScaleEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractDataGraphWithY::setXAxisScale(float)
</UL>
<BR>[Calls]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::float2scaled(float) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1c5]"></a>touchgfx::AbstractDataGraphWithY::setXAxisScale(int)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY13setXAxisScaleEi))
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[27b]"></a>touchgfx::AbstractDataGraphWithY::beforeAddValue()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14beforeAddValueEv))
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1ac]"></a>touchgfx::AbstractDataGraphWithY::setGraphRangeX(int, int)</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractDataGraphWithY::setGraphRangeX(int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::AbstractDataGraphWithY__sub_object(short, int*)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1ae]"></a>touchgfx::AbstractDataGraphWithY::setGraphRangeY(float, float)</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeYEff))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractDataGraphWithY::setGraphRangeY(float, float)
</UL>
<BR>[Calls]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::float2scaled(float) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1ad]"></a>touchgfx::AbstractDataGraphWithY::setGraphRangeY(int, int)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeYEii))
<BR><BR>[Called By]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::UpDateHeartRateLine(int)
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1ca]"></a>touchgfx::AbstractDataGraphWithY::setXAxisOffset(float)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14setXAxisOffsetEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractDataGraphWithY::setXAxisOffset(float)
</UL>
<BR>[Calls]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::float2scaled(float) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1c9]"></a>touchgfx::AbstractDataGraphWithY::setXAxisOffset(int)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY14setXAxisOffsetEi))
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[721]"></a>touchgfx::AbstractDataGraphWithY::addDataPointScaled(int)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY18addDataPointScaledEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractDataGraphWithY::addDataPointScaled(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::addDataPoint(int)
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::addDataPoint(float)
</UL>

<P><STRONG><a name="[1d0]"></a>touchgfx::AbstractDataGraphWithY::setXAxisScaleScaled(int)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY19setXAxisScaleScaledEi))
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1b9]"></a>touchgfx::AbstractDataGraphWithY::setGraphRangeYScaled(int, int)</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractDataGraphWithY::setGraphRangeYScaled(int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1d1]"></a>touchgfx::AbstractDataGraphWithY::setXAxisOffsetScaled(int)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY20setXAxisOffsetScaledEi))
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1ab]"></a>touchgfx::AbstractDataGraphWithY::setScale(int)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY8setScaleEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::AbstractDataGraphWithY::setScale(int) &rArr; touchgfx::AbstractDataGraph::convertToGraphScale(int, int) const &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::convertToGraphScale(int, int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[6fc]"></a>touchgfx::AbstractDataGraphWithY::AbstractDataGraphWithY__sub_object(short, int*)</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithYC2EsPi), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::setGraphRangeX(int, int)
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short)
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DataGraphScroll::DataGraphScroll(short, int*)
</UL>

<P><STRONG><a name="[27a]"></a>touchgfx::AbstractDataGraphWithY::~AbstractDataGraphWithY__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithYD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[6fd]"></a>touchgfx::AbstractDataGraphWithY::~AbstractDataGraphWithY__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screen1view.o(.text._ZN8touchgfx22AbstractDataGraphWithYD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractDataGraphWithY::~AbstractDataGraphWithY__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::~AbstractDataGraph__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DataGraphScroll::~DataGraphScroll__sub_object()
</UL>

<P><STRONG><a name="[513]"></a>touchgfx::TextAreaWithOneWildcard::setWildcard(unsigned short const*)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, screenview.o(.text._ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::setWildcard(unsigned short const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::UpDateTemNum(int)
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[283]"></a>touchgfx::TextAreaWithOneWildcard::getTextHeight()</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, textareawithwildcard.o(.text._ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::getTextHeight() &rArr; touchgfx::TypedText::getText() const &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[552]"></a>touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard__sub_object()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx23TextAreaWithOneWildcardC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[27e]"></a>touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, textareawithwildcard.o(.text._ZN8touchgfx23TextAreaWithOneWildcardD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[689]"></a>touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screenview.o(.text._ZN8touchgfx23TextAreaWithOneWildcardD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::~screenViewBase__sub_object()
</UL>

<P><STRONG><a name="[275]"></a>touchgfx::AbstractGraphElementNoCWR::setPainter(touchgfx::AbstractPainter&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, graphelements.o(.text._ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE))
<BR>[Address Reference Count : 2]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
</UL>
<P><STRONG><a name="[278]"></a>touchgfx::AbstractGraphElementNoCWR::setColor(touchgfx::colortype)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphelements.o(.text._ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE))
<BR><BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
</UL>
<P><STRONG><a name="[71e]"></a>touchgfx::AbstractGraphElementNoCWR::AbstractGraphElementNoCWR__sub_object()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, graphelements.o(.text._ZN8touchgfx25AbstractGraphElementNoCWRC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::AbstractGraphElement__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::GraphElementHistogram()
</UL>

<P><STRONG><a name="[286]"></a>touchgfx::AbstractGraphElementNoCWR::~AbstractGraphElementNoCWR__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, graphelements.o(.text._ZN8touchgfx25AbstractGraphElementNoCWRD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
</UL>
<P><STRONG><a name="[71f]"></a>touchgfx::AbstractGraphElementNoCWR::~AbstractGraphElementNoCWR__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screen1view.o(.text._ZN8touchgfx25AbstractGraphElementNoCWRD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::AbstractGraphElementNoCWR::~AbstractGraphElementNoCWR__sub_object() &rArr; touchgfx::AbstractGraphElement::~AbstractGraphElement__sub_object() &rArr; touchgfx::CanvasWidget::~CanvasWidget__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::~AbstractGraphElement__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::~GraphElementHistogram__sub_object()
</UL>

<P><STRONG><a name="[21a]"></a>touchgfx::AbstractProgressIndicator::updateValue(int, unsigned short)</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator11updateValueEit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractProgressIndicator::updateValue(int, unsigned short) &rArr; touchgfx::Application::registerTimerWidget(touchgfx::Drawable*) &rArr; touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(touchgfx::Drawable const*)
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[20b]"></a>touchgfx::AbstractProgressIndicator::setBackground(touchgfx::Bitmap const&)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractProgressIndicator::setBackground(touchgfx::Bitmap const&) &rArr; touchgfx::Image::setBitmap(touchgfx::Bitmap const&) &rArr; touchgfx::Drawable::setWidthHeight(touchgfx::Bitmap const&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(touchgfx::Drawable const&)
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(touchgfx::Bitmap const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[20a]"></a>touchgfx::AbstractProgressIndicator::handleTickEvent()</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractProgressIndicator::handleTickEvent() &rArr; touchgfx::Application::unregisterTimerWidget(touchgfx::Drawable const*)
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::unregisterTimerWidget(touchgfx::Drawable const*)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[219]"></a>touchgfx::AbstractProgressIndicator::setEasingEquation(short (*)(unsigned short, short, short, unsigned short))</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE))
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[289]"></a>touchgfx::AbstractProgressIndicator::setProgressIndicatorPosition(short, short, short, short)</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::AbstractProgressIndicator::setProgressIndicatorPosition(short, short, short, short) &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setProgressIndicatorPosition(short, short, short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
</UL>
<P><STRONG><a name="[211]"></a>touchgfx::AbstractProgressIndicator::setRange(int, int, unsigned short, unsigned short)</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::AbstractProgressIndicator::setRange(int, int, unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[28a]"></a>touchgfx::AbstractProgressIndicator::setValue(int)</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicator8setValueEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractProgressIndicator::setValue(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setValue(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
</UL>
<P><STRONG><a name="[724]"></a>touchgfx::AbstractProgressIndicator::AbstractProgressIndicator()</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicatorC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image__sub_object(touchgfx::Bitmap const&)
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[6dc]"></a>touchgfx::AbstractProgressIndicator::AbstractProgressIndicator__sub_object()</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicatorC2Ev), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::CircleProgress()
</UL>

<P><STRONG><a name="[288]"></a>touchgfx::AbstractProgressIndicator::~AbstractProgressIndicator__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicatorD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractProgressIndicator::~AbstractProgressIndicator__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
</UL>
<P><STRONG><a name="[287]"></a>touchgfx::AbstractProgressIndicator::~AbstractProgressIndicator__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZN8touchgfx25AbstractProgressIndicatorD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
</UL>
<P><STRONG><a name="[539]"></a>touchgfx::Box::setColor(touchgfx::colortype)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, screen1viewbase.o(.text._ZN8touchgfx3Box8setColorENS_9colortypeE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[52b]"></a>touchgfx::Box::Box__sub_object()</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, screen1viewbase.o(.text._ZN8touchgfx3BoxC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::colortype__sub_object(unsigned int)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[28b]"></a>touchgfx::Box::~Box__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx3BoxD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Box::~Box__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[68a]"></a>touchgfx::Box::~Box__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screen1view.o(.text._ZN8touchgfx3BoxD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Box::~Box__sub_object() &rArr; touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase__sub_object()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::~screenViewBase__sub_object()
</UL>

<P><STRONG><a name="[294]"></a>touchgfx::HAL::FlushCache()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL10FlushCacheEv))
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[127]"></a>touchgfx::HAL::beginFrame()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL10beginFrameEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[123]"></a>touchgfx::HAL::getDMAType()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL10getDMATypeEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[4db]"></a>touchgfx::HAL::initialize()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
</UL>

<P><STRONG><a name="[10e]"></a>touchgfx::HAL::getBlitCaps()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL11getBlitCapsEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[4e2]"></a>touchgfx::HAL::getInstance()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(.text._ZN8touchgfx3HAL11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_XferCpltCallback(__DMA2D_HandleTypeDef*)
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainter::compatibleFramebuffer(touchgfx::Bitmap::BitmapFormat)
</UL>

<P><STRONG><a name="[112]"></a>touchgfx::HAL::blitCopyGlyph(unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)</STRONG> (Thumb, 176 bytes, Stack size 64 bytes, hal.o(.text._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopyGlyph(unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[293]"></a>touchgfx::HAL::InvalidateCache()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL15InvalidateCacheEv))
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[118]"></a>touchgfx::HAL::backPorchExited()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL15backPorchExitedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::HAL::backPorchExited() &rArr; touchgfx::HAL::swapFrameBuffers() &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[6f3]"></a>touchgfx::HAL::getAuxiliaryLCD()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, screen1viewbase.o(.text._ZN8touchgfx3HAL15getAuxiliaryLCDEv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainter::compatibleFramebuffer(touchgfx::Bitmap::BitmapFormat)
</UL>

<P><STRONG><a name="[10a]"></a>touchgfx::HAL::lockFrameBuffer()</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL15lockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = touchgfx::HAL::lockFrameBuffer() &rArr; touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setRenderingVariant(touchgfx::HAL::RenderingVariant)
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::isDmaQueueEmpty()
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[111]"></a>touchgfx::HAL::blitCopyARGB8888(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</STRONG> (Thumb, 76 bytes, Stack size 64 bytes, hal.o(.text._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopyARGB8888(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char) &rArr; touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[291]"></a>touchgfx::HAL::flushFrameBuffer(touchgfx::Rect const&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer(touchgfx::Rect const&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[290]"></a>touchgfx::HAL::flushFrameBuffer()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL16flushFrameBufferEv))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[4e5]"></a>touchgfx::HAL::swapFrameBuffers()</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL16swapFrameBuffersEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::swapFrameBuffers() &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::backPorchExited()
</UL>

<P><STRONG><a name="[108]"></a>touchgfx::HAL::allowDMATransfers()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL17allowDMATransfersEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[4e8]"></a>touchgfx::HAL::frontPorchEntered()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(.text._ZN8touchgfx3HAL17frontPorchEnteredEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::frontPorchEntered()
</UL>
<BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[122]"></a>touchgfx::HAL::getTFTCurrentLine()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL17getTFTCurrentLineEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[10b]"></a>touchgfx::HAL::unlockFrameBuffer()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL17unlockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = touchgfx::HAL::unlockFrameBuffer() &rArr; touchgfx::OSWrappers::giveFrameBufferSemaphore() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[4f0]"></a>touchgfx::HAL::signalDMAInterrupt()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, stm32dma.o(.text._ZN8touchgfx3HAL18signalDMAInterruptEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::signalDMAInterrupt()
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_XferCpltCallback(__DMA2D_HandleTypeDef*)
</UL>

<P><STRONG><a name="[6d5]"></a>touchgfx::HAL::setRenderingVariant(touchgfx::HAL::RenderingVariant)</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, hal.o(.text._ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::setRenderingVariant(touchgfx::HAL::RenderingVariant)
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::addToQueue(touchgfx::BlitOp const&)
</UL>

<P><STRONG><a name="[116]"></a>touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)</STRONG> (Thumb, 128 bytes, Stack size 56 bytes, hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[117]"></a>touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned int)</STRONG> (Thumb, 108 bytes, Stack size 56 bytes, hal.o(.text._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtj))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned int) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[725]"></a>touchgfx::HAL::getClientFrameBuffer()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL20getClientFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
</UL>

<P><STRONG><a name="[115]"></a>touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Calls]<UL><LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[104]"></a>touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[11f]"></a>touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, hal.o(.text._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[124]"></a>touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[125]"></a>touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)</STRONG> (Thumb, 400 bytes, Stack size 80 bytes, hal.o(.text._ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&(touchgfx::Rect const&) const
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::dynamicBitmapGetAddress(unsigned short)
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[11e]"></a>touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, touchgfxhal.o(.text._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[12c]"></a>touchgfx::HAL::performDisplayOrientationChange()</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL31performDisplayOrientationChangeEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[518]"></a>touchgfx::HAL::lcd()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx3HAL3lcdEv))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned int)
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyARGB8888(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainter::compatibleFramebuffer(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(touchgfx::Rect const&) const
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::draw(touchgfx::Rect const&) const
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(touchgfx::Rect const&) const
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(touchgfx::Rect const&) const
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::draw(touchgfx::Rect const&) const
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(touchgfx::CanvasWidget const*, touchgfx::Rect const&)
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(touchgfx::Rect const&) const
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[126]"></a>touchgfx::HAL::tick()</STRONG> (Thumb, 388 bytes, Stack size 32 bytes, hal.o(.text._ZN8touchgfx3HAL4tickEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::HAL::tick() &rArr; touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::tick()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[12a]"></a>touchgfx::HAL::touch(int, int)</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, hal.o(.text._ZN8touchgfx3HAL5touchEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::touch(int, int) &rArr; touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short) &rArr; _Unwind_Resume &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[4e3]"></a>touchgfx::HAL::vSync()</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, touchgfxgeneratedhal.o(.text._ZN8touchgfx3HAL5vSyncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::HAL::vSync()
</UL>
<BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[12b]"></a>touchgfx::HAL::noTouch()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL7noTouchEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1000 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::noTouch() &rArr; touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short) &rArr; _Unwind_Resume &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[728]"></a>touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 192 bytes, Stack size 80 bytes, hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyARGB8888(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>

<P><STRONG><a name="[110]"></a>touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</STRONG> (Thumb, 76 bytes, Stack size 56 bytes, hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthb))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool) &rArr; touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[10f]"></a>touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 52 bytes, Stack size 48 bytes, hal.o(.text._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopy(unsigned short const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[114]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</STRONG> (Thumb, 68 bytes, Stack size 48 bytes, hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[113]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 152 bytes, Stack size 80 bytes, hal.o(.text._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[128]"></a>touchgfx::HAL::endFrame()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::endFrame()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[109]"></a>touchgfx::HAL::flushDMA()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL8flushDMAEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[292]"></a>touchgfx::HAL::blockCopy(void*, void const*, unsigned int)</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, hal.o(.text._ZN8touchgfx3HAL9blockCopyEPvPKvj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::blockCopy(void*, void const*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::blockCopy(void*, void const*, unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[11d]"></a>touchgfx::HAL::sampleKey(unsigned char&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL9sampleKeyERh))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[121]"></a>touchgfx::HAL::taskDelay(unsigned short)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HAL9taskDelayEt))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[105]"></a>touchgfx::HAL::taskEntry()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, hal.o(.text._ZN8touchgfx3HAL9taskEntryEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::waitForVSync()
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_taskEntry
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[692]"></a>touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)</STRONG> (Thumb, 278 bytes, Stack size 40 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx3HALC2ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; touchgfx::Gestures::Gestures__sub_object() &rArr; touchgfx::Gestures::DragState::DragState__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::Gestures__sub_object()
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::TouchGFXGeneratedHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[28f]"></a>touchgfx::HAL::~HAL__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HALD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[28e]"></a>touchgfx::HAL::~HAL__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(.text._ZN8touchgfx3HALD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[739]"></a>touchgfx::LCD::rotateRect(touchgfx::Rect&, touchgfx::Rect const&, touchgfx::TextRotation)</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, lcd.o(.text._ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD::rotateRect(touchgfx::Rect&, touchgfx::Rect const&, touchgfx::TextRotation)
</UL>
<BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)
</UL>

<P><STRONG><a name="[735]"></a>touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, touchgfx::Font const*, short)</STRONG> (Thumb, 84 bytes, Stack size 64 bytes, lcd.o(.text._ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, touchgfx::Font const*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct__sub_object(touchgfx::TextProvider&, unsigned short, unsigned char, touchgfx::Font const*, touchgfx::WideTextAction)
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(unsigned short const*, ...) const
</UL>

<P><STRONG><a name="[738]"></a>touchgfx::LCD::stringWidth(touchgfx::TextProvider&, touchgfx::Font const&, int, unsigned char)</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, lcd.o(.text._ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::stringWidth(touchgfx::TextProvider&, touchgfx::Font const&, int, unsigned char) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)
</UL>

<P><STRONG><a name="[56c]"></a>touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)</STRONG> (Thumb, 602 bytes, Stack size 408 bytes, lcd.o(.text._ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 816 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*)
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, touchgfx::Font const&, int, unsigned char)
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct__sub_object(touchgfx::TextProvider&, unsigned short, unsigned char, touchgfx::Font const*, touchgfx::WideTextAction)
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::rotateRect(touchgfx::Rect&, touchgfx::Rect const&, touchgfx::TextRotation)
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, ...)
</UL>

<P><STRONG><a name="[7a7]"></a>touchgfx::LCD::getAlphaFromA4(unsigned short const*, unsigned int)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx3LCD14getAlphaFromA4EPKtj))
<BR><BR>[Called By]<UL><LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned short const*, unsigned int, short, unsigned char, unsigned char)
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned int, short, unsigned char, unsigned char, unsigned char)
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[73a]"></a>touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool)</STRONG> (Thumb, 652 bytes, Stack size 152 bytes, lcd.o(.text._ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::top() const
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&)
</UL>
<BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)
</UL>

<P><STRONG><a name="[737]"></a>touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)</STRONG> (Thumb, 464 bytes, Stack size 64 bytes, lcd.o(.text._ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::addWord(unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, touchgfx::Font const*, short)
</UL>

<P><STRONG><a name="[73b]"></a>touchgfx::LCD::WideTextInternalStruct::addWord(unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lcd.o(.text._ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::addWord(unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
</UL>

<P><STRONG><a name="[736]"></a>touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct__sub_object(touchgfx::TextProvider&, unsigned short, unsigned char, touchgfx::Font const*, touchgfx::WideTextAction)</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, lcd.o(.text._ZN8touchgfx3LCD22WideTextInternalStructC2ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct__sub_object(touchgfx::TextProvider&, unsigned short, unsigned char, touchgfx::Font const*, touchgfx::WideTextAction)
</UL>
<BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list)
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, touchgfx::Font const*, short)
</UL>

<P><STRONG><a name="[311]"></a>touchgfx::LCD::drawTextureMapScanLine(touchgfx::DrawingSurface const&, touchgfx::Gradients const&, touchgfx::Edge const*, touchgfx::Edge const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 424 bytes, Stack size 80 bytes, lcd.o(.text._ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD::drawTextureMapScanLine(touchgfx::DrawingSurface const&, touchgfx::Gradients const&, touchgfx::Edge const*, touchgfx::Edge const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[30f]"></a>touchgfx::LCD::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 916 bytes, Stack size 376 bytes, lcd.o(.text._ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = touchgfx::LCD::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short) &rArr; touchgfx::Gradients::Gradients(touchgfx::Point3D const*)
</UL>
<BR>[Calls]<UL><LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gradients::Gradients(touchgfx::Point3D const*)
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Edge::step()
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Edge::step(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[7a8]"></a>touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBase29drawTextureMapNextSubdivisionERfS2_S2_S2_S2_S2_fS2_fS2_fiRiS3_S3_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2c8]"></a>touchgfx::LCD::DrawTextureMapScanLineBase::~DrawTextureMapScanLineBase__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx3LCD26DrawTextureMapScanLineBaseD2Ev))
<BR>[Address Reference Count : 28]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
<LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[7d2]"></a>touchgfx::LCD::realX(touchgfx::Rect const&, short, short, touchgfx::TextRotation)</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lcd.o(.text._ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE))
<BR><BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[7d3]"></a>touchgfx::LCD::realY(touchgfx::Rect const&, short, short, touchgfx::TextRotation)</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lcd.o(.text._ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE))
<BR><BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[d6]"></a>touchgfx::LCD::div255(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx3LCD6div255Et))
<BR><BR>[Called By]<UL><LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(unsigned short const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>
<BR>[Address Reference Count : 26]<UL><LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKjssiihhh)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKjssiihh)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA10writePixelEPtPKhPKtsiih)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA10writePixelEPtPKhS4_siih)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA10writePixelEPtPKhS4_siihhh)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA10writePixelEPtPKhPKjsiih)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA10writePixelEPtPKhPKjsii)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKhPKjsiihhh)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKjsiihh)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA10writePixelEPtPKtPKhsiih)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA10writePixelEPtPKtPKhsii)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA10writePixelEPtPKtsiih)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKtPKhsiihhh)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKtsiihh)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA10writePixelEPtPKjsiih)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA10writePixelEPtPKjsii)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKjsiihh)
</UL>
<P><STRONG><a name="[301]"></a>touchgfx::LCD::~LCD__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx3LCDD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::~LCD16bpp__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[73d]"></a>touchgfx::Edge::step(int)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lcd.o(.text._ZN8touchgfx4Edge4stepEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Edge::step(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Edge::step()
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[73e]"></a>touchgfx::Edge::step()</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, lcd.o(.text._ZN8touchgfx4Edge4stepEv))
<BR><BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Edge::step(int)
</UL>

<P><STRONG><a name="[d3]"></a>touchgfx::Edge::Edge(touchgfx::Gradients const&, touchgfx::Point3D const*, int, int)</STRONG> (Thumb, 308 bytes, Stack size 40 bytes, texturemaptypes.o(.text._ZN8touchgfx4EdgeC2ERKNS_9GradientsEPKNS_7Point3DEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::Edge::Edge(touchgfx::Gradients const&, touchgfx::Point3D const*, int, int) &rArr; touchgfx::floorDivMod(int, int, int&, int&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ceil28_4(int)
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::floorDivMod(int, int, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.text._ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht)
</UL>
<P><STRONG><a name="[94e]"></a>touchgfx::Edge::Edge__sub_object(touchgfx::Gradients const&, touchgfx::Point3D const*, int, int)</STRONG> (Thumb, 308 bytes, Stack size 40 bytes, texturemaptypes.o(.text._ZN8touchgfx4EdgeC2ERKNS_9GradientsEPKNS_7Point3DEii), UNUSED)

<P><STRONG><a name="[319]"></a>touchgfx::Font::~Font__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, constfont.o(.text._ZN8touchgfx4FontD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::~ConstFont__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[6a5]"></a>touchgfx::Rect::expandToFit(touchgfx::Rect const&)</STRONG> (Thumb, 128 bytes, Stack size 20 bytes, bitmap.o(.text._ZN8touchgfx4Rect11expandToFitERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::Rect::expandToFit(touchgfx::Rect const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getContainedArea() const
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[6e4]"></a>touchgfx::Rect::Rect__sub_object(short, short, short, short)</STRONG> (Thumb, 62 bytes, Stack size 28 bytes, frontendapplicationbase.o(.text._ZN8touchgfx4RectC2Essss))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::Rect::Rect__sub_object(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::getSolidRect() const
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[6e6]"></a>touchgfx::Rect::Rect__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx4RectC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Rect::Rect__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::PainterRGB565Bitmap__sub_object(touchgfx::Bitmap const&, unsigned char)
</UL>

<P><STRONG><a name="[704]"></a>touchgfx::Rect::operator&=(touchgfx::Rect const&)</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, lcd16bpp.o(.text._ZN8touchgfx4RectaNERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Rect::operator&=(touchgfx::Rect const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(touchgfx::Rect const&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(touchgfx::Rect const&) const
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&(touchgfx::Rect const&) const
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(touchgfx::Rect const&) const
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(touchgfx::Rect const&) const
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(touchgfx::Rect const&) const
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::draw(touchgfx::Rect const&) const
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(touchgfx::CanvasWidget const*, touchgfx::Rect const&)
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::invalidateGraphPointAt(short)
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::invalidateGraphPointAt(short)
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[6ed]"></a>touchgfx::View&lang;screenPresenter&rang;::bind(screenPresenter&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, frontendapplicationbase.o(.text._ZN8touchgfx4ViewI15screenPresenterE4bindERS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::View&lang;screenPresenter&rang;::bind(screenPresenter&)
</UL>
<BR>[Called By]<UL><LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[551]"></a>touchgfx::View&lang;screenPresenter&rang;::View__sub_object()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx4ViewI15screenPresenterEC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[296]"></a>touchgfx::View&lang;screenPresenter&rang;::~View__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx4ViewI15screenPresenterED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::View&lang;screenPresenter&rang;::~View__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;screenPresenter&rang;::~View__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
</UL>
<P><STRONG><a name="[295]"></a>touchgfx::View&lang;screenPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screenview.o(.text._ZN8touchgfx4ViewI15screenPresenterED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::View&lang;screenPresenter&rang;::~View__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::~Screen__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::~screenViewBase__sub_object()
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;screenPresenter&rang;::~View__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
</UL>
<P><STRONG><a name="[6f1]"></a>touchgfx::View&lang;Screen1Presenter&rang;::bind(Screen1Presenter&)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, frontendapplicationbase.o(.text._ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::View&lang;Screen1Presenter&rang;::bind(Screen1Presenter&)
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[52a]"></a>touchgfx::View&lang;Screen1Presenter&rang;::View__sub_object()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, screen1viewbase.o(.text._ZN8touchgfx4ViewI16Screen1PresenterEC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[299]"></a>touchgfx::View&lang;Screen1Presenter&rang;::~View__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, screen1viewbase.o(.text._ZN8touchgfx4ViewI16Screen1PresenterED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::View&lang;Screen1Presenter&rang;::~View__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;Screen1Presenter&rang;::~View__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
</UL>
<P><STRONG><a name="[298]"></a>touchgfx::View&lang;Screen1Presenter&rang;::~View__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screen1view.o(.text._ZN8touchgfx4ViewI16Screen1PresenterED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::View&lang;Screen1Presenter&rang;::~View__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::~Screen__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase__sub_object()
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;Screen1Presenter&rang;::~View__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
</UL>
<P><STRONG><a name="[77a]"></a>touchgfx::clzu(unsigned int)</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, utils.o(.text._ZN8touchgfx4clzuEj))
<BR><BR>[Called By]<UL><LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&)
</UL>

<P><STRONG><a name="[538]"></a>touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, screen1viewbase.o(.text._ZN8touchgfx5Color20getColorFrom24BitRGBEhhh), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getInstance()
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[180]"></a>touchgfx::Event::~Event__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx5EventD2Ev))
<BR>[Address Reference Count : 3]<UL><LI> screen.o(.rodata._ZTVN8touchgfx10ClickEventE)
<LI> screen.o(.rodata._ZTVN8touchgfx9DragEventE)
<LI> screen.o(.rodata._ZTVN8touchgfx12GestureEventE)
</UL>
<P><STRONG><a name="[d4]"></a>touchgfx::Image::setBitmap(touchgfx::Bitmap const&)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, image.o(.text._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::setBitmap(touchgfx::Bitmap const&) &rArr; touchgfx::Drawable::setWidthHeight(touchgfx::Bitmap const&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(touchgfx::Bitmap const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::setBackground(touchgfx::Bitmap const&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> slider.o(.text._ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[710]"></a>touchgfx::Image::Image__sub_object(touchgfx::Bitmap const&)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, abstractprogressindicator.o(.text._ZN8touchgfx5ImageC2ERKNS_6BitmapE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::Slider()
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::AbstractProgressIndicator()
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CacheableContainer::CachedImage::CachedImage__sub_object()
</UL>

<P><STRONG><a name="[29a]"></a>touchgfx::Image::~Image__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, image.o(.text._ZN8touchgfx5ImageD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Image::~Image__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[743]"></a>touchgfx::Bitmap::clearCache()</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, bitmap.o(.text._ZN8touchgfx6Bitmap10clearCacheEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Bitmap::clearCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned int, unsigned int)
</UL>

<P><STRONG><a name="[4d5]"></a>touchgfx::Bitmap::registerBitmapDatabase(touchgfx::Bitmap::BitmapData const*, unsigned short, unsigned short*, unsigned int, unsigned int)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bitmap.o(.text._ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::registerBitmapDatabase(touchgfx::Bitmap::BitmapData const*, unsigned short, unsigned short*, unsigned int, unsigned int) &rArr; touchgfx::Bitmap::setCache(unsigned short*, unsigned int, unsigned int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned int, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[72b]"></a>touchgfx::Bitmap::dynamicBitmapGetAddress(unsigned short)</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, bitmap.o(.text._ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)
</UL>

<P><STRONG><a name="[742]"></a>touchgfx::Bitmap::setCache(unsigned short*, unsigned int, unsigned int)</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, bitmap.o(.text._ZN8touchgfx6Bitmap8setCacheEPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::setCache(unsigned short*, unsigned int, unsigned int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::clearCache()
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(touchgfx::Bitmap::BitmapData const*, unsigned short, unsigned short*, unsigned int, unsigned int)
</UL>

<P><STRONG><a name="[53a]"></a>touchgfx::Bitmap::Bitmap__sub_object(unsigned short)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, screen1viewbase.o(.text._ZN8touchgfx6BitmapC2Et), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::PainterRGB565Bitmap__sub_object(touchgfx::Bitmap const&, unsigned char)
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[4eb]"></a>touchgfx::BlitOp::BlitOp__sub_object()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, stm32dma.o(.text._ZN8touchgfx6BlitOpC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::BlitOp::BlitOp__sub_object() &rArr; touchgfx::colortype::colortype__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::colortype__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::STM32H7DMA()
</UL>

<P><STRONG><a name="[23f]"></a>touchgfx::Button::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, button.o(.text._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Button::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&) &rArr; touchgfx::Drawable::setWidthHeight(touchgfx::Bitmap const&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(touchgfx::Bitmap const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[745]"></a>touchgfx::Canvas::close()</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, canvas.o(.text._ZN8touchgfx6Canvas5closeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = touchgfx::Canvas::close() &rArr; touchgfx::Rasterizer::lineTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::lineTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[746]"></a>touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, canvas.o(.text._ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Rasterizer::moveTo(int, int) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::isOutside(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::moveTo(int, int)
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::lineTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, touchgfx::AbstractDataGraph const*, short, short) const
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const
</UL>

<P><STRONG><a name="[748]"></a>touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, canvas.o(.text._ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Canvas::close() &rArr; touchgfx::Rasterizer::lineTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::isOutside(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::close()
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::moveTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, touchgfx::AbstractDataGraph const*, short, short) const
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::moveToAR2(touchgfx::Canvas&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const
</UL>

<P><STRONG><a name="[749]"></a>touchgfx::Canvas::render(unsigned char)</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, canvas.o(.text._ZN8touchgfx6Canvas6renderEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = touchgfx::Canvas::render(unsigned char) &rArr; bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(touchgfx::Renderer&) &rArr; touchgfx::Outline::getCells() &rArr; touchgfx::Outline::sortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::close()
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(touchgfx::Renderer&)
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[74a]"></a>touchgfx::Canvas::Canvas(touchgfx::CanvasWidget const*, touchgfx::Rect const&)</STRONG> (Thumb, 528 bytes, Stack size 48 bytes, canvas.o(.text._ZN8touchgfx6CanvasC2EPKNS_12CanvasWidgetERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016 + Unknown Stack Size
<LI>Call Chain = touchgfx::Canvas::Canvas(touchgfx::CanvasWidget const*, touchgfx::Rect const&) &rArr; touchgfx::Rasterizer::Rasterizer__sub_object() &rArr; _Unwind_Resume &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&=(touchgfx::Rect const&)
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::hasBuffer()
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::setScanlineWidth(unsigned int)
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::~Outline()
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RenderingBuffer::~RenderingBuffer()
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RenderingBuffer::RenderingBuffer()
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RenderingBuffer::attach(unsigned char*, unsigned char, unsigned int, unsigned int, int)
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::Rasterizer__sub_object()
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[94f]"></a>touchgfx::Canvas::Canvas__sub_object(touchgfx::CanvasWidget const*, touchgfx::Rect const&)</STRONG> (Thumb, 528 bytes, Stack size 48 bytes, canvas.o(.text._ZN8touchgfx6CanvasC2EPKNS_12CanvasWidgetERKNS_4RectE), UNUSED)

<P><STRONG><a name="[29c]"></a>touchgfx::Canvas::~Canvas__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, canvas.o(.text._ZN8touchgfx6CanvasD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Canvas::~Canvas__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> canvas.o(.rodata._ZTVN8touchgfx6CanvasE)
</UL>
<P><STRONG><a name="[750]"></a>touchgfx::Canvas::~Canvas()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, canvas.o(.text._ZN8touchgfx6CanvasD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = touchgfx::Canvas::~Canvas() &rArr; __clang_call_terminate &rArr; __cxa_begin_catch &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::~Outline()
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RenderingBuffer::~RenderingBuffer()
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::~Rasterizer__sub_object()
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[29b]"></a>touchgfx::Canvas::~Canvas__sub_object()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, canvas.o(.text._ZN8touchgfx6CanvasD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Canvas::~Canvas__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> canvas.o(.rodata._ZTVN8touchgfx6CanvasE)
</UL>
<P><STRONG><a name="[6db]"></a>void touchgfx::Circle::updateArcEnd&lang;touchgfx::CWRUtil::Q5&rang;(touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, circleprogress.o(.text._ZN8touchgfx6Circle12updateArcEndINS_7CWRUtil2Q5EEEvT_))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = void touchgfx::Circle::updateArcEnd&lang;touchgfx::CWRUtil::Q5&rang;(touchgfx::CWRUtil::Q5) &rArr; touchgfx::Circle::getMinimalRectForUpdatedEndAngle(touchgfx::CWRUtil::Q5 const&) const &rArr; touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAR(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRectForUpdatedEndAngle(touchgfx::CWRUtil::Q5 const&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setValue(int)
</UL>

<P><STRONG><a name="[6da]"></a>touchgfx::Circle::setCapPrecision(int)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, circle.o(.text._ZN8touchgfx6Circle15setCapPrecisionEi))
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setCapPrecision(int)
</UL>

<P><STRONG><a name="[6dd]"></a>touchgfx::Circle::Circle()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, circle.o(.text._ZN8touchgfx6CircleC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(short, short)
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::CanvasWidget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::CircleProgress()
</UL>

<P><STRONG><a name="[950]"></a>touchgfx::Circle::Circle__sub_object()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, circle.o(.text._ZN8touchgfx6CircleC2Ev), UNUSED)

<P><STRONG><a name="[29d]"></a>touchgfx::Circle::~Circle__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, circle.o(.text._ZN8touchgfx6CircleD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Circle::~Circle__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
</UL>
<P><STRONG><a name="[297]"></a>touchgfx::Screen::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6Screen11setupScreenEv))
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[525]"></a>touchgfx::Screen::bindTransition(touchgfx::Transition&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE))
<BR><BR>[Called By]<UL><LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
</UL>

<P><STRONG><a name="[fe]"></a>touchgfx::Screen::handleKeyEvent(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6Screen14handleKeyEventEh))
<BR>[Address Reference Count : 7]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
<LI> screenview.o(.rodata._ZTV10screenView)
<LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
<LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[139]"></a>touchgfx::Screen::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6Screen14tearDownScreenEv))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::tearDownScreen()
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::tearDownScreen()
</UL>
<BR>[Address Reference Count : 5]<UL><LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
<LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[f8]"></a>touchgfx::Screen::afterTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6Screen15afterTransitionEv))
<BR>[Address Reference Count : 7]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
<LI> screenview.o(.rodata._ZTV10screenView)
<LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
<LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[fb]"></a>touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)</STRONG> (Thumb, 236 bytes, Stack size 48 bytes, screen.o(.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1000 + Unknown Stack Size
<LI>Call Chain = touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&) &rArr; _Unwind_Resume &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 7]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
<LI> screenview.o(.rodata._ZTV10screenView)
<LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
<LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[fd]"></a>touchgfx::Screen::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6Screen15handleTickEventEv))
<BR>[Address Reference Count : 7]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
<LI> screenview.o(.rodata._ZTV10screenView)
<LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
<LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[fa]"></a>touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)</STRONG> (Thumb, 452 bytes, Stack size 96 bytes, screen.o(.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1048 + Unknown Stack Size
<LI>Call Chain = touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&) &rArr; _Unwind_Resume &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 7]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
<LI> screenview.o(.rodata._ZTV10screenView)
<LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
<LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[fc]"></a>touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, screen.o(.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 992 + Unknown Stack Size
<LI>Call Chain = touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&) &rArr; _Unwind_Resume &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 7]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
<LI> screenview.o(.rodata._ZTV10screenView)
<LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
<LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[54e]"></a>touchgfx::Screen::add(touchgfx::Drawable&)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, screen1viewbase.o(.text._ZN8touchgfx6Screen3addERNS_8DrawableE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[f6]"></a>touchgfx::Screen::draw(touchgfx::Rect&)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, screen.o(.text._ZN8touchgfx6Screen4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::Screen::draw(touchgfx::Rect&) &rArr; touchgfx::Screen::startSMOC(touchgfx::Rect const&) &rArr; touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(touchgfx::Rect const&) const
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&(touchgfx::Rect const&) const
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(touchgfx::Rect const&)
</UL>
<BR>[Address Reference Count : 7]<UL><LI> screen1view.o(.rodata._ZTV11Screen1View)
<LI> screenview.o(.rodata._ZTV10screenView)
<LI> screen1viewbase.o(.rodata._ZTV15Screen1ViewBase)
<LI> screenviewbase.o(.rodata._ZTV14screenViewBase)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> screenviewbase.o(.rodata._ZTVN8touchgfx4ViewI15screenPresenterEE)
<LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[6b2]"></a>touchgfx::Screen::draw()</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, screen.o(.text._ZN8touchgfx6Screen4drawEv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[755]"></a>touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)</STRONG> (Thumb, 476 bytes, Stack size 56 bytes, screen.o(.text._ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + In Cycle
<LI>Call Chain = touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&(touchgfx::Rect const&) const
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(touchgfx::Rect const&) const
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&=(touchgfx::Rect const&)
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator!=(touchgfx::Rect const&) const
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedVisibleRect()
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsY()
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsX()
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(touchgfx::Rect const&)
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[754]"></a>touchgfx::Screen::startSMOC(touchgfx::Rect const&)</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, screen.o(.text._ZN8touchgfx6Screen9startSMOCERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::Screen::startSMOC(touchgfx::Rect const&) &rArr; touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>

<P><STRONG><a name="[75a]"></a>touchgfx::Screen::Screen()</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, screen.o(.text._ZN8touchgfx6ScreenC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[740]"></a>touchgfx::Screen::Screen__sub_object()</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, screen.o(.text._ZN8touchgfx6ScreenC2Ev), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;Screen1Presenter&rang;::View__sub_object()
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;screenPresenter&rang;::View__sub_object()
</UL>

<P><STRONG><a name="[2a1]"></a>touchgfx::Screen::~Screen__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6ScreenD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Screen::~Screen__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[2a0]"></a>touchgfx::Screen::~Screen__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx6ScreenD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;Screen1Presenter&rang;::~View__sub_object()
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;screenPresenter&rang;::~View__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[53b]"></a>touchgfx::Slider::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&, touchgfx::Bitmap const&)</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, slider.o(.text._ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(touchgfx::Drawable const&)
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[2ad]"></a>touchgfx::Slider::setValueRange(int, int)</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, slider.o(.text._ZN8touchgfx6Slider13setValueRangeEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Slider::setValueRange(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::Slider()
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[2aa]"></a>touchgfx::Slider::setValueRange(int, int, int)</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, slider.o(.text._ZN8touchgfx6Slider13setValueRangeEiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Slider::setValueRange(int, int, int) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[2a5]"></a>touchgfx::Slider::handleDragEvent(touchgfx::DragEvent const&)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, slider.o(.text._ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Slider::handleDragEvent(touchgfx::DragEvent const&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[2a4]"></a>touchgfx::Slider::handleClickEvent(touchgfx::ClickEvent const&)</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, slider.o(.text._ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Slider::handleClickEvent(touchgfx::ClickEvent const&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[2a7]"></a>touchgfx::Slider::setupVerticalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, slider.o(.text._ZN8touchgfx6Slider19setupVerticalSliderEttttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::Slider::setupVerticalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(short, short)
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[2a6]"></a>touchgfx::Slider::setupHorizontalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, slider.o(.text._ZN8touchgfx6Slider21setupHorizontalSliderEttttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::Slider::setupHorizontalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(short, short)
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[2af]"></a>touchgfx::Slider::updateIndicatorPosition(short)</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, slider.o(.text._ZN8touchgfx6Slider23updateIndicatorPositionEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::Slider::updateIndicatorPosition(short) &rArr; touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveTo(short, short)
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[50c]"></a>touchgfx::Slider::getValue()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, screen1view.o(.text._ZN8touchgfx6Slider8getValueEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Slider::getValue()
</UL>
<BR>[Called By]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::UpDateHeartRateLine(int)
</UL>

<P><STRONG><a name="[2ae]"></a>touchgfx::Slider::setValue(int)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, slider.o(.text._ZN8touchgfx6Slider8setValueEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Slider::setValue(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[52d]"></a>touchgfx::Slider::Slider()</STRONG> (Thumb, 220 bytes, Stack size 40 bytes, slider.o(.text._ZN8touchgfx6SliderC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setValueRange(int, int)
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image__sub_object(touchgfx::Bitmap const&)
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[951]"></a>touchgfx::Slider::Slider__sub_object()</STRONG> (Thumb, 220 bytes, Stack size 40 bytes, slider.o(.text._ZN8touchgfx6SliderC2Ev), UNUSED)

<P><STRONG><a name="[2a3]"></a>touchgfx::Slider::~Slider__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, slider.o(.text._ZN8touchgfx6SliderD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Slider::~Slider__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[2a2]"></a>touchgfx::Slider::~Slider__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, slider.o(.text._ZN8touchgfx6SliderD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[6a6]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[6a9]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx6VectorINS_4RectELt8EE3addES1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[6ae]"></a>touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx6VectorIPNS_8DrawableELt32EE3addES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::add(touchgfx::Drawable*) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::registerTimerWidget(touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[6aa]"></a>touchgfx::Vector&lang;touchgfx::Drawable*, (unsigned short)32&rang;::removeAt(unsigned short)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, application.o(.text._ZN8touchgfx6VectorIPNS_8DrawableELt32EE8removeAtEt))
<BR><BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleTickEvent()
</UL>

<P><STRONG><a name="[1d9]"></a>touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE))
<BR>[Address Reference Count : 15]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[6e1]"></a>touchgfx::Widget::Widget__sub_object()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx6WidgetC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object() &rArr; touchgfx::Rect::Rect__sub_object(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::FullSolidRect__sub_object()
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea__sub_object()
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box__sub_object()
</UL>

<P><STRONG><a name="[2b6]"></a>touchgfx::Widget::~Widget__deallocating()</STRONG> (Thumb, 6 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZN8touchgfx6WidgetD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Widget::~Widget__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
</UL>
<P><STRONG><a name="[2b5]"></a>touchgfx::Widget::~Widget__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screen1view.o(.text._ZN8touchgfx6WidgetD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::~Drawable__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::~Box__sub_object()
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::~CanvasWidget__sub_object()
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::~FullSolidRect__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
</UL>
<P><STRONG><a name="[771]"></a>touchgfx::memset(void*, unsigned char, unsigned int)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, utils.o(.text._ZN8touchgfx6memsetEPvhj))
<BR><BR>[Called By]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, unsigned short const*, char const*, std::__va_list)
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, unsigned short const*, char const*, float const*)
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::addSpan(int, int, unsigned int, unsigned int)
</UL>

<P><STRONG><a name="[75c]"></a>touchgfx::muldiv(int, int, int)</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, utils.o(.text._ZN8touchgfx6muldivEiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::convertToGraphScale(int, int) const
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[75d]"></a>touchgfx::muldiv(int, int, int, int&)</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, utils.o(.text._ZN8touchgfx6muldivEiiiRi))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldiv_toQ5(int, int, int)
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int)
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator*(touchgfx::CWRUtil::Q15 const&) const
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[75f]"></a>touchgfx::CWRUtil::muldiv_toQ5(int, int, int)</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, abstractdatagraph.o(.text._ZN8touchgfx7CWRUtil11muldiv_toQ5Eiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::CWRUtil::muldiv_toQ5(int, int, int) &rArr; touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::valueToScreenYQ5(int) const
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::valueToScreenXQ5(int) const
</UL>

<P><STRONG><a name="[760]"></a>touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, circle.o(.text._ZN8touchgfx7CWRUtil4sineENS0_2Q5E))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::moveToAR2(touchgfx::Canvas&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAR(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[761]"></a>touchgfx::CWRUtil::sine(int)</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, circle.o(.text._ZN8touchgfx7CWRUtil4sineEi))
<BR><BR>[Called By]<UL><LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(int)
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[765]"></a>touchgfx::CWRUtil::isqrt(unsigned int)</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, graphelements.o(.text._ZN8touchgfx7CWRUtil5isqrtEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::CWRUtil::isqrt(unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sqrtQ10(touchgfx::CWRUtil::Q10)
</UL>

<P><STRONG><a name="[762]"></a>touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, circle.o(.text._ZN8touchgfx7CWRUtil6cosineENS0_2Q5E))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::moveToAR2(touchgfx::Canvas&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAR(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const
</UL>

<P><STRONG><a name="[763]"></a>touchgfx::CWRUtil::cosine(int)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, circle.o(.text._ZN8touchgfx7CWRUtil6cosineEi))
<BR><BR>[Calls]<UL><LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[764]"></a>touchgfx::CWRUtil::sqrtQ10(touchgfx::CWRUtil::Q10)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphelements.o(.text._ZN8touchgfx7CWRUtil7sqrtQ10ENS0_3Q10E))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::CWRUtil::sqrtQ10(touchgfx::CWRUtil::Q10) &rArr; touchgfx::CWRUtil::isqrt(unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::isqrt(unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, touchgfx::AbstractDataGraph const*, short, short) const
</UL>

<P><STRONG><a name="[dd]"></a>touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx7CWRUtil8muldivQ5ENS0_2Q5ES1_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::xScreenRangeToIndexRange(short, short, short&, short&) const
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldiv_toQ5(int, int, int)
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, touchgfx::AbstractDataGraph const*, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.text._ZNK8touchgfx16GraphElementDots16drawCanvasWidgetERKNS_4RectE)
</UL>
<P><STRONG><a name="[68f]"></a>touchgfx::MVPHeap::MVPHeap__sub_object(touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::MVPApplication&)</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx7MVPHeapC2ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::MVPHeap::MVPHeap__sub_object(touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::MVPApplication&)
</UL>
<BR>[Called By]<UL><LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::FrontendHeapBase__sub_object(touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, touchgfx::AbstractPartition&, FrontendApplication&)
</UL>

<P><STRONG><a name="[2b8]"></a>touchgfx::MVPHeap::~MVPHeap__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx7MVPHeapD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::MVPHeap::~MVPHeap__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPHeap::~MVPHeap__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx7MVPHeapE)
</UL>
<P><STRONG><a name="[2b7]"></a>touchgfx::MVPHeap::~MVPHeap__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx7MVPHeapD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::MVPHeap::~MVPHeap__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPHeap::~MVPHeap__deallocating()
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::~FrontendHeapBase__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx7MVPHeapE)
</UL>
<P><STRONG><a name="[76b]"></a>touchgfx::Outline::addCurCell()</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, outline.o(.text._ZN8touchgfx7Outline10addCurCellEv))
<BR><BR>[Called By]<UL><LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::getCells()
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCell(int, int)
</UL>

<P><STRONG><a name="[766]"></a>touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned int)</STRONG> (Thumb, 340 bytes, Stack size 360 bytes, outline.o(.text._ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::lessThan(touchgfx::Cell const*, touchgfx::Cell const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::sortCells()
</UL>

<P><STRONG><a name="[768]"></a>touchgfx::Outline::renderLine(int, int, int, int)</STRONG> (Thumb, 520 bytes, Stack size 88 bytes, outline.o(.text._ZN8touchgfx7Outline10renderLineEiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderScanline(int, int, int, int, int)
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
</UL>

<P><STRONG><a name="[76a]"></a>touchgfx::Outline::setCurCell(int, int)</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, outline.o(.text._ZN8touchgfx7Outline10setCurCellEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::addCurCell()
</UL>
<BR>[Called By]<UL><LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderScanline(int, int, int, int, int)
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
</UL>

<P><STRONG><a name="[769]"></a>touchgfx::Outline::renderScanline(int, int, int, int, int)</STRONG> (Thumb, 330 bytes, Stack size 72 bytes, outline.o(.text._ZN8touchgfx7Outline14renderScanlineEiiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
</UL>

<P><STRONG><a name="[74d]"></a>touchgfx::Outline::reset()</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, outline.o(.text._ZN8touchgfx7Outline5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Outline::reset()
</UL>
<BR>[Calls]<UL><LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(touchgfx::CanvasWidget const*, touchgfx::Rect const&)
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::Outline()
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
</UL>

<P><STRONG><a name="[695]"></a>touchgfx::Outline::lineTo(int, int)</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, outline.o(.text._ZN8touchgfx7Outline6lineToEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::getCells()
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::lineTo(int, int)
</UL>

<P><STRONG><a name="[697]"></a>touchgfx::Outline::moveTo(int, int)</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, outline.o(.text._ZN8touchgfx7Outline6moveToEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::moveTo(int, int)
</UL>

<P><STRONG><a name="[699]"></a>touchgfx::Outline::getCells()</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, outline.o(.text._ZN8touchgfx7Outline8getCellsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = touchgfx::Outline::getCells() &rArr; touchgfx::Outline::sortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::sortCells()
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::addCurCell()
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(touchgfx::Renderer&)
</UL>

<P><STRONG><a name="[76e]"></a>touchgfx::Outline::sortCells()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, outline.o(.text._ZN8touchgfx7Outline9sortCellsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = touchgfx::Outline::sortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::getCells()
</UL>

<P><STRONG><a name="[6a0]"></a>touchgfx::Outline::Outline()</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, outline.o(.text._ZN8touchgfx7OutlineC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Outline::Outline() &rArr; touchgfx::Outline::reset()
</UL>
<BR>[Calls]<UL><LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::Rasterizer__sub_object()
</UL>

<P><STRONG><a name="[952]"></a>touchgfx::Outline::Outline__sub_object()</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, outline.o(.text._ZN8touchgfx7OutlineC2Ev), UNUSED)

<P><STRONG><a name="[2ba]"></a>touchgfx::Outline::~Outline__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, outline.o(.text._ZN8touchgfx7OutlineD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Outline::~Outline__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> outline.o(.rodata._ZTVN8touchgfx7OutlineE)
</UL>
<P><STRONG><a name="[6a2]"></a>touchgfx::Outline::~Outline()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, outline.o(.text._ZN8touchgfx7OutlineD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas()
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(touchgfx::CanvasWidget const*, touchgfx::Rect const&)
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::~Rasterizer__sub_object()
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::Rasterizer__sub_object()
</UL>

<P><STRONG><a name="[2b9]"></a>touchgfx::Outline::~Outline__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, outline.o(.text._ZN8touchgfx7OutlineD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> outline.o(.rodata._ZTVN8touchgfx7OutlineE)
</UL>
<P><STRONG><a name="[774]"></a>touchgfx::Unicode::composeString(unsigned short const*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)</STRONG> (Thumb, 370 bytes, Stack size 32 bytes, unicode.o(.text._ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Unicode::composeString(unsigned short const*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, unsigned short const*, char const*, std::__va_list)
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, unsigned short const*, char const*, float const*)
</UL>

<P><STRONG><a name="[512]"></a>touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, char const*, float)</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, screenview.o(.text._ZN8touchgfx7Unicode13snprintfFloatEPttPKcf))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, char const*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, char const*, float const*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, unsigned short const*, char const*, float const*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, char const*, float const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::UpDateTemNum(int)
</UL>

<P><STRONG><a name="[76f]"></a>touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, char const*, float const*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, unicode.o(.text._ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, char const*, float const*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, unsigned short const*, char const*, float const*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, unsigned short const*, char const*, float const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, char const*, float)
</UL>

<P><STRONG><a name="[770]"></a>touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, unsigned short const*, char const*, float const*)</STRONG> (Thumb, 1052 bytes, Stack size 360 bytes, unicode.o(.text._ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, unsigned short const*, char const*, float const*) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::memset(void*, unsigned char, unsigned int)
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::parseFlagsAndPrecision(unsigned short const*&, char const*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::composeString(unsigned short const*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, char const*, float const*)
</UL>

<P><STRONG><a name="[772]"></a>touchgfx::Unicode::parseFlagsAndPrecision(unsigned short const*&, char const*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)</STRONG> (Thumb, 438 bytes, Stack size 48 bytes, unicode.o(.text._ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::Unicode::parseFlagsAndPrecision(unsigned short const*&, char const*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::nextChar(unsigned short const*&, char const*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, unsigned short const*, char const*, std::__va_list)
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, unsigned short const*, char const*, float const*)
</UL>

<P><STRONG><a name="[773]"></a>touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)</STRONG> (Thumb, 102 bytes, Stack size 56 bytes, unicode.o(.text._ZN8touchgfx7Unicode4itoaEiPtti))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, char const*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, unsigned short const*, char const*, std::__va_list)
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, unsigned short const*, char const*, float const*)
</UL>

<P><STRONG><a name="[777]"></a>touchgfx::Unicode::utoa(unsigned int, unsigned short*, unsigned short, int)</STRONG> (Thumb, 80 bytes, Stack size 56 bytes, unicode.o(.text._ZN8touchgfx7Unicode4utoaEjPtti), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, char const*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, unsigned short const*, char const*, std::__va_list)
</UL>

<P><STRONG><a name="[776]"></a>touchgfx::Unicode::strncpy(unsigned short*, char const*, unsigned short)</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, unicode.o(.text._ZN8touchgfx7Unicode7strncpyEPtPKct))
<BR><BR>[Called By]<UL><LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::utoa(unsigned int, unsigned short*, unsigned short, int)
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)
</UL>

<P><STRONG><a name="[775]"></a>touchgfx::Unicode::nextChar(unsigned short const*&, char const*&)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, unicode.o(.text._ZN8touchgfx7Unicode8nextCharERPKtRPKc))
<BR><BR>[Called By]<UL><LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::parseFlagsAndPrecision(unsigned short const*&, char const*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>

<P><STRONG><a name="[558]"></a>touchgfx::Unicode::snprintf(unsigned short*, unsigned short, char const*, ...)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, unicode.o(.text._ZN8touchgfx7Unicode8snprintfEPttPKcz), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, char const*, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[778]"></a>touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, char const*, std::__va_list)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, unicode.o(.text._ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, unsigned short const*, char const*, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, char const*, ...)
</UL>

<P><STRONG><a name="[779]"></a>touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, unsigned short const*, char const*, std::__va_list)</STRONG> (Thumb, 936 bytes, Stack size 184 bytes, unicode.o(.text._ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::memset(void*, unsigned char, unsigned int)
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::utoa(unsigned int, unsigned short*, unsigned short, int)
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::parseFlagsAndPrecision(unsigned short const*&, char const*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::composeString(unsigned short const*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, char const*, std::__va_list)
</UL>

<P><STRONG><a name="[75e]"></a>touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&)</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, utils.o(.text._ZN8touchgfx7muldivuEjjjRj))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&)
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::clzu(unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&)
</UL>

<P><STRONG><a name="[2bd]"></a>touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::execute(touchgfx::AbstractButton const&)</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::execute(touchgfx::AbstractButton const&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[556]"></a>touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::Callback__sub_object(screenViewBase*, void (screenViewBase::*)(touchgfx::AbstractButton const&))</STRONG> (Thumb, 72 bytes, Stack size 48 bytes, screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEC2EPS1_MS1_FvS4_E), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GenericCallback&lang;touchgfx::AbstractButton const&, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[2bc]"></a>touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__deallocating() &rArr; touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__sub_object() &rArr; touchgfx::GenericCallback&lang;touchgfx::AbstractButton const&, void, void&rang;::~GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[2bb]"></a>touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screenview.o(.text._ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__sub_object() &rArr; touchgfx::GenericCallback&lang;touchgfx::AbstractButton const&, void, void&rang;::~GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GenericCallback&lang;touchgfx::AbstractButton const&, void, void&rang;::~GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::~screenViewBase__sub_object()
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[2c1]"></a>touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::execute(touchgfx::AbstractButton const&)</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, screen1viewbase.o(.text._ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::execute(touchgfx::AbstractButton const&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[536]"></a>touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::Callback__sub_object(Screen1ViewBase*, void (Screen1ViewBase::*)(touchgfx::AbstractButton const&))</STRONG> (Thumb, 72 bytes, Stack size 48 bytes, screen1viewbase.o(.text._ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvEC2EPS1_MS1_FvS4_E), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GenericCallback&lang;touchgfx::AbstractButton const&, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[2c0]"></a>touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, screen1viewbase.o(.text._ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__deallocating() &rArr; touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__sub_object() &rArr; touchgfx::GenericCallback&lang;touchgfx::AbstractButton const&, void, void&rang;::~GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[2bf]"></a>touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screen1view.o(.text._ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__sub_object() &rArr; touchgfx::GenericCallback&lang;touchgfx::AbstractButton const&, void, void&rang;::~GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GenericCallback&lang;touchgfx::AbstractButton const&, void, void&rang;::~GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase__sub_object()
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[2c5]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[51b]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)())</STRONG> (Thumb, 72 bytes, Stack size 48 bytes, frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC2EPS1_MS1_FvvE))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void (FrontendApplicationBase::*)()) &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoscreenScreenNoTransition()
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEast()
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoscreenScreenWipeTransitionEast()
</UL>

<P><STRONG><a name="[517]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object()</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GenericCallback&lang;void, void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[2c4]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__deallocating() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object() &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[2c3]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__sub_object() &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GenericCallback&lang;void, void, void&rang;::~GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase__sub_object()
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoscreenScreenNoTransition()
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__deallocating()
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEast()
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoscreenScreenWipeTransitionEast()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[51c]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator=(touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&&)</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, frontendapplicationbase.o(.text._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator=(touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&&) &rArr; touchgfx::GenericCallback&lang;void, void, void&rang;::operator=(touchgfx::GenericCallback&lang;void, void, void&rang; const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GenericCallback&lang;void, void, void&rang;::operator=(touchgfx::GenericCallback&lang;void, void, void&rang; const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoscreenScreenNoTransition()
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEast()
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoscreenScreenWipeTransitionEast()
</UL>

<P><STRONG><a name="[d0]"></a>touchgfx::Drawable::setPosition(short, short, short, short)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, abstractdatagraph.o(.text._ZN8touchgfx8Drawable11setPositionEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Drawable::setPosition(short, short, short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::WipeTransition__sub_object(unsigned char)
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::addGraphElement(touchgfx::AbstractGraphElement&)
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::CircleProgress()
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setProgressIndicatorPosition(short, short, short, short)
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::setProgressIndicatorPosition(short, short, short, short)
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::updateAreasPosition()
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CacheableContainer::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::updateIndicatorPosition(short)
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.text._ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss)
</UL>
<P><STRONG><a name="[19f]"></a>touchgfx::Drawable::moveRelative(short, short)</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, drawable.o(.text._ZN8touchgfx8Drawable12moveRelativeEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Drawable::moveRelative(short, short) &rArr; touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Address Reference Count : 25]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[757]"></a>touchgfx::Drawable::getCachedAbsX()</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, screen.o(.text._ZN8touchgfx8Drawable13getCachedAbsXEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::getCachedAbsX() &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[758]"></a>touchgfx::Drawable::getCachedAbsY()</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, screen.o(.text._ZN8touchgfx8Drawable13getCachedAbsYEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::getCachedAbsY() &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[1d8]"></a>touchgfx::Drawable::getFirstChild()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx8Drawable13getFirstChildEv))
<BR>[Address Reference Count : 16]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[741]"></a>touchgfx::Drawable::setWidthHeight(touchgfx::Bitmap const&)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, button.o(.text._ZN8touchgfx8Drawable14setWidthHeightERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Drawable::setWidthHeight(touchgfx::Bitmap const&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(short, short)
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&)
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(touchgfx::Bitmap const&)
</UL>

<P><STRONG><a name="[723]"></a>touchgfx::Drawable::setWidthHeight(touchgfx::Drawable const&)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZN8touchgfx8Drawable14setWidthHeightERKS0_))
<BR><BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&, touchgfx::Bitmap const&)
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::setBackground(touchgfx::Bitmap const&)
</UL>

<P><STRONG><a name="[753]"></a>touchgfx::Drawable::setWidthHeight(short, short)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, abstractdatagraph.o(.text._ZN8touchgfx8Drawable14setWidthHeightEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setupHorizontalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(touchgfx::Bitmap const&)
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::Circle()
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setupVerticalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[1de]"></a>touchgfx::Drawable::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_))
<BR>[Address Reference Count : 15]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[1dd]"></a>touchgfx::Drawable::handleDragEvent(touchgfx::DragEvent const&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 20]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[19e]"></a>touchgfx::Drawable::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx8Drawable15handleTickEventEv))
<BR>[Address Reference Count : 23]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[1dc]"></a>touchgfx::Drawable::handleClickEvent(touchgfx::ClickEvent const&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 19]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[19c]"></a>touchgfx::Drawable::handleGestureEvent(touchgfx::GestureEvent const&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 25]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[19a]"></a>touchgfx::Drawable::childGeometryChanged()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx8Drawable20childGeometryChangedEv))
<BR>[Address Reference Count : 25]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[756]"></a>touchgfx::Drawable::getCachedVisibleRect()</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, screen.o(.text._ZN8touchgfx8Drawable20getCachedVisibleRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::getCachedVisibleRect()
</UL>
<BR>[Called By]<UL><LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[192]"></a>touchgfx::Drawable::getSolidRectAbsolute()</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, drawable.o(.text._ZN8touchgfx8Drawable20getSolidRectAbsoluteEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::getSolidRectAbsolute()
</UL>
<BR>[Address Reference Count : 25]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[196]"></a>touchgfx::Drawable::setX(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setXEs))
<BR>[Address Reference Count : 25]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[197]"></a>touchgfx::Drawable::setY(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx8Drawable4setYEs))
<BR>[Address Reference Count : 25]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[d5]"></a>touchgfx::Drawable::setXY(short, short)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, abstractdatagraph.o(.text._ZN8touchgfx8Drawable5setXYEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveRelative(short, short)
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::AbstractProgressIndicator()
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setupVerticalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.text._ZN8touchgfx6Slider21setupHorizontalSliderEttttt)
</UL>
<P><STRONG><a name="[1a0]"></a>touchgfx::Drawable::moveTo(short, short)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx8Drawable6moveToEss))
<BR><BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::updateIndicatorPosition(short)
</UL>
<BR>[Address Reference Count : 25]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[1da]"></a>touchgfx::Drawable::setWidth(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZN8touchgfx8Drawable8setWidthEs))
<BR><BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()
</UL>
<BR>[Address Reference Count : 21]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[1db]"></a>touchgfx::Drawable::setHeight(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZN8touchgfx8Drawable9setHeightEs))
<BR>[Address Reference Count : 21]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[75b]"></a>touchgfx::Drawable::Drawable__sub_object()</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, frontendapplicationbase.o(.text._ZN8touchgfx8DrawableC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = touchgfx::Drawable::Drawable__sub_object() &rArr; touchgfx::Rect::Rect__sub_object(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect__sub_object()
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect__sub_object(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::Container__sub_object()
</UL>

<P><STRONG><a name="[2c7]"></a>touchgfx::Drawable::~Drawable__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, drawable.o(.text._ZN8touchgfx8DrawableD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
</UL>
<P><STRONG><a name="[1d3]"></a>touchgfx::Drawable::~Drawable__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, box.o(.text._ZN8touchgfx8DrawableD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::~Container__sub_object()
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Address Reference Count : 12]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[731]"></a>touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, gestures.o(.text._ZN8touchgfx8Gestures17registerDragEventEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 992 + Unknown Stack Size
<LI>Call Chain = touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short) &rArr; _Unwind_Resume &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[732]"></a>touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, gestures.o(.text._ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 992 + Unknown Stack Size
<LI>Call Chain = touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short) &rArr; _Unwind_Resume &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::noTouch()
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[72a]"></a>touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gestures.o(.text._ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)
</UL>

<P><STRONG><a name="[72e]"></a>touchgfx::Gestures::tick()</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gestures.o(.text._ZN8touchgfx8Gestures4tickEv))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
</UL>

<P><STRONG><a name="[77e]"></a>touchgfx::Gestures::DragState::DragState__sub_object()</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx8Gestures9DragStateC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Gestures::DragState::DragState__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::Gestures__sub_object()
</UL>

<P><STRONG><a name="[734]"></a>touchgfx::Gestures::Gestures__sub_object()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx8GesturesC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::Gestures::Gestures__sub_object() &rArr; touchgfx::Gestures::DragState::DragState__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::DragState::DragState__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[77f]"></a>touchgfx::LCD16bpp::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; touchgfx::LCD16bpp::blitCopyL8_RGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
</UL>

<P><STRONG><a name="[78a]"></a>touchgfx::LCD16bpp::div255_888(unsigned int, unsigned char)</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp10div255_888Ejh))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_888_FFcheck(unsigned int, unsigned char)
</UL>

<P><STRONG><a name="[7a5]"></a>touchgfx::LCD16bpp::getColorFromRGB(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp15getColorFromRGBEhhh))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char) const
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned short const*, unsigned int, short, unsigned char, unsigned char)
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned int, short, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned char)
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[783]"></a>touchgfx::LCD16bpp::blitCopyARGB8888(unsigned int const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 476 bytes, Stack size 104 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKjRKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::LCD16bpp::blitCopyARGB8888(unsigned int const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
</UL>

<P><STRONG><a name="[780]"></a>touchgfx::LCD16bpp::blitCopyL8_RGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 552 bytes, Stack size 120 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_RGB565(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>

<P><STRONG><a name="[782]"></a>touchgfx::LCD16bpp::blitCopyL8_RGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 600 bytes, Stack size 128 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_RGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>

<P><STRONG><a name="[303]"></a>touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)</STRONG> (Thumb, 524 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool) &rArr; touchgfx::LCD16bpp::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; touchgfx::LCD16bpp::blitCopyL8_RGB888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::hasTransparentPixels() const
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getExtraData() const
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(unsigned short const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(unsigned int const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&=(touchgfx::Rect const&)
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[787]"></a>touchgfx::LCD16bpp::div255_565_FFcheck(unsigned short, unsigned char)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp18div255_565_FFcheckEth))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::div255_565_FFcheck(unsigned short, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div31rb(unsigned short, unsigned char)
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div31g(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[d9]"></a>touchgfx::LCD16bpp::div255_888_FFcheck(unsigned int, unsigned char)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp18div255_888_FFcheckEjh))
<BR><BR>[Calls]<UL><LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_888(unsigned int, unsigned char)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKjssiihhh)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKjssiihh)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKjsiihh)
</UL>
<P><STRONG><a name="[781]"></a>touchgfx::LCD16bpp::blitCopyL8_ARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 516 bytes, Stack size 120 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_ARGB8888(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(unsigned char const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
</UL>

<P><STRONG><a name="[78b]"></a>touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp20bilinearInterpolate8Ehhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[d8]"></a>touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp20bilinearInterpolate8Ehhhhhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned short const*, unsigned int, short, unsigned char, unsigned char)
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned int, short, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh)
<LI> lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh)
</UL>
<P><STRONG><a name="[78c]"></a>touchgfx::LCD16bpp::getFramebufferStride()</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp20getFramebufferStrideEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::getFramebufferStride() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::framebufferStride() const
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[786]"></a>touchgfx::LCD16bpp::blitCopyAlphaPerPixel(unsigned short const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)</STRONG> (Thumb, 648 bytes, Stack size 88 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::LCD16bpp::blitCopyAlphaPerPixel(unsigned short const*, unsigned char const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::div255(unsigned short)
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
</UL>

<P><STRONG><a name="[78d]"></a>touchgfx::LCD16bpp::enableTextureMapperA4()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[790]"></a>touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned char)</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp22bilinearInterpolate565Etth))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[791]"></a>touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp22bilinearInterpolate565Etttthh))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned short const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, short, int, int, unsigned char, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[792]"></a>touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char)</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp22bilinearInterpolate888Ejjjjhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char)
</UL>

<P><STRONG><a name="[519]"></a>touchgfx::LCD16bpp::enableTextureMapperAll()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888()
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4()
</UL>
<BR>[Called By]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[797]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565()</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
</UL>

<P><STRONG><a name="[793]"></a>touchgfx::LCD16bpp::enableTextureMapperARGB8888()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[7a6]"></a>touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short)</STRONG> (Thumb, 150 bytes, Stack size 28 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp28DrawTextureMapScanLineBase1627overrunCheckNearestNeighborERPtRiS4_S4_iiss))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7ac]"></a>touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short)</STRONG> (Thumb, 174 bytes, Stack size 36 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp28DrawTextureMapScanLineBase1633overrunCheckBilinearInterpolationERPtRiS4_S4_iiss))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[795]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[796]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[310]"></a>touchgfx::LCD16bpp::getTextureMapperDrawScanLine(touchgfx::TextureSurface const&, unsigned short, unsigned char)</STRONG> (Thumb, 284 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[306]"></a>touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)</STRONG> (Thumb, 696 bytes, Stack size 80 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short) &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::includes(touchgfx::Rect const&) const
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&=(touchgfx::Rect const&)
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[794]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[7a4]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char, unsigned char)</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA10writePixelEPthh))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2ca]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 420 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char, unsigned char)
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getAlphaFromA4(unsigned short const*, unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[2c9]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[7a9]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned char)</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA10writePixelEPth))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2cc]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 404 bytes, Stack size 144 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned char)
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getAlphaFromA4(unsigned short const*, unsigned int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[2cb]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[78f]"></a>touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4()
</UL>

<P><STRONG><a name="[7aa]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned int, short, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA10writePixelEPtPKtjshhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned int, short, unsigned char, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getAlphaFromA4(unsigned short const*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7ab]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 372 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getAlphaFromA4(unsigned short const*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2ce]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 508 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned int, short, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[2cd]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[7ad]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned short const*, unsigned int, short, unsigned char, unsigned char)</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA10writePixelEPtPKtjshh))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned short const*, unsigned int, short, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getAlphaFromA4(unsigned short const*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7ae]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 360 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getAlphaFromA4(unsigned short const*, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2d0]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 496 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned short const*, unsigned int, short, unsigned char, unsigned char)
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[2cf]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[78e]"></a>touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4()
</UL>

<P><STRONG><a name="[79d]"></a>touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888()
</UL>

<P><STRONG><a name="[79f]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()
</UL>

<P><STRONG><a name="[7a1]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()
</UL>

<P><STRONG><a name="[7af]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned short const*, short, int, int, unsigned char)</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA10writePixelEPtPKtsiih))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned short const*, short, int, int, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2d2]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 390 bytes, Stack size 144 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned short const*, short, int, int, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned short const*, short, int, int, unsigned char)
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[2d1]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[7a3]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()
</UL>

<P><STRONG><a name="[2d4]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 378 bytes, Stack size 144 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[2d3]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[799]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
</UL>

<P><STRONG><a name="[7b0]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char)</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA10writePixelEPtPKhPKtsiih))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2d6]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 400 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char)
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[2d5]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[7b1]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char)</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA10writePixelEPtPKhS4_siih))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2d8]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 400 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char)
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[2d7]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[7b2]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned short const*, unsigned char const*, short, int, int, unsigned char)</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA10writePixelEPtPKtPKhsiih))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned short const*, unsigned char const*, short, int, int, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2da]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 398 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned short const*, unsigned char const*, short, int, int, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned short const*, unsigned char const*, short, int, int, unsigned char)
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[2d9]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[79c]"></a>touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888()
</UL>

<P><STRONG><a name="[79e]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565()
</UL>

<P><STRONG><a name="[7a0]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888()
</UL>

<P><STRONG><a name="[7b3]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char)</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA10writePixelEPtPKjsiih))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2dc]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 390 bytes, Stack size 144 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char)
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[2db]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[2de]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 372 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[2dd]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[7b4]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int)</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA10writePixelEPtPKhS4_sii))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2e0]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 392 bytes, Stack size 144 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int)
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[2df]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[7b5]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned short const*, unsigned char const*, short, int, int)</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA10writePixelEPtPKtPKhsii))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned short const*, unsigned char const*, short, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2e2]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 390 bytes, Stack size 144 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned short const*, unsigned char const*, short, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned short const*, unsigned char const*, short, int, int)
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[2e1]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[79b]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
</UL>

<P><STRONG><a name="[7b6]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA10writePixelEPtPKtsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7b7]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 284 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2e4]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 482 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[2e3]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[7a2]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888()
</UL>

<P><STRONG><a name="[7b8]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned int const*, short, int, int)</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA10writePixelEPtPKjsii))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned int const*, short, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2e6]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 388 bytes, Stack size 144 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned int const*, short, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned int const*, short, int, int)
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[2e5]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[7b9]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char)</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA10writePixelEPtPKhPKjsiih))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2e8]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 400 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char)
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[2e7]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[7ba]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned short const*, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA10writePixelEPtPKtsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned short const*, short, int, int, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7bb]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2ea]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 468 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned short const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned short const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[2e9]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[798]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
</UL>

<P><STRONG><a name="[7bc]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA10writePixelEPtPKhPKtsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7bd]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 292 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2ec]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 500 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[2eb]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[7be]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 280 bytes, Stack size 56 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA10writePixelEPtPKhS4_siihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7bf]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 372 bytes, Stack size 72 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2ee]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 500 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[2ed]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[7c0]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 336 bytes, Stack size 56 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKtPKhsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned char)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char)
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565_FFcheck(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7c1]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 500 bytes, Stack size 56 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565_FFcheck(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2f0]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 496 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned short const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned short const*, unsigned char const*, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[2ef]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[7c2]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int)</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA10writePixelEPtPKhPKjsii))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2f2]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 392 bytes, Stack size 144 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int)
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[2f1]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[7c3]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 296 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKjsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7c4]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 408 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKjssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2f4]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 482 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[2f3]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[7c5]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKtsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7c6]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2f6]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 486 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[2f5]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[7c7]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 192 bytes, Stack size 48 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA10writePixelEPtPKhS4_siihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7c8]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 296 bytes, Stack size 56 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2f8]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 486 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned char const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned char const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[2f7]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[7c9]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 300 bytes, Stack size 56 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKtsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned char)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char)
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565_FFcheck(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7ca]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 484 bytes, Stack size 56 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565_FFcheck(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2fa]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 482 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned short const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned short const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[2f9]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[79a]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_release
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565()
</UL>

<P><STRONG><a name="[7cb]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 304 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKjsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7cc]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 372 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKjssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2fc]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 468 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned int const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned int const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[2fb]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[7cd]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 320 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKhPKjsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7ce]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 400 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKjssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[2fe]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 500 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char, unsigned char)
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[2fd]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[7cf]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 292 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKjsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[7d0]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char)</STRONG> (Thumb, 380 bytes, Stack size 64 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKjssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[300]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float)</STRONG> (Thumb, 486 bytes, Stack size 152 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, touchgfx::DrawingSurface const&, int, int, touchgfx::TextureSurface const&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char) &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, unsigned char const*, unsigned int const*, short, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, unsigned char const*, unsigned int const*, short, int, int, unsigned char, unsigned char)
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short)
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[2ff]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[789]"></a>touchgfx::LCD16bpp::div31g(unsigned short, unsigned char)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp6div31gEth))
<BR><BR>[Called By]<UL><LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565_FFcheck(unsigned short, unsigned char)
</UL>

<P><STRONG><a name="[788]"></a>touchgfx::LCD16bpp::div31rb(unsigned short, unsigned char)</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp7div31rbEth))
<BR><BR>[Called By]<UL><LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565_FFcheck(unsigned short, unsigned char)
</UL>

<P><STRONG><a name="[305]"></a>touchgfx::LCD16bpp::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::blitCopy(unsigned char const*, touchgfx::Bitmap::BitmapFormat, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool) &rArr; touchgfx::LCD16bpp::blitCopyARGB8888(unsigned int const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(unsigned int const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char)
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[304]"></a>touchgfx::LCD16bpp::blitCopy(unsigned short const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool)</STRONG> (Thumb, 484 bytes, Stack size 104 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::LCD16bpp::blitCopy(unsigned short const*, touchgfx::Rect const&, touchgfx::Rect const&, unsigned char, bool) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, touchgfx::Rect const&)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[307]"></a>touchgfx::LCD16bpp::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char)</STRONG> (Thumb, 588 bytes, Stack size 88 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::fillRect(touchgfx::Rect const&, touchgfx::colortype, unsigned char) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[7d1]"></a>touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation) &rArr; touchgfx::LCD16bpp::getFramebufferStride() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getFramebufferStride()
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[312]"></a>touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</STRONG> (Thumb, 1076 bytes, Stack size 144 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation) &rArr; touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation) &rArr; touchgfx::LCD16bpp::getFramebufferStride() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realY(touchgfx::Rect const&, short, short, touchgfx::TextRotation)
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realX(touchgfx::Rect const&, short, short, touchgfx::TextRotation)
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[7d5]"></a>touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation) &rArr; touchgfx::LCD16bpp::getFramebufferStride() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getFramebufferStride()
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, touchgfx::Rect const&, touchgfx::GlyphNode const*, unsigned char const*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[4ce]"></a>touchgfx::LCD16bpp::LCD16bpp()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bppC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::LCD16bpp::LCD16bpp() &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.2
</UL>

<P><STRONG><a name="[953]"></a>touchgfx::LCD16bpp::LCD16bpp__sub_object()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bppC2Ev), UNUSED)

<P><STRONG><a name="[302]"></a>touchgfx::LCD16bpp::~LCD16bpp__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZN8touchgfx8LCD16bppD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::~LCD16bpp__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[be]"></a>touchgfx::LCD16bpp::~LCD16bpp__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx8LCD16bppD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::~LCD16bpp__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::~LCD__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.text)
</UL>
<P><STRONG><a name="[69c]"></a>touchgfx::Renderer::render(touchgfx::Scanline const&)</STRONG> (Thumb, 122 bytes, Stack size 56 bytes, canvas.o(.text._ZN8touchgfx8Renderer6renderERKNS_8ScanlineE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Renderer::render(touchgfx::Scanline const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(touchgfx::Renderer&)
</UL>

<P><STRONG><a name="[69a]"></a>touchgfx::Scanline::reset()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, scanline.o(.text._ZN8touchgfx8Scanline5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Scanline::reset()
</UL>
<BR>[Calls]<UL><LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getScanlineStartIndices()
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getScanlineCovers()
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getScanlineCounts()
</UL>
<BR>[Called By]<UL><LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::Scanline()
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(touchgfx::Renderer&)
</UL>

<P><STRONG><a name="[69e]"></a>touchgfx::Scanline::addCell(int, int, unsigned int)</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, canvas.o(.text._ZN8touchgfx8Scanline7addCellEiij))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Scanline::addCell(int, int, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getScanlineWidth()
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(touchgfx::Renderer&)
</UL>

<P><STRONG><a name="[69d]"></a>touchgfx::Scanline::addSpan(int, int, unsigned int, unsigned int)</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, scanline.o(.text._ZN8touchgfx8Scanline7addSpanEiijj))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Scanline::addSpan(int, int, unsigned int, unsigned int)
</UL>
<BR>[Calls]<UL><LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::memset(void*, unsigned char, unsigned int)
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getScanlineWidth()
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(touchgfx::Renderer&)
</UL>

<P><STRONG><a name="[6a1]"></a>touchgfx::Scanline::Scanline()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, scanline.o(.text._ZN8touchgfx8ScanlineC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Scanline::Scanline() &rArr; touchgfx::Scanline::reset()
</UL>
<BR>[Calls]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::reset()
</UL>
<BR>[Called By]<UL><LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rasterizer::Rasterizer__sub_object()
</UL>

<P><STRONG><a name="[954]"></a>touchgfx::Scanline::Scanline__sub_object()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, scanline.o(.text._ZN8touchgfx8ScanlineC2Ev), UNUSED)

<P><STRONG><a name="[314]"></a>touchgfx::Scanline::~Scanline__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scanline.o(.text._ZN8touchgfx8ScanlineD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Scanline::~Scanline__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanline.o(.rodata._ZTVN8touchgfx8ScanlineE)
</UL>
<P><STRONG><a name="[313]"></a>touchgfx::Scanline::~Scanline__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, scanline.o(.text._ZN8touchgfx8ScanlineD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> scanline.o(.rodata._ZTVN8touchgfx8ScanlineE)
</UL>
<P><STRONG><a name="[281]"></a>touchgfx::TextArea::setBaselineY(short)</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, textarea.o(.text._ZN8touchgfx8TextArea12setBaselineYEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 976 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::setBaselineY(short) &rArr; _Unwind_Resume &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[54d]"></a>touchgfx::TextArea::setTypedText(touchgfx::TypedText)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, textarea.o(.text._ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[317]"></a>touchgfx::TextArea::getTextHeight()</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, textarea.o(.text._ZN8touchgfx8TextArea13getTextHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::getTextHeight() &rArr; touchgfx::TypedText::getText() const &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[282]"></a>touchgfx::TextArea::setXBaselineY(short, short)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, textarea.o(.text._ZN8touchgfx8TextArea13setXBaselineYEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextArea::setXBaselineY(short, short)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[54c]"></a>touchgfx::TextArea::setLinespacing(short)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, screen1viewbase.o(.text._ZN8touchgfx8TextArea14setLinespacingEs), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[559]"></a>touchgfx::TextArea::resizeToCurrentText()</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, textarea.o(.text._ZN8touchgfx8TextArea19resizeToCurrentTextEv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(touchgfx::TypedText)
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[54b]"></a>touchgfx::TextArea::setColor(touchgfx::colortype)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, screen1viewbase.o(.text._ZN8touchgfx8TextArea8setColorENS_9colortypeE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[535]"></a>touchgfx::TextArea::TextArea__sub_object()</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, screen1viewbase.o(.text._ZN8touchgfx8TextAreaC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::colortype__sub_object(unsigned int)
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText__sub_object(unsigned short)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard__sub_object()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[315]"></a>touchgfx::TextArea::~TextArea__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, textarea.o(.text._ZN8touchgfx8TextAreaD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextArea::~TextArea__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[27d]"></a>touchgfx::TextArea::~TextArea__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, textarea.o(.text._ZN8touchgfx8TextAreaD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase__sub_object()
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__sub_object()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::~screenViewBase__sub_object()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[73f]"></a>touchgfx::ceil28_4(int)</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, texturemaptypes.o(.text._ZN8touchgfx8ceil28_4Ei))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Edge::Edge(touchgfx::Gradients const&, touchgfx::Point3D const*, int, int)
</UL>

<P><STRONG><a name="[527]"></a>touchgfx::ConstFont::ConstFont__sub_object(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, constfont.o(.text._ZN8touchgfx9ConstFontC2EPKNS_9GlyphNodeEtthhhhhtt))
<BR><BR>[Called By]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*)
</UL>

<P><STRONG><a name="[31a]"></a>touchgfx::ConstFont::~ConstFont__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, constfont.o(.text._ZN8touchgfx9ConstFontD0Ev))
<BR>[Address Reference Count : 1]<UL><LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[6d6]"></a>touchgfx::ConstFont::~ConstFont__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, cachedfont.o(.text._ZN8touchgfx9ConstFontD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::ConstFont::~ConstFont__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::~Font__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::~GeneratedFont__sub_object()
</UL>

<P><STRONG><a name="[1a8]"></a>touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, container.o(.text._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void, void&rang;*)
</UL>
<BR>[Address Reference Count : 9]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[193]"></a>touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, container.o(.text._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Calls]<UL><LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)
</UL>
<BR>[Address Reference Count : 9]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[191]"></a>touchgfx::Container::getFirstChild()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZN8touchgfx9Container13getFirstChildEv))
<BR>[Address Reference Count : 9]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1a1]"></a>touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, container.o(.text._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**) &rArr; touchgfx::Rect::operator&(touchgfx::Rect const&) const &rArr; touchgfx::Rect::operator&=(touchgfx::Rect const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&(touchgfx::Rect const&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CacheableContainer::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(touchgfx::Rect const&)
</UL>
<BR>[Address Reference Count : 8]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1aa]"></a>touchgfx::Container::moveChildrenRelative(short, short)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, container.o(.text._ZN8touchgfx9Container20moveChildrenRelativeEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Container::moveChildrenRelative(short, short)
</UL>
<BR>[Address Reference Count : 9]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1a2]"></a>touchgfx::Container::add(touchgfx::Drawable&)</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container3addERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Container::add(touchgfx::Drawable&) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::Slider()
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::addGraphElement(touchgfx::AbstractGraphElement&)
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::CircleProgress()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::AbstractProgressIndicator()
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short)
</UL>
<BR>[Address Reference Count : 9]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1a7]"></a>touchgfx::Container::insert(touchgfx::Drawable*, touchgfx::Drawable&)</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container6insertEPNS_8DrawableERS1_))
<BR>[Address Reference Count : 9]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1a3]"></a>touchgfx::Container::remove(touchgfx::Drawable&)</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container6removeERNS_8DrawableE))
<BR>[Address Reference Count : 9]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1a5]"></a>touchgfx::Container::unlink()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container6unlinkEv))
<BR>[Address Reference Count : 9]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1a6]"></a>touchgfx::Container::contains(touchgfx::Drawable const&)</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container8containsERKNS_8DrawableE))
<BR>[Address Reference Count : 9]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1a4]"></a>touchgfx::Container::removeAll()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9Container9removeAllEv))
<BR>[Address Reference Count : 9]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[553]"></a>touchgfx::Container::Container__sub_object()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, screenviewbase.o(.text._ZN8touchgfx9ContainerC2Ev), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[31c]"></a>touchgfx::Container::~Container__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, container.o(.text._ZN8touchgfx9ContainerD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Container::~Container__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
</UL>
<P><STRONG><a name="[688]"></a>touchgfx::Container::~Container__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, screen1view.o(.text._ZN8touchgfx9ContainerD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Container::~Container__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::~Drawable__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::~screenViewBase__sub_object()
</UL>

<P><STRONG><a name="[260]"></a>touchgfx::DMA_Queue::~DMA_Queue__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(.text._ZN8touchgfx9DMA_QueueD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.rodata._ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[31d]"></a>touchgfx::DragEvent::getEventType()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx9DragEvent12getEventTypeEv))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx9DragEventE)
</UL>
<P><STRONG><a name="[31e]"></a>touchgfx::DragEvent::~DragEvent__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen.o(.text._ZN8touchgfx9DragEventD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DragEvent::~DragEvent__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.rodata._ZTVN8touchgfx9DragEventE)
</UL>
<P><STRONG><a name="[6ce]"></a>touchgfx::GlyphNode::setTop(short)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, textprovider.o(.text._ZN8touchgfx9GlyphNode6setTopEs))
<BR><BR>[Called By]<UL><LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*, unsigned short)
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*)
</UL>

<P><STRONG><a name="[73c]"></a>touchgfx::Gradients::Gradients(touchgfx::Point3D const*)</STRONG> (Thumb, 488 bytes, Stack size 48 bytes, texturemaptypes.o(.text._ZN8touchgfx9GradientsC2EPKNS_7Point3DE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::Gradients::Gradients(touchgfx::Point3D const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawTextureMapTriangle(touchgfx::DrawingSurface const&, touchgfx::Point3D const*, touchgfx::TextureSurface const&, touchgfx::Rect const&, touchgfx::Rect const&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[955]"></a>touchgfx::Gradients::Gradients__sub_object(touchgfx::Point3D const*)</STRONG> (Thumb, 488 bytes, Stack size 48 bytes, texturemaptypes.o(.text._ZN8touchgfx9GradientsC2EPKNS_7Point3DE), UNUSED)

<P><STRONG><a name="[322]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element_size()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[323]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element(unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[682]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::Partition__sub_object()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::Partition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap__sub_object()
</UL>

<P><STRONG><a name="[320]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[31f]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[328]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element_size()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[329]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element(unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[681]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::Partition__sub_object()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::Partition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap__sub_object()
</UL>

<P><STRONG><a name="[326]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[325]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[32e]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element_size()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
</UL>
<P><STRONG><a name="[32f]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element(unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
</UL>
<P><STRONG><a name="[683]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::Partition__sub_object()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::Partition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap__sub_object()
</UL>

<P><STRONG><a name="[32c]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
</UL>
<P><STRONG><a name="[32b]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
</UL>
<P><STRONG><a name="[332]"></a>touchgfx::Presenter::deactivate()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, screen1presenter.o(.text._ZN8touchgfx9Presenter10deactivateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Presenter::deactivate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.rodata._ZTVN8touchgfx9PresenterE)
</UL>
<P><STRONG><a name="[331]"></a>touchgfx::Presenter::activate()</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, screen1presenter.o(.text._ZN8touchgfx9Presenter8activateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Presenter::activate()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.rodata._ZTVN8touchgfx9PresenterE)
</UL>
<P><STRONG><a name="[506]"></a>touchgfx::Presenter::Presenter__sub_object()</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, screen1presenter.o(.text._ZN8touchgfx9PresenterC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Presenter::Presenter__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::Screen1Presenter(Screen1View&)
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter::screenPresenter(screenView&)
</UL>

<P><STRONG><a name="[334]"></a>touchgfx::Presenter::~Presenter__deallocating()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, screen1presenter.o(.text._ZN8touchgfx9PresenterD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Presenter::~Presenter__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Presenter::~Presenter__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.rodata._ZTVN8touchgfx9PresenterE)
</UL>
<P><STRONG><a name="[333]"></a>touchgfx::Presenter::~Presenter__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, screen1presenter.o(.text._ZN8touchgfx9PresenterD2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Presenter::~Presenter__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Presenter::~Presenter__deallocating()
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::~Screen1Presenter__sub_object()
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter::~screenPresenter__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.rodata._ZTVN8touchgfx9PresenterE)
</UL>
<P><STRONG><a name="[4d6]"></a>touchgfx::TypedText::registerTexts(touchgfx::Texts const*)</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::TypedText::registerTexts(touchgfx::Texts const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[56e]"></a>touchgfx::TypedText::registerTypedTextDatabase(touchgfx::TypedText::TypedTextData const*, touchgfx::Font const* const*, unsigned short)</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, texts.o(.text._ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::TypedText::registerTypedTextDatabase(touchgfx::TypedText::TypedTextData const*, touchgfx::Font const* const*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[53c]"></a>touchgfx::TypedText::TypedText__sub_object(unsigned short)</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, screen1viewbase.o(.text._ZN8touchgfx9TypedTextC2Et), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea__sub_object()
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>

<P><STRONG><a name="[336]"></a>touchgfx::TypedText::~TypedText__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, buttonwithlabel.o(.text._ZN8touchgfx9TypedTextD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TypedText::~TypedText__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontcache.o(.rodata._ZTVN8touchgfx9TypedTextE)
</UL>
<P><STRONG><a name="[335]"></a>touchgfx::TypedText::~TypedText__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, buttonwithlabel.o(.text._ZN8touchgfx9TypedTextD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fontcache.o(.rodata._ZTVN8touchgfx9TypedTextE)
</UL>
<P><STRONG><a name="[6f4]"></a>touchgfx::TypedText::operator=(touchgfx::TypedText const&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, screen1viewbase.o(.text._ZN8touchgfx9TypedTextaSERKS0_), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::setLabelText(touchgfx::TypedText)
</UL>

<P><STRONG><a name="[531]"></a>touchgfx::colortype::colortype__sub_object(unsigned int)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, screen1viewbase.o(.text._ZN8touchgfx9colortypeC2Ej), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea__sub_object()
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box__sub_object()
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[744]"></a>touchgfx::colortype::colortype__sub_object()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, stm32dma.o(.text._ZN8touchgfx9colortypeC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::colortype::colortype__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BlitOp::BlitOp__sub_object()
</UL>

<P><STRONG><a name="[346]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::saveVFPAsX()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE10saveVFPAsXEv))
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[33d]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getFloatReg(int)</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE11getFloatRegEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getFloatReg(int) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::saveVFPv3(void*)
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::saveVFPWithFSTMX(void*)
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::saveVFPWithFSTMD(void*)
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[33e]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setFloatReg(int, unsigned long long)</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE11setFloatRegEiy))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setFloatReg(int, unsigned long long) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::saveVFPv3(void*)
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::saveVFPWithFSTMX(void*)
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::saveVFPWithFSTMD(void*)
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[342]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::isSignalFrame()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE13isSignalFrameEv))
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[7df]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::stepWithEHABI()</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE13stepWithEHABIEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::stepWithEHABI() &rArr; _Unwind_VRS_Interpret &rArr; _Unwind_VRS_Pop &rArr; _Unwind_VRS_Set &rArr; __unw_set_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_eht_entry
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Interpret
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::step()
</UL>

<P><STRONG><a name="[33c]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::validFloatReg(int)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE13validFloatRegEi))
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[343]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getFunctionName(char*, unsigned int, unsigned int*)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE15getFunctionNameEPcjPj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getFunctionName(char*, unsigned int, unsigned int*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[345]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getRegisterName(int)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE15getRegisterNameEi))
<BR><BR>[Calls]<UL><LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::getRegisterName(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[7e2]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)</STRONG> (Thumb, 446 bytes, Stack size 40 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE23getInfoFromEHABISectionEjRKNS_18UnwindInfoSectionsE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool)
</UL>

<P><STRONG><a name="[344]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool)</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE24setInfoBasedOnIPRegisterEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_init_local
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[33f]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::step()</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE4stepEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::step() &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::stepWithEHABI() &rArr; _Unwind_VRS_Interpret &rArr; _Unwind_VRS_Pop &rArr; _Unwind_VRS_Set &rArr; __unw_set_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::stepWithEHABI()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[33a]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getReg(int)</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE6getRegEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getReg(int) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[341]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::jumpto()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE6jumptoEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::jumpto() &rArr; libunwind::Registers_arm::restoreSavedFloatRegisters()
</UL>
<BR>[Calls]<UL><LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::restoreSavedFloatRegisters()
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::restoreCoreAndJumpTo()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[33b]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setReg(int, unsigned int)</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE6setRegEij))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setReg(int, unsigned int) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[340]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfo(unw_proc_info_t*)</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE7getInfoEP15unw_proc_info_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfo(unw_proc_info_t*) &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[339]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::validReg(int)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE8validRegEi))
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[338]"></a>libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::~UnwindCursor__deallocating()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEED0Ev))
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[7e1]"></a>libunwind::Registers_arm::getRegisterName(int)</STRONG> (Thumb, 916 bytes, Stack size 0 bytes, libunwind.cpp.o(.text._ZN9libunwind13Registers_arm15getRegisterNameEi))
<BR><BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getRegisterName(int)
</UL>

<P><STRONG><a name="[7e3]"></a>libunwind::Registers_arm::restoreSavedFloatRegisters()</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, libunwind.cpp.o(.text._ZN9libunwind13Registers_arm26restoreSavedFloatRegistersEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = libunwind::Registers_arm::restoreSavedFloatRegisters()
</UL>
<BR>[Calls]<UL><LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::restoreVFPWithFLDMX(void*)
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::restoreVFPWithFLDMD(void*)
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::Registers_arm::restoreVFPv3(void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::jumpto()
</UL>

<P><STRONG><a name="[337]"></a>libunwind::AbstractUnwindCursor::~AbstractUnwindCursor__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, libunwind.cpp.o(.text._ZN9libunwind20AbstractUnwindCursorD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.rodata._ZTVN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEEE)
</UL>
<P><STRONG><a name="[175]"></a>__cxxabiv1::__shim_type_info::noop1() const</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZNK10__cxxabiv116__shim_type_info5noop1Ev))
<BR>[Address Reference Count : 2]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
<LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
</UL>
<P><STRONG><a name="[176]"></a>__cxxabiv1::__shim_type_info::noop2() const</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, private_typeinfo.cpp.o(.text._ZNK10__cxxabiv116__shim_type_info5noop2Ev))
<BR>[Address Reference Count : 2]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
<LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
</UL>
<P><STRONG><a name="[178]"></a>__cxxabiv1::__class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, private_typeinfo.cpp.o(.text._ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __cxxabiv1::__class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const &rArr; __cxxabiv1::__class_type_info::process_static_type_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__class_type_info::process_static_type_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int) const
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
</UL>
<P><STRONG><a name="[179]"></a>__cxxabiv1::__class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, private_typeinfo.cpp.o(.text._ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __cxxabiv1::__class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
</UL>
<P><STRONG><a name="[17a]"></a>__cxxabiv1::__class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, private_typeinfo.cpp.o(.text._ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __cxxabiv1::__class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
</UL>
<P><STRONG><a name="[7e9]"></a>__cxxabiv1::__class_type_info::process_static_type_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int) const</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, private_typeinfo.cpp.o(.text._ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __cxxabiv1::__class_type_info::process_static_type_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const
</UL>

<P><STRONG><a name="[177]"></a>__cxxabiv1::__class_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const</STRONG> (Thumb, 116 bytes, Stack size 80 bytes, private_typeinfo.cpp.o(.text._ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = __cxxabiv1::__class_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const &rArr; __dynamic_cast &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dynamic_cast
</UL>
<BR>[Address Reference Count : 2]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv117__class_type_infoE)
<LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
</UL>
<P><STRONG><a name="[17c]"></a>__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, private_typeinfo.cpp.o(.text._ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const &rArr; __cxxabiv1::__class_type_info::process_static_type_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__class_type_info::process_static_type_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int) const
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
</UL>
<P><STRONG><a name="[17d]"></a>__cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, private_typeinfo.cpp.o(.text._ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
</UL>
<P><STRONG><a name="[17e]"></a>__cxxabiv1::__si_class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, private_typeinfo.cpp.o(.text._ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __cxxabiv1::__si_class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> private_typeinfo.cpp.o(.rodata._ZTVN10__cxxabiv120__si_class_type_infoE)
</UL>
<P><STRONG><a name="[69b]"></a>touchgfx::Rasterizer::calculateAlpha(int) const</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, canvas.o(.text._ZNK8touchgfx10Rasterizer14calculateAlphaEi))
<BR><BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bool touchgfx::Rasterizer::render&lang;touchgfx::Renderer&rang;(touchgfx::Renderer&)
</UL>

<P><STRONG><a name="[1e0]"></a>touchgfx::CanvasWidget::getPainter() const</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10getPainterEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::CanvasWidget::getPainter() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 7]<UL><LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
</UL>
<P><STRONG><a name="[1d7]"></a>touchgfx::CanvasWidget::invalidate() const</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::CanvasWidget::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(touchgfx::Rect const&) const
</UL>
<BR>[Address Reference Count : 7]<UL><LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
</UL>
<P><STRONG><a name="[1d6]"></a>touchgfx::CanvasWidget::getSolidRect() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget12getSolidRectEv))
<BR>[Address Reference Count : 7]<UL><LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
</UL>
<P><STRONG><a name="[1e3]"></a>touchgfx::CanvasWidget::getMinimalRect() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget14getMinimalRectEv))
<BR>[Address Reference Count : 6]<UL><LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
</UL>
<P><STRONG><a name="[1d5]"></a>touchgfx::CanvasWidget::draw(touchgfx::Rect const&) const</STRONG> (Thumb, 276 bytes, Stack size 72 bytes, canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::CanvasWidget::draw(touchgfx::Rect const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(touchgfx::Rect const&) const
</UL>
<BR>[Address Reference Count : 6]<UL><LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
</UL>
<P><STRONG><a name="[1e2]"></a>touchgfx::CanvasWidget::getAlpha() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canvaswidget.o(.text._ZNK8touchgfx12CanvasWidget8getAlphaEv))
<BR>[Address Reference Count : 7]<UL><LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
</UL>
<P><STRONG><a name="[6d3]"></a>touchgfx::TextProvider::gsubTableBinarySearch(unsigned short, unsigned short const*, unsigned short) const</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, textprovider.o(.text._ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::TextProvider::gsubTableBinarySearch(unsigned short, unsigned short const*, unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
</UL>

<P><STRONG><a name="[1fe]"></a>touchgfx::GeneratedFont::getGSUBTable() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, generatedfont.o(.text._ZNK8touchgfx13GeneratedFont12getGSUBTableEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::GeneratedFont::getGSUBTable() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[23e]"></a>touchgfx::AbstractButton::getPressedState() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, button.o(.text._ZNK8touchgfx14AbstractButton15getPressedStateEv))
<BR>[Address Reference Count : 1]<UL><LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[228]"></a>touchgfx::CircleProgress::getEndAngle() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, circleprogress.o(.text._ZNK8touchgfx14CircleProgress11getEndAngleEv))
<BR>[Address Reference Count : 1]<UL><LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[223]"></a>touchgfx::CircleProgress::getLineWidth() const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, circleprogress.o(.text._ZNK8touchgfx14CircleProgress12getLineWidthEv))
<BR>[Address Reference Count : 1]<UL><LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[227]"></a>touchgfx::CircleProgress::getStartAngle() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, circleprogress.o(.text._ZNK8touchgfx14CircleProgress13getStartAngleEv))
<BR>[Address Reference Count : 1]<UL><LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[225]"></a>touchgfx::CircleProgress::getCapPrecision() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, circleprogress.o(.text._ZNK8touchgfx14CircleProgress15getCapPrecisionEv))
<BR><BR>[Calls]<UL><LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getCapPrecision() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[22a]"></a>touchgfx::CircleProgress::getAlpha() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, circleprogress.o(.text._ZNK8touchgfx14CircleProgress8getAlphaEv))
<BR>[Address Reference Count : 1]<UL><LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[21f]"></a>touchgfx::CircleProgress::getCenter(int&, int&) const</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, circleprogress.o(.text._ZNK8touchgfx14CircleProgress9getCenterERiS1_))
<BR>[Address Reference Count : 1]<UL><LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[221]"></a>touchgfx::CircleProgress::getRadius() const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, circleprogress.o(.text._ZNK8touchgfx14CircleProgress9getRadiusEv))
<BR>[Address Reference Count : 1]<UL><LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[230]"></a>touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::getSolidRect() const</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, frontendapplicationbase.o(.text._ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::getSolidRect() const &rArr; touchgfx::Rect::Rect__sub_object(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect__sub_object(short, short, short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
</UL>
<P><STRONG><a name="[22f]"></a>touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::draw(touchgfx::Rect const&) const</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, frontendapplicationbase.o(.text._ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::draw(touchgfx::Rect const&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
</UL>
<P><STRONG><a name="[204]"></a>touchgfx::AbstractPainter::getAlpha() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractpainterrgb565.o(.text._ZNK8touchgfx15AbstractPainter8getAlphaEv))
<BR>[Address Reference Count : 4]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx15AbstractPainterE)
<LI> abstractpainterrgb565.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
<LI> painterrgb565bitmap.o(.rodata._ZTVN8touchgfx19PainterRGB565BitmapE)
<LI> painterrgb565.o(.rodata._ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[23a]"></a>touchgfx::ButtonWithLabel::draw(touchgfx::Rect const&) const</STRONG> (Thumb, 288 bytes, Stack size 80 bytes, buttonwithlabel.o(.text._ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 968 + Unknown Stack Size
<LI>Call Chain = touchgfx::ButtonWithLabel::draw(touchgfx::Rect const&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, ...) &rArr; touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, ...)
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(touchgfx::Rect const&) const
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&=(touchgfx::Rect const&)
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getAlignment() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[1d2]"></a>touchgfx::DataGraphScroll::indexToXQ5(short) const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphscroll.o(.text._ZNK8touchgfx15DataGraphScroll10indexToXQ5Es))
<BR>[Address Reference Count : 2]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
</UL>
<P><STRONG><a name="[1b8]"></a>touchgfx::DataGraphScroll::indexToGlobalIndex(short) const</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, graphscroll.o(.text._ZNK8touchgfx15DataGraphScroll18indexToGlobalIndexEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DataGraphScroll::indexToGlobalIndex(short) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
</UL>
<P><STRONG><a name="[1cf]"></a>touchgfx::DataGraphScroll::realIndex(short) const</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, graphscroll.o(.text._ZNK8touchgfx15DataGraphScroll9realIndexEs))
<BR>[Address Reference Count : 2]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
</UL>
<P><STRONG><a name="[24b]"></a>touchgfx::GraphElementDots::drawCanvasWidget(touchgfx::Rect const&) const</STRONG> (Thumb, 884 bytes, Stack size 312 bytes, graphelements.o(.text._ZNK8touchgfx16GraphElementDots16drawCanvasWidgetERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1464 + Unknown Stack Size
<LI>Call Chain = touchgfx::GraphElementDots::drawCanvasWidget(touchgfx::Rect const&) const &rArr; touchgfx::Canvas::~Canvas() &rArr; __clang_call_terminate &rArr; __cxa_begin_catch &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getAlpha() const
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getUsedCapacity() const
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&=(touchgfx::Rect const&)
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::isCenterInvisible(touchgfx::AbstractDataGraph const*, short) const
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas()
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(touchgfx::CanvasWidget const*, touchgfx::Rect const&)
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
</UL>
<P><STRONG><a name="[7f0]"></a>touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, touchgfx::AbstractDataGraph const*, short, short) const</STRONG> (Thumb, 308 bytes, Stack size 64 bytes, graphelements.o(.text._ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, touchgfx::AbstractDataGraph const*, short, short) const &rArr; touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Rasterizer::moveTo(int, int) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sqrtQ10(touchgfx::CWRUtil::Q10)
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[24e]"></a>touchgfx::GraphElementLine::drawCanvasWidget(touchgfx::Rect const&) const</STRONG> (Thumb, 260 bytes, Stack size 232 bytes, graphelements.o(.text._ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1384 + Unknown Stack Size
<LI>Call Chain = touchgfx::GraphElementLine::drawCanvasWidget(touchgfx::Rect const&) const &rArr; touchgfx::Canvas::~Canvas() &rArr; __clang_call_terminate &rArr; __cxa_begin_catch &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getAlpha() const
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaWidthIncludingPadding() const
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaPaddingTop() const
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaHeight() const
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGapBeforeIndex() const
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getUsedCapacity() const
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&=(touchgfx::Rect const&)
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, touchgfx::AbstractDataGraph const*, short, short) const
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas()
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(touchgfx::CanvasWidget const*, touchgfx::Rect const&)
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[7f2]"></a>touchgfx::AbstractDataGraph::scaled2int(int) const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph10scaled2intEi))
<BR><BR>[Calls]<UL><LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::scaled2int(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::getGraphRangeYMinAsInt() const
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::getGraphRangeYMaxAsInt() const
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::getXAxisOffsetAsInt() const
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::getXAxisScaleAsInt() const
</UL>

<P><STRONG><a name="[720]"></a>touchgfx::AbstractDataGraph::float2scaled(float) const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph12float2scaledEf))
<BR><BR>[Calls]<UL><LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::float2scaled(float, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::setXAxisOffset(float)
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::setGraphRangeY(float, float)
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::setXAxisScale(float)
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::addDataPoint(float)
</UL>

<P><STRONG><a name="[70c]"></a>touchgfx::AbstractDataGraph::indexToScreenX(short) const</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph14indexToScreenXEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractDataGraph::indexToScreenX(short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getNearestIndexForScreenXY(short, short, short&)
</UL>

<P><STRONG><a name="[70d]"></a>touchgfx::AbstractDataGraph::indexToScreenY(short) const</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph14indexToScreenYEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractDataGraph::indexToScreenY(short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getNearestIndexForScreenXY(short, short, short&)
</UL>

<P><STRONG><a name="[707]"></a>touchgfx::AbstractDataGraph::getUsedCapacity() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph15getUsedCapacityEv))
<BR><BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::draw(touchgfx::Rect const&) const
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[7f1]"></a>touchgfx::AbstractDataGraph::getGapBeforeIndex() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph17getGapBeforeIndexEv))
<BR><BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[7f6]"></a>touchgfx::AbstractDataGraph::getGraphAreaWidth() const</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph17getGraphAreaWidthEv))
<BR><BR>[Called By]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::isCenterInvisible(touchgfx::AbstractDataGraph const*, short) const
</UL>

<P><STRONG><a name="[703]"></a>touchgfx::AbstractDataGraph::getGraphAreaHeight() const</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph18getGraphAreaHeightEv))
<BR><BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::draw(touchgfx::Rect const&) const
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::isCenterInvisible(touchgfx::AbstractDataGraph const*, short) const
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::invalidateGraphPointAt(short)
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[253]"></a>touchgfx::AbstractDataGraph::indexToGlobalIndex(short) const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph18indexToGlobalIndexEs))
<BR>[Address Reference Count : 2]<UL><LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[71c]"></a>touchgfx::AbstractDataGraph::convertToGraphScale(int, int) const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph19convertToGraphScaleEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::AbstractDataGraph::convertToGraphScale(int, int) const &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraphWithY::setScale(int)
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::draw(touchgfx::Rect const&) const
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[254]"></a>touchgfx::AbstractDataGraph::getXAxisScaleScaled() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph19getXAxisScaleScaledEv))
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
</UL>
<P><STRONG><a name="[255]"></a>touchgfx::AbstractDataGraph::getXAxisOffsetScaled() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph20getXAxisOffsetScaledEv))
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
</UL>
<P><STRONG><a name="[701]"></a>touchgfx::AbstractDataGraph::getGraphAreaPaddingTop() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph22getGraphAreaPaddingTopEv))
<BR><BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::draw(touchgfx::Rect const&) const
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::isCenterInvisible(touchgfx::AbstractDataGraph const*, short) const
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::invalidateGraphPointAt(short)
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[7f5]"></a>touchgfx::AbstractDataGraph::getGraphAreaPaddingLeft() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph23getGraphAreaPaddingLeftEv))
<BR><BR>[Called By]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::isCenterInvisible(touchgfx::AbstractDataGraph const*, short) const
</UL>

<P><STRONG><a name="[1b7]"></a>touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const &rArr; touchgfx::AbstractDataGraph::indexToScreenX(short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::indexToScreenX(short) const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[702]"></a>touchgfx::AbstractDataGraph::getGraphAreaWidthIncludingPadding() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph33getGraphAreaWidthIncludingPaddingEv))
<BR><BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::draw(touchgfx::Rect const&) const
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::invalidateGraphPointAt(short)
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[7ef]"></a>touchgfx::AbstractDataGraph::getAlpha() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx17AbstractDataGraph8getAlphaEv))
<BR><BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::draw(touchgfx::Rect const&) const
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::drawCanvasWidget(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[25a]"></a>touchgfx::AbstractPartition::getAllocationCount() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractpartition.o(.text._ZNK8touchgfx17AbstractPartition18getAllocationCountEv))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
<LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[26a]"></a>touchgfx::CacheableContainer::invalidateRect(touchgfx::Rect&) const</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, cacheablecontainer.o(.text._ZNK8touchgfx18CacheableContainer14invalidateRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::CacheableContainer::invalidateRect(touchgfx::Rect&) const &rArr; touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const &rArr; touchgfx::Rect::operator&(touchgfx::Rect const&) const &rArr; touchgfx::Rect::operator&=(touchgfx::Rect const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
</UL>
<P><STRONG><a name="[700]"></a>touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, graphelements.o(.text._ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Calls]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[6ff]"></a>touchgfx::AbstractGraphElement::isCenterInvisible(touchgfx::AbstractDataGraph const*, short) const</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, graphelements.o(.text._ZNK8touchgfx20AbstractGraphElement17isCenterInvisibleEPKNS_17AbstractDataGraphEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractGraphElement::isCenterInvisible(touchgfx::AbstractDataGraph const*, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaPaddingLeft() const
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaPaddingTop() const
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaHeight() const
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[71d]"></a>touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, graphelements.o(.text._ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Called By]<UL><LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[274]"></a>touchgfx::GraphElementHistogram::draw(touchgfx::Rect const&) const</STRONG> (Thumb, 414 bytes, Stack size 80 bytes, graphelements.o(.text._ZNK8touchgfx21GraphElementHistogram4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = touchgfx::GraphElementHistogram::draw(touchgfx::Rect const&) const &rArr; touchgfx::AbstractDataGraph::convertToGraphScale(int, int) const &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getAlpha() const
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaWidthIncludingPadding() const
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaPaddingTop() const
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::convertToGraphScale(int, int) const
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getGraphAreaHeight() const
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getUsedCapacity() const
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&=(touchgfx::Rect const&)
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElementNoCWR::normalizeRect(touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
</UL>
<P><STRONG><a name="[1c0]"></a>touchgfx::AbstractDataGraphWithY::indexToScreenXQ5(short) const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY16indexToScreenXQ5Es))
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1c1]"></a>touchgfx::AbstractDataGraphWithY::indexToScreenYQ5(short) const</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY16indexToScreenYQ5Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractDataGraphWithY::indexToScreenYQ5(short) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1be]"></a>touchgfx::AbstractDataGraphWithY::valueToScreenXQ5(int) const</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY16valueToScreenXQ5Ei))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::AbstractDataGraphWithY::valueToScreenXQ5(int) const &rArr; touchgfx::CWRUtil::muldiv_toQ5(int, int, int) &rArr; touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldiv_toQ5(int, int, int)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1bf]"></a>touchgfx::AbstractDataGraphWithY::valueToScreenYQ5(int) const</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY16valueToScreenYQ5Ei))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::AbstractDataGraphWithY::valueToScreenYQ5(int) const &rArr; touchgfx::CWRUtil::muldiv_toQ5(int, int, int) &rArr; touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldiv_toQ5(int, int, int)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1b0]"></a>touchgfx::AbstractDataGraphWithY::getGraphRangeXMax() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY17getGraphRangeXMaxEv))
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1af]"></a>touchgfx::AbstractDataGraphWithY::getGraphRangeXMin() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY17getGraphRangeXMinEv))
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1c7]"></a>touchgfx::AbstractDataGraphWithY::getXAxisScaleAsInt() const</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY18getXAxisScaleAsIntEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractDataGraphWithY::getXAxisScaleAsInt() const
</UL>
<BR>[Calls]<UL><LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::scaled2int(int) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1cb]"></a>touchgfx::AbstractDataGraphWithY::getXAxisOffsetAsInt() const</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY19getXAxisOffsetAsIntEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractDataGraphWithY::getXAxisOffsetAsInt() const
</UL>
<BR>[Calls]<UL><LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::scaled2int(int) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1c3]"></a>touchgfx::AbstractDataGraphWithY::getXAxisScaleScaled() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY19getXAxisScaleScaledEv))
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1c4]"></a>touchgfx::AbstractDataGraphWithY::getXAxisOffsetScaled() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY20getXAxisOffsetScaledEv))
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1c8]"></a>touchgfx::AbstractDataGraphWithY::getXAxisScaleAsFloat() const</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY20getXAxisScaleAsFloatEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractDataGraphWithY::getXAxisScaleAsFloat() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1cc]"></a>touchgfx::AbstractDataGraphWithY::getXAxisOffsetAsFloat() const</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY21getXAxisOffsetAsFloatEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractDataGraphWithY::getXAxisOffsetAsFloat() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1b3]"></a>touchgfx::AbstractDataGraphWithY::getGraphRangeYMaxAsInt() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY22getGraphRangeYMaxAsIntEv))
<BR><BR>[Calls]<UL><LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::scaled2int(int) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1b1]"></a>touchgfx::AbstractDataGraphWithY::getGraphRangeYMinAsInt() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY22getGraphRangeYMinAsIntEv))
<BR><BR>[Calls]<UL><LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::scaled2int(int) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1bb]"></a>touchgfx::AbstractDataGraphWithY::getGraphRangeYMaxScaled() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY23getGraphRangeYMaxScaledEv))
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1ba]"></a>touchgfx::AbstractDataGraphWithY::getGraphRangeYMinScaled() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY23getGraphRangeYMinScaledEv))
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1bc]"></a>touchgfx::AbstractDataGraphWithY::indexToDataPointXScaled(short) const</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY23indexToDataPointXScaledEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractDataGraphWithY::indexToDataPointXScaled(short) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1bd]"></a>touchgfx::AbstractDataGraphWithY::indexToDataPointYScaled(short) const</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY23indexToDataPointYScaledEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractDataGraphWithY::indexToDataPointYScaled(short) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1b4]"></a>touchgfx::AbstractDataGraphWithY::getGraphRangeYMaxAsFloat() const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY24getGraphRangeYMaxAsFloatEv))
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1b2]"></a>touchgfx::AbstractDataGraphWithY::getGraphRangeYMinAsFloat() const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY24getGraphRangeYMinAsFloatEv))
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[1c2]"></a>touchgfx::AbstractDataGraphWithY::xScreenRangeToIndexRange(short, short, short&, short&) const</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::AbstractDataGraphWithY::xScreenRangeToIndexRange(short, short, short&, short&) const &rArr; touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldivQ5(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[27c]"></a>touchgfx::AbstractDataGraphWithY::realIndex(short) const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractdatagraph.o(.text._ZNK8touchgfx22AbstractDataGraphWithY9realIndexEs))
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
</UL>
<P><STRONG><a name="[284]"></a>touchgfx::TextAreaWithOneWildcard::getTextWidth() const</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, textareawithwildcard.o(.text._ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::getTextWidth() const &rArr; touchgfx::TypedText::getText() const &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[27f]"></a>touchgfx::TextAreaWithOneWildcard::draw(touchgfx::Rect const&) const</STRONG> (Thumb, 156 bytes, Stack size 88 bytes, textareawithwildcard.o(.text._ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 976 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::draw(touchgfx::Rect const&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, ...) &rArr; touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, ...)
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getAlignment() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[7f7]"></a>touchgfx::AbstractGraphElementNoCWR::normalizeRect(touchgfx::Rect&) const</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, graphelements.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::draw(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[276]"></a>touchgfx::AbstractGraphElementNoCWR::drawCanvasWidget(touchgfx::Rect const&) const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphelements.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE))
<BR>[Address Reference Count : 2]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
</UL>
<P><STRONG><a name="[279]"></a>touchgfx::AbstractGraphElementNoCWR::getColor() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, graphelements.o(.text._ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv))
<BR>[Address Reference Count : 2]<UL><LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
</UL>
<P><STRONG><a name="[21c]"></a>touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator11getProgressEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setValue(int)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[20d]"></a>touchgfx::AbstractProgressIndicator::getProgressIndicatorX() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv))
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[20e]"></a>touchgfx::AbstractProgressIndicator::getProgressIndicatorY() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv))
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[20f]"></a>touchgfx::AbstractProgressIndicator::getProgressIndicatorWidth() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv))
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[210]"></a>touchgfx::AbstractProgressIndicator::getProgressIndicatorHeight() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv))
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[214]"></a>touchgfx::AbstractProgressIndicator::getRange(int&, int&) const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_))
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[213]"></a>touchgfx::AbstractProgressIndicator::getRange(int&, int&, unsigned short&) const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt))
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[212]"></a>touchgfx::AbstractProgressIndicator::getRange(int&, int&, unsigned short&, unsigned short&) const</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_))
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[217]"></a>touchgfx::AbstractProgressIndicator::getRange(short&, short&) const</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERsS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractProgressIndicator::getRange(short&, short&) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[216]"></a>touchgfx::AbstractProgressIndicator::getRange(short&, short&, unsigned short&) const</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERsS1_Rt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractProgressIndicator::getRange(short&, short&, unsigned short&) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[215]"></a>touchgfx::AbstractProgressIndicator::getRange(short&, short&, unsigned short&, unsigned short&) const</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getRangeERsS1_RtS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::AbstractProgressIndicator::getRange(short&, short&, unsigned short&, unsigned short&) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[21b]"></a>touchgfx::AbstractProgressIndicator::getValue() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractprogressindicator.o(.text._ZNK8touchgfx25AbstractProgressIndicator8getValueEv))
<BR><BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::setStartEndAngle(int, int)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
</UL>
<P><STRONG><a name="[28d]"></a>touchgfx::Box::getSolidRect() const</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, box.o(.text._ZNK8touchgfx3Box12getSolidRectEv))
<BR>[Address Reference Count : 1]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[28c]"></a>touchgfx::Box::draw(touchgfx::Rect const&) const</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, box.o(.text._ZNK8touchgfx3Box4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Box::draw(touchgfx::Rect const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[7f8]"></a>touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, hal.o(.text._ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
</UL>

<P><STRONG><a name="[726]"></a>touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, hal.o(.text._ZNK8touchgfx3HAL13getDstAddressEttPt))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned int)
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)
</UL>

<P><STRONG><a name="[733]"></a>touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, hal.o(.text._ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const &rArr; touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getBitDepth(touchgfx::Bitmap::BitmapFormat) const
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(unsigned short const*, unsigned char const*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
</UL>

<P><STRONG><a name="[120]"></a>touchgfx::HAL::getFlashDataReader() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal.o(.text._ZNK8touchgfx3HAL18getFlashDataReaderEv))
<BR>[Address Reference Count : 3]<UL><LI> touchgfxhal.o(.rodata._ZTV11TouchGFXHAL)
<LI> touchgfxgeneratedhal.o(.rodata._ZTV20TouchGFXGeneratedHAL)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1f5]"></a>touchgfx::Font::getCharWidth(unsigned short) const</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, font.o(.text._ZNK8touchgfx4Font12getCharWidthEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Font::getCharWidth(unsigned short) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[31b]"></a>touchgfx::Font::getGSUBTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(.text._ZNK8touchgfx4Font12getGSUBTableEv))
<BR>[Address Reference Count : 1]<UL><LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1f8]"></a>touchgfx::Font::getFontHeight() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(.text._ZNK8touchgfx4Font13getFontHeightEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1fa]"></a>touchgfx::Font::getBitsPerPixel() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, constfont.o(.text._ZNK8touchgfx4Font15getBitsPerPixelEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1fb]"></a>touchgfx::Font::getByteAlignRow() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, constfont.o(.text._ZNK8touchgfx4Font15getByteAlignRowEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1f2]"></a>touchgfx::Font::getEllipsisChar() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(.text._ZNK8touchgfx4Font15getEllipsisCharEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1f1]"></a>touchgfx::Font::getFallbackChar() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(.text._ZNK8touchgfx4Font15getFallbackCharEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1f6]"></a>touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const</STRONG> (Thumb, 132 bytes, Stack size 128 bytes, font.o(.text._ZNK8touchgfx4Font15getSpacingAboveEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*)
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::top() const
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1f7]"></a>touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const</STRONG> (Thumb, 134 bytes, Stack size 128 bytes, font.o(.text._ZNK8touchgfx4Font16getMaxTextHeightEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*)
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::top() const
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1fd]"></a>touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const</STRONG> (Thumb, 80 bytes, Stack size 120 bytes, font.o(.text._ZNK8touchgfx4Font16getNumberOfLinesEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getNumberOfLines(unsigned short const*, ...) const &rArr; touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*) &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*)
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[561]"></a>touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const</STRONG> (Thumb, 192 bytes, Stack size 136 bytes, font.o(.text._ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = touchgfx::Font::getStringWidthLTR(unsigned char, unsigned short const*, std::__va_list) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*)
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidth(unsigned char, unsigned short const*, ...) const
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidth(unsigned short const*, ...) const
</UL>

<P><STRONG><a name="[1f9]"></a>touchgfx::Font::getMinimumTextHeight() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, constfont.o(.text._ZNK8touchgfx4Font20getMinimumTextHeightEv))
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1f0]"></a>touchgfx::Font::getGlyph(unsigned short) const</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, constfont.o(.text._ZNK8touchgfx4Font8getGlyphEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Font::getGlyph(unsigned short) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[7f9]"></a>touchgfx::Rect::isEqual(touchgfx::Rect const&) const</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, screen.o(.text._ZNK8touchgfx4Rect7isEqualERKS0_))
<BR><BR>[Called By]<UL><LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator!=(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[6a7]"></a>touchgfx::Rect::includes(touchgfx::Rect const&) const</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, application.o(.text._ZNK8touchgfx4Rect8includesERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Rect::includes(touchgfx::Rect const&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)
</UL>

<P><STRONG><a name="[6a8]"></a>touchgfx::Rect::intersect(touchgfx::Rect const&) const</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, application.o(.text._ZNK8touchgfx4Rect9intersectERKS0_))
<BR><BR>[Called By]<UL><LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&=(touchgfx::Rect const&)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::draw(touchgfx::Rect const&) const
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[7da]"></a>touchgfx::Rect::intersect(short, short) const</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, container.o(.text._ZNK8touchgfx4Rect9intersectEss))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>

<P><STRONG><a name="[6ac]"></a>touchgfx::Rect::operator&(touchgfx::Rect const&) const</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, application.o(.text._ZNK8touchgfx4RectanERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Rect::operator&(touchgfx::Rect const&) const &rArr; touchgfx::Rect::operator&=(touchgfx::Rect const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&=(touchgfx::Rect const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::draw(touchgfx::Rect&)
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[759]"></a>touchgfx::Rect::operator!=(touchgfx::Rect const&) const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, screen.o(.text._ZNK8touchgfx4RectneERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Rect::operator!=(touchgfx::Rect const&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEqual(touchgfx::Rect const&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(touchgfx::Rect const&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[266]"></a>touchgfx::Image::getSolidRect() const</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, image.o(.text._ZNK8touchgfx5Image12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::getSolidRect() const &rArr; touchgfx::Bitmap::getSolidRect() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[265]"></a>touchgfx::Image::draw(touchgfx::Rect const&) const</STRONG> (Thumb, 98 bytes, Stack size 56 bytes, image.o(.text._ZNK8touchgfx5Image4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::draw(touchgfx::Rect const&) const &rArr; touchgfx::Bitmap::getRect() const &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&=(touchgfx::Rect const&)
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getRect() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[715]"></a>touchgfx::Bitmap::getExtraData() const</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap12getExtraDataEv))
<BR><BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::renderInit()
</UL>

<P><STRONG><a name="[785]"></a>touchgfx::Bitmap::getSolidRect() const</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getSolidRect() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::getSolidRect() const
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::getSolidRect() const
</UL>

<P><STRONG><a name="[784]"></a>touchgfx::Bitmap::hasTransparentPixels() const</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap20hasTransparentPixelsEv))
<BR><BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
</UL>

<P><STRONG><a name="[712]"></a>touchgfx::Bitmap::getId() const</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, button.o(.text._ZNK8touchgfx6Bitmap5getIdEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getId() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::setBitmap(touchgfx::Bitmap const&)
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(touchgfx::Rect const&) const
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::renderInit()
</UL>

<P><STRONG><a name="[714]"></a>touchgfx::Bitmap::getData() const</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap7getDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getData() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::renderInit()
</UL>

<P><STRONG><a name="[717]"></a>touchgfx::Bitmap::getRect() const</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, painterrgb565bitmap.o(.text._ZNK8touchgfx6Bitmap7getRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getRect() const &rArr; touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::setBitmap(touchgfx::Bitmap const&)
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[72d]"></a>touchgfx::Bitmap::getWidth() const</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap8getWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getWidth() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&, touchgfx::Bitmap const&)
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(touchgfx::Rect const&) const
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(touchgfx::Bitmap const&)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getRect() const
</UL>

<P><STRONG><a name="[713]"></a>touchgfx::Bitmap::getFormat() const</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap9getFormatEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::getFormat() const
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::setBitmap(touchgfx::Bitmap const&)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::render(unsigned char*, int, int, int, unsigned int, unsigned char const*)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::renderInit()
</UL>

<P><STRONG><a name="[72c]"></a>touchgfx::Bitmap::getHeight() const</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, bitmap.o(.text._ZNK8touchgfx6Bitmap9getHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getHeight() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::drawDrawableInDynamicBitmap(touchgfx::Drawable&, unsigned short, touchgfx::Rect const&)
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setBitmaps(touchgfx::Bitmap const&, touchgfx::Bitmap const&, touchgfx::Bitmap const&)
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(touchgfx::Rect const&) const
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setWidthHeight(touchgfx::Bitmap const&)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(touchgfx::Rect const&, touchgfx::Rect const&, unsigned short)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(touchgfx::Bitmap const&, short, short, touchgfx::Rect const&, unsigned char, bool)
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getRect() const
</UL>

<P><STRONG><a name="[23b]"></a>touchgfx::Button::getSolidRect() const</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, button.o(.text._ZNK8touchgfx6Button12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Button::getSolidRect() const &rArr; touchgfx::Bitmap::getSolidRect() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[7ec]"></a>touchgfx::Button::draw(touchgfx::Rect const&) const</STRONG> (Thumb, 150 bytes, Stack size 56 bytes, button.o(.text._ZNK8touchgfx6Button4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::Button::draw(touchgfx::Rect const&) const &rArr; touchgfx::Bitmap::getId() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getId() const
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&=(touchgfx::Rect const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[747]"></a>touchgfx::Canvas::isOutside(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, canvas.o(.text._ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_))
<BR><BR>[Called By]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[7fa]"></a>touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, circle.o(.text._ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const &rArr; touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Rasterizer::moveTo(int, int) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator*(touchgfx::CWRUtil::Q15 const&) const
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToAR2(touchgfx::Canvas&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[7fb]"></a>touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, circle.o(.text._ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAR(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRectForUpdatedEndAngle(touchgfx::CWRUtil::Q5 const&) const
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRect() const
</UL>

<P><STRONG><a name="[29e]"></a>touchgfx::Circle::getMinimalRect() const</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, circle.o(.text._ZNK8touchgfx6Circle14getMinimalRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = touchgfx::Circle::getMinimalRect() const &rArr; touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAR(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
</UL>
<P><STRONG><a name="[7fd]"></a>touchgfx::Circle::updateMinMaxAR(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, circle.o(.text._ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::Circle::updateMinMaxAR(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator*(touchgfx::CWRUtil::Q15 const&) const
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxXY(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
</UL>

<P><STRONG><a name="[df]"></a>touchgfx::Circle::updateMinMaxXY(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, circle.o(.text._ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Circle::updateMinMaxXY(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAR(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circle.o(.text._ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_)
</UL>
<P><STRONG><a name="[7eb]"></a>touchgfx::Circle::getCapPrecision() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, circle.o(.text._ZNK8touchgfx6Circle15getCapPrecisionEv))
<BR><BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::getCapPrecision() const
</UL>

<P><STRONG><a name="[29f]"></a>touchgfx::Circle::drawCanvasWidget(touchgfx::Rect const&) const</STRONG> (Thumb, 832 bytes, Stack size 280 bytes, circle.o(.text._ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1432 + Unknown Stack Size
<LI>Call Chain = touchgfx::Circle::drawCanvasWidget(touchgfx::Rect const&) const &rArr; touchgfx::Canvas::~Canvas() &rArr; __clang_call_terminate &rArr; __cxa_begin_catch &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas()
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(touchgfx::CanvasWidget const*, touchgfx::Rect const&)
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator*(touchgfx::CWRUtil::Q15 const&) const
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::moveToAR2(touchgfx::Canvas&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToAR2(touchgfx::Canvas&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(int)
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
</UL>
<P><STRONG><a name="[7fc]"></a>touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const</STRONG> (Thumb, 608 bytes, Stack size 80 bytes, circle.o(.text._ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAR(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAR(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>

<P><STRONG><a name="[752]"></a>touchgfx::Circle::getMinimalRectForUpdatedEndAngle(touchgfx::CWRUtil::Q5 const&) const</STRONG> (Thumb, 268 bytes, Stack size 24 bytes, circle.o(.text._ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = touchgfx::Circle::getMinimalRectForUpdatedEndAngle(touchgfx::CWRUtil::Q5 const&) const &rArr; touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::Circle::calculateMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::Circle::updateMinMaxAR(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const &rArr; touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5) &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::getMinimalRect(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Called By]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;void touchgfx::Circle::updateArcEnd&lang;touchgfx::CWRUtil::Q5&rang;(touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[7ff]"></a>touchgfx::Circle::lineToAR2(touchgfx::Canvas&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, circle.o(.text._ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = touchgfx::Circle::lineToAR2(touchgfx::Canvas&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const &rArr; touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const &rArr; touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Rasterizer::moveTo(int, int) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[7fe]"></a>touchgfx::Circle::moveToAR2(touchgfx::Canvas&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, circle.o(.text._ZNK8touchgfx6Circle9moveToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = touchgfx::Circle::moveToAR2(touchgfx::Canvas&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const &rArr; touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Canvas::close() &rArr; touchgfx::Rasterizer::lineTo(int, int) &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::operator*(touchgfx::CWRUtil::Q15 const&) const
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::cosine(touchgfx::CWRUtil::Q5)
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::sine(touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[2ac]"></a>touchgfx::Slider::getMaxValue() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, slider.o(.text._ZNK8touchgfx6Slider11getMaxValueEv))
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[2ab]"></a>touchgfx::Slider::getMinValue() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, slider.o(.text._ZNK8touchgfx6Slider11getMinValueEv))
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[2a9]"></a>touchgfx::Slider::getIndicatorMax() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, slider.o(.text._ZNK8touchgfx6Slider15getIndicatorMaxEv))
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[2a8]"></a>touchgfx::Slider::getIndicatorMin() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, slider.o(.text._ZNK8touchgfx6Slider15getIndicatorMinEv))
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[2b1]"></a>touchgfx::Slider::positionToValue(short) const</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, slider.o(.text._ZNK8touchgfx6Slider15positionToValueEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Slider::positionToValue(short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[2b0]"></a>touchgfx::Slider::valueToPosition(int) const</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, slider.o(.text._ZNK8touchgfx6Slider15valueToPositionEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Slider::valueToPosition(int) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[2b4]"></a>touchgfx::Slider::getValueRangeSize() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, slider.o(.text._ZNK8touchgfx6Slider17getValueRangeSizeEv))
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[2b2]"></a>touchgfx::Slider::getIndicatorRadius() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, slider.o(.text._ZNK8touchgfx6Slider18getIndicatorRadiusEv))
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[2b3]"></a>touchgfx::Slider::getIndicatorPositionRangeSize() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, slider.o(.text._ZNK8touchgfx6Slider29getIndicatorPositionRangeSizeEv))
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[de]"></a>touchgfx::CWRUtil::Q5::operator*(touchgfx::CWRUtil::Q15 const&) const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, circle.o(.text._ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::CWRUtil::Q5::operator*(touchgfx::CWRUtil::Q15 const&) const &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) &rArr;  touchgfx::muldivu(unsigned int, unsigned int, unsigned int, unsigned int&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::moveToAR2(touchgfx::Canvas&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::drawCanvasWidget(touchgfx::Rect const&) const
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::updateMinMaxAR(touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&, touchgfx::CWRUtil::Q5&) const
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::lineToXYAR2(touchgfx::Canvas&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&, touchgfx::CWRUtil::Q5 const&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circle.o(.text._ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_)
</UL>
<P><STRONG><a name="[2be]"></a>touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::isValid() const</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, screenviewbase.o(.text._ZNK8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::isValid() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenviewbase.o(.rodata._ZTVN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[2c2]"></a>touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::isValid() const</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, screen1viewbase.o(.text._ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::isValid() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvEE)
</UL>
<P><STRONG><a name="[2c6]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, frontendapplicationbase.o(.text._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[d1]"></a>touchgfx::Drawable::invalidate() const</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, drawable.o(.text._ZNK8touchgfx8Drawable10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::invalidate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::UpDateTemNum(int)
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateGraphArea()
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::updateIndicatorPosition(short)
</UL>
<BR>[Address Reference Count : 19]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.text._ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[194]"></a>touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, drawable.o(.text._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const &rArr; touchgfx::Rect::operator&=(touchgfx::Rect const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&=(touchgfx::Rect const&)
</UL>
<BR>[Address Reference Count : 25]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[190]"></a>touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, drawable.o(.text._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const &rArr; touchgfx::Rect::operator&(touchgfx::Rect const&) const &rArr; touchgfx::Rect::operator&=(touchgfx::Rect const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&(touchgfx::Rect const&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CacheableContainer::invalidateRect(touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 24]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[711]"></a>touchgfx::Drawable::getAbsoluteRect() const</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, drawable.o(.text._ZNK8touchgfx8Drawable15getAbsoluteRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleGestureEvent(touchgfx::GestureEvent const&)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(touchgfx::ClickEvent const&)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(touchgfx::DragEvent const&)
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CacheableContainer::setupDrawChain(touchgfx::Rect const&, touchgfx::Drawable**)
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsY()
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsX()
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(touchgfx::Rect const&) const
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[195]"></a>touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, drawable.o(.text._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE))
<BR>[Address Reference Count : 25]<UL><LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> box.o(.rodata._ZTVN8touchgfx3BoxE)
<LI> buttonwithlabel.o(.rodata._ZTVN8touchgfx15ButtonWithLabelE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainer11CachedImageE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementLineE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx21GraphElementHistogramE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx16GraphElementDotsE)
<LI> circle.o(.rodata._ZTVN8touchgfx6CircleE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.rodata._ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[6e5]"></a>touchgfx::Drawable::getRect() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZNK8touchgfx8Drawable7getRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Drawable::getRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[6e3]"></a>touchgfx::Drawable::getWidth() const</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, frontendapplicationbase.o(.text._ZNK8touchgfx8Drawable8getWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Drawable::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[30c]"></a>touchgfx::LCD16bpp::getRedColor(touchgfx::colortype) const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[30e]"></a>touchgfx::LCD16bpp::getBlueColor(touchgfx::colortype) const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[30d]"></a>touchgfx::LCD16bpp::getGreenColor(touchgfx::colortype) const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[309]"></a>touchgfx::LCD16bpp::framebufferFormat() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp17framebufferFormatEv))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[30a]"></a>touchgfx::LCD16bpp::framebufferStride() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp17framebufferStrideEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::framebufferStride() const &rArr; touchgfx::LCD16bpp::getFramebufferStride() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getFramebufferStride()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[30b]"></a>touchgfx::LCD16bpp::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh))
<BR><BR>[Calls]<UL><LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::getColorFromRGB(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[308]"></a>touchgfx::LCD16bpp::bitDepth() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(.text._ZNK8touchgfx8LCD16bpp8bitDepthEv))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.rodata._ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[280]"></a>touchgfx::TextArea::getSolidRect() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, textarea.o(.text._ZNK8touchgfx8TextArea12getSolidRectEv))
<BR>[Address Reference Count : 2]<UL><LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[318]"></a>touchgfx::TextArea::getTextWidth() const</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, textarea.o(.text._ZNK8touchgfx8TextArea12getTextWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::getTextWidth() const &rArr; touchgfx::TypedText::getText() const &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[285]"></a>touchgfx::TextArea::calculateTextHeight(unsigned short const*, ...) const</STRONG> (Thumb, 172 bytes, Stack size 136 bytes, textarea.o(.text._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::calculateTextHeight(unsigned short const*, ...) const &rArr; touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, touchgfx::Font const*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(unsigned short const*, std::__va_list, unsigned short const*)
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, touchgfx::Font const*, short)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
<LI> textareawithwildcard.o(.rodata._ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[316]"></a>touchgfx::TextArea::draw(touchgfx::Rect const&) const</STRONG> (Thumb, 154 bytes, Stack size 88 bytes, textarea.o(.text._ZNK8touchgfx8TextArea4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 976 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::draw(touchgfx::Rect const&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, ...) &rArr; touchgfx::LCD::drawStringLTR(touchgfx::Rect const&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, touchgfx::Font const*, touchgfx::GlyphNode const*&, unsigned char const*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(unsigned short const*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, unsigned short const*) &rArr; touchgfx::TextProvider::fillInputBuffer() &rArr; touchgfx::TextProvider::circularBuffer&lang;2u&rang;::popFront() &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const&, unsigned short const*, ...)
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getAlignment() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textarea.o(.rodata._ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[800]"></a>touchgfx::ConstFont::find(unsigned short) const</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, constfont.o(.text._ZNK8touchgfx9ConstFont4findEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const
</UL>

<P><STRONG><a name="[1ef]"></a>touchgfx::ConstFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, constfont.o(.text._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::ConstFont::getGlyph(unsigned short, unsigned char const*&, unsigned char&) const &rArr; touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.rodata._ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[18f]"></a>touchgfx::Container::getSolidRect() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, container.o(.text._ZNK8touchgfx9Container12getSolidRectEv))
<BR>[Address Reference Count : 9]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1a9]"></a>touchgfx::Container::getContainedArea() const</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, container.o(.text._ZNK8touchgfx9Container16getContainedAreaEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::Container::getContainedArea() const &rArr; touchgfx::Rect::expandToFit(touchgfx::Rect const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(touchgfx::Rect const&)
</UL>
<BR>[Address Reference Count : 9]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[18e]"></a>touchgfx::Container::draw(touchgfx::Rect const&) const</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, container.o(.text._ZNK8touchgfx9Container4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Container::draw(touchgfx::Rect const&) const &rArr; touchgfx::Rect::operator&=(touchgfx::Rect const&)
</UL>
<BR>[Calls]<UL><LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator&=(touchgfx::Rect const&)
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 9]<UL><LI> screen1viewbase.o(.rodata._ZTVN8touchgfx11GraphScrollILs125EEE)
<LI> abstractprogressindicator.o(.rodata._ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> cacheablecontainer.o(.rodata._ZTVN8touchgfx18CacheableContainerE)
<LI> circleprogress.o(.rodata._ZTVN8touchgfx14CircleProgressE)
<LI> container.o(.rodata._ZTVN8touchgfx9ContainerE)
<LI> graphscroll.o(.rodata._ZTVN8touchgfx15DataGraphScrollE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> slider.o(.rodata._ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[528]"></a>touchgfx::GlyphNode::kerningTablePos() const</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, generatedfont.o(.text._ZNK8touchgfx9GlyphNode15kerningTablePosEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::GlyphNode::kerningTablePos() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::getKerning(unsigned short, touchgfx::GlyphNode const*) const
</UL>

<P><STRONG><a name="[6cf]"></a>touchgfx::GlyphNode::top() const</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, font.o(.text._ZNK8touchgfx9GlyphNode3topEv))
<BR><BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(unsigned short const*, ...) const
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(unsigned short const*, ...) const
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, touchgfx::Rect const*, short, short&, touchgfx::Rect const&, touchgfx::LCD::StringVisuals const*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*, unsigned short)
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(touchgfx::Font const*, touchgfx::GlyphNode const*)
</UL>

<P><STRONG><a name="[324]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element(unsigned short) const</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element(unsigned short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[321]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::capacity() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::capacity() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[32a]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element(unsigned short) const</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element(unsigned short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[327]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::capacity() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::capacity() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[330]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element(unsigned short) const</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::element(unsigned short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
</UL>
<P><STRONG><a name="[32d]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::capacity() const</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, touchgfxconfiguration.o(.text._ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::capacity() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EEE)
</UL>
<P><STRONG><a name="[6f6]"></a>touchgfx::TypedText::hasValidId() const</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, screen1viewbase.o(.text._ZNK8touchgfx9TypedText10hasValidIdEv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::updateTextPosition()
</UL>

<P><STRONG><a name="[801]"></a>touchgfx::TypedText::assertValid() const</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, buttonwithlabel.o(.text._ZNK8touchgfx9TypedText11assertValidEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getAlignment() const
</UL>

<P><STRONG><a name="[7ed]"></a>touchgfx::TypedText::getAlignment() const</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, buttonwithlabel.o(.text._ZNK8touchgfx9TypedText12getAlignmentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getAlignment() const &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::assertValid() const
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(touchgfx::Rect const&) const
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(touchgfx::Rect const&) const
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(touchgfx::Rect const&) const
</UL>

<P><STRONG><a name="[7ee]"></a>touchgfx::TypedText::getTextDirection() const</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, buttonwithlabel.o(.text._ZNK8touchgfx9TypedText16getTextDirectionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getTextDirection() const &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::assertValid() const
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(touchgfx::Rect const&) const
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(touchgfx::Rect const&) const
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::getTextWidth() const
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(touchgfx::Rect const&) const
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(unsigned short const*, ...) const
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
</UL>

<P><STRONG><a name="[6f7]"></a>touchgfx::TypedText::getFont() const</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, buttonwithlabel.o(.text._ZNK8touchgfx9TypedText7getFontEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getFont() const &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::assertValid() const
</UL>
<BR>[Called By]<UL><LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::updateTextPosition()
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(touchgfx::Rect const&) const
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(touchgfx::Rect const&) const
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::getTextWidth() const
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(touchgfx::Rect const&) const
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(unsigned short const*, ...) const
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setBaselineY(short)
</UL>

<P><STRONG><a name="[557]"></a>touchgfx::TypedText::getText() const</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, buttonwithlabel.o(.text._ZNK8touchgfx9TypedText7getTextEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getText() const &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::assertValid() const
</UL>
<BR>[Called By]<UL><LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::updateTextPosition()
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::screenViewBase()
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(touchgfx::Rect const&) const
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(touchgfx::Rect const&) const
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::getTextWidth() const
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::getTextHeight()
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(touchgfx::Rect const&) const
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeight()
</UL>

<P><STRONG><a name="[4f3]"></a>touchgfx::colortype::operator unsigned int() const</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, stm32dma.o(.text._ZNK8touchgfx9colortypecvjEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::colortype::operator unsigned int() const
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::setupDataFill(touchgfx::BlitOp const&)
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::setupDataCopy(touchgfx::BlitOp const&)
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::setColor(touchgfx::colortype)
</UL>

<P><STRONG><a name="[349]"></a>std::bad_exception::what() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNKSt13bad_exception4whatEv))
<BR>[Address Reference Count : 1]<UL><LI> stdlib_exception.cpp.o(.rodata._ZTVSt13bad_exception)
</UL>
<P><STRONG><a name="[348]"></a>std::bad_exception::~bad_exception__deallocating()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt13bad_exceptionD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = std::bad_exception::~bad_exception__deallocating() &rArr; operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stdlib_exception.cpp.o(.rodata._ZTVSt13bad_exception)
</UL>
<P><STRONG><a name="[e0]"></a>std::bad_exception::~bad_exception()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> cxa_personality.cpp.o(.text.__cxa_call_unexpected)
</UL>
<P><STRONG><a name="[956]"></a>std::bad_exception::~bad_exception__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev), UNUSED)

<P><STRONG><a name="[957]"></a>std::bad_array_new_length::~bad_array_new_length()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev), UNUSED)

<P><STRONG><a name="[958]"></a>std::bad_array_new_length::~bad_array_new_length__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev), UNUSED)

<P><STRONG><a name="[959]"></a>std::bad_alloc::~bad_alloc()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev), UNUSED)

<P><STRONG><a name="[95a]"></a>std::bad_alloc::~bad_alloc__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev), UNUSED)

<P><STRONG><a name="[95b]"></a>std::exception::~exception()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev), UNUSED)

<P><STRONG><a name="[347]"></a>std::exception::~exception__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stdlib_exception.cpp.o(.text._ZNSt9exceptionD2Ev))
<BR>[Address Reference Count : 1]<UL><LI> stdlib_exception.cpp.o(.rodata._ZTVSt13bad_exception)
</UL>
<P><STRONG><a name="[95c]"></a>std::type_info::~type_info()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stdlib_typeinfo.cpp.o(.text._ZNSt9type_infoD2Ev), UNUSED)

<P><STRONG><a name="[66f]"></a>std::type_info::~type_info__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stdlib_typeinfo.cpp.o(.text._ZNSt9type_infoD2Ev), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__enum_type_info::~__enum_type_info()
</UL>

<P><STRONG><a name="[67b]"></a>std::__terminate(void (*)())</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = std::__terminate(void (*)()) &rArr;  __cxa_begin_catch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::call_terminate(bool, _Unwind_Control_Block*)
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::exception_cleanup_func(_Unwind_Reason_Code, _Unwind_Control_Block*)
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::failed_throw(__cxxabiv1::__cxa_exception*)
</UL>

<P><STRONG><a name="[805]"></a>std::__unexpected(void (*)())</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = std::__unexpected(void (*)()) &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
</UL>
<BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[80c]"></a>std::get_terminate()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cxa_handlers.cpp.o(.text._ZSt13get_terminatev))
<BR><BR>[Called By]<UL><LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[80d]"></a>std::get_unexpected()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cxa_handlers.cpp.o(.text._ZSt14get_unexpectedv))
<BR><BR>[Called By]<UL><LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[1]"></a>std::terminate()</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, cxa_handlers.cpp.o(.text._ZSt9terminatev))
<BR><BR>[Stack]<UL><LI>Max Depth = 1144 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
<LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals_fast
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__isOurExceptionClass(_Unwind_Control_Block const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::call_terminate(bool, _Unwind_Control_Block*)
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_cleanup
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup_impl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler)
</UL>
<P><STRONG><a name="[144]"></a>non-virtual thunk to screenPresenter::~screenPresenter__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, screenpresenter.o(.text._ZThn4_N15screenPresenterD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = non-virtual thunk to screenPresenter::~screenPresenter__deallocating() &rArr; screenPresenter::~screenPresenter__deallocating() &rArr; screenPresenter::~screenPresenter__sub_object() &rArr; touchgfx::Presenter::~Presenter__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter::~screenPresenter__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenpresenter.o(.rodata._ZTV15screenPresenter)
</UL>
<P><STRONG><a name="[143]"></a>non-virtual thunk to screenPresenter::~screenPresenter()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, screenpresenter.o(.text._ZThn4_N15screenPresenterD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = non-virtual thunk to screenPresenter::~screenPresenter() &rArr; screenPresenter::~screenPresenter__sub_object() &rArr; touchgfx::Presenter::~Presenter__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter::~screenPresenter__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screenpresenter.o(.rodata._ZTV15screenPresenter)
</UL>
<P><STRONG><a name="[14f]"></a>non-virtual thunk to Screen1Presenter::~Screen1Presenter__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, screen1presenter.o(.text._ZThn4_N16Screen1PresenterD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = non-virtual thunk to Screen1Presenter::~Screen1Presenter__deallocating() &rArr; Screen1Presenter::~Screen1Presenter__deallocating() &rArr; Screen1Presenter::~Screen1Presenter__sub_object() &rArr; touchgfx::Presenter::~Presenter__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::~Screen1Presenter__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.rodata._ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[14e]"></a>non-virtual thunk to Screen1Presenter::~Screen1Presenter()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, screen1presenter.o(.text._ZThn4_N16Screen1PresenterD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = non-virtual thunk to Screen1Presenter::~Screen1Presenter() &rArr; Screen1Presenter::~Screen1Presenter__sub_object() &rArr; touchgfx::Presenter::~Presenter__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::~Screen1Presenter__sub_object()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.rodata._ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[4ee]"></a>operator delete(void*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, new.cpp.o(.text._ZdlPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = operator delete(void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::~TouchGFXHAL__deallocating()
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::~STM32TouchController__deallocating()
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::~Screen1View__deallocating()
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Presenter::~Presenter__deallocating()
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::~Screen1Presenter__deallocating()
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::~ModelListener__deallocating()
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::~FrontendApplication__deallocating()
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::~STM32H7DMA__deallocating()
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::~TouchGFXGeneratedHAL__deallocating()
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang; &rang;, (unsigned short)1&rang;::~Partition__deallocating()
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPHeap::~MVPHeap__deallocating()
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::~FrontendHeapBase__deallocating()
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap__deallocating()
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationFontProvider::~ApplicationFontProvider__deallocating()
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenView::~screenView__deallocating()
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter::~screenPresenter__deallocating()
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::~GeneratedFont__deallocating()
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::~Callback__deallocating()
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::~WipeTransition__deallocating()
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;::FullSolidRect::~FullSolidRect__deallocating()
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::MVPApplication::~MVPApplication__deallocating()
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::~NoTransition__deallocating()
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::~Transition__deallocating()
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase__deallocating()
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;Screen1ViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__deallocating()
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;Screen1Presenter&rang;::~View__deallocating()
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphScroll&lang;(short)125&rang;::~GraphScroll__deallocating()
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase__deallocating()
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;screenViewBase, touchgfx::AbstractButton const&, void, void&rang;::~Callback__deallocating()
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;screenPresenter&rang;::~View__deallocating()
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenViewBase::~screenViewBase__deallocating()
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::~Application__deallocating()
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::~AbstractProgressIndicator__deallocating()
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::~Box__deallocating()
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::~LCD16bpp__deallocating()
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA__deallocating()
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA__deallocating()
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA__deallocating()
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA__deallocating()
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA__deallocating()
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA__deallocating()
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CacheableContainer::~CacheableContainer__deallocating()
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CacheableContainer::CachedImage::~CachedImage__deallocating()
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::~TypedText__deallocating()
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::~ButtonWithLabel__deallocating()
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::~LockFreeDMA_Queue__deallocating()
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::~Container__deallocating()
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CircleProgress::~CircleProgress__deallocating()
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DataGraphScroll::~DataGraphScroll__deallocating()
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementHistogram::~GraphElementHistogram__deallocating()
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::~GraphElementLine__deallocating()
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementDots::~GraphElementDots__deallocating()
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565Bitmap::~PainterRGB565Bitmap__deallocating()
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::~PainterRGB565__deallocating()
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::~Slider__deallocating()
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DragEvent::~DragEvent__deallocating()
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::~Screen__deallocating()
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GestureEvent::~GestureEvent__deallocating()
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickEvent::~ClickEvent__deallocating()
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__deallocating()
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea__deallocating()
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Circle::~Circle__deallocating()
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas__deallocating()
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Scanline::~Scanline__deallocating()
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::RenderingBuffer::~RenderingBuffer__deallocating()
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::~Outline__deallocating()
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::~Image__deallocating()
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__si_class_type_info::~__si_class_type_info__deallocating()
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__class_type_info::~__class_type_info__deallocating()
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::bad_exception::~bad_exception__deallocating()
</UL>

<P><STRONG><a name="[da]"></a>__aeabi_unwind_cpp_pr0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, Unwind-EHABI.cpp.o(.text.__aeabi_unwind_cpp_pr0))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_unwind_cpp_pr0 &rArr; (anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*) &rArr; __unw_get_proc_info
</UL>
<BR>[Calls]<UL><LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE23getInfoFromEHABISectionEjRKNS_18UnwindInfoSectionsE)
</UL>
<P><STRONG><a name="[db]"></a>__aeabi_unwind_cpp_pr1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, Unwind-EHABI.cpp.o(.text.__aeabi_unwind_cpp_pr1))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_unwind_cpp_pr1 &rArr; (anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*) &rArr; __unw_get_proc_info
</UL>
<BR>[Calls]<UL><LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE23getInfoFromEHABISectionEjRKNS_18UnwindInfoSectionsE)
</UL>
<P><STRONG><a name="[dc]"></a>__aeabi_unwind_cpp_pr2</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, Unwind-EHABI.cpp.o(.text.__aeabi_unwind_cpp_pr2))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_unwind_cpp_pr2 &rArr; (anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*) &rArr; __unw_get_proc_info
</UL>
<BR>[Calls]<UL><LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> libunwind.cpp.o(.text._ZN9libunwind12UnwindCursorINS_17LocalAddressSpaceENS_13Registers_armEE23getInfoFromEHABISectionEjRKNS_18UnwindInfoSectionsE)
</UL>
<P><STRONG><a name="[751]"></a>__clang_call_terminate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, new.cpp.o(.text.__clang_call_terminate))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136 + Unknown Stack Size
<LI>Call Chain = __clang_call_terminate &rArr; __cxa_begin_catch &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
</UL>
<BR>[Called By]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::~Canvas()
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
</UL>

<P><STRONG><a name="[808]"></a>__cxa_allocate_exception</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, cxa_exception.cpp.o(.text.__cxa_allocate_exception))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + In Cycle
<LI>Call Chain = __cxa_allocate_exception &rArr;  std::terminate() (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__aligned_malloc_with_fallback(unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[67a]"></a>__cxa_begin_catch</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, cxa_exception.cpp.o(.text.__cxa_begin_catch))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136 + Unknown Stack Size
<LI>Call Chain = __cxa_begin_catch &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>
<BR>[Called By]<UL><LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::call_terminate(bool, _Unwind_Control_Block*)
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::failed_throw(__cxxabiv1::__cxa_exception*)
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
</UL>

<P><STRONG><a name="[80b]"></a>__cxa_begin_cleanup</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, cxa_exception.cpp.o(.text.__cxa_begin_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = __cxa_begin_cleanup &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gxx_personality_v0
</UL>

<P><STRONG><a name="[809]"></a>__cxa_call_unexpected</STRONG> (Thumb, 380 bytes, Stack size 64 bytes, cxa_personality.cpp.o(.text.__cxa_call_unexpected))
<BR><BR>[Stack]<UL><LI>Max Depth = 1080 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = __cxa_call_unexpected &rArr;  __cxa_begin_catch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__clang_call_terminate
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::exception_spec_can_catch(long long, unsigned char const*, unsigned char, __cxxabiv1::__shim_type_info const*, void*, _Unwind_Control_Block*)
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned char)
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::call_terminate(bool, _Unwind_Control_Block*)
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals_fast
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::get_unexpected()
<LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::get_terminate()
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__unexpected(void (*)())
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__isOurExceptionClass(_Unwind_Control_Block const*)
</UL>
<BR>[Called By]<UL><LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_allocate_exception
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_decrement_exception_refcount
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_cleanup
</UL>

<P><STRONG><a name="[67d]"></a>__cxa_decrement_exception_refcount</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, cxa_exception.cpp.o(.text.__cxa_decrement_exception_refcount))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088 + Unknown Stack Size
<LI>Call Chain = __cxa_decrement_exception_refcount &rArr; __cxa_call_unexpected &rArr;  __cxa_begin_catch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__aligned_free_with_fallback(void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::exception_cleanup_func(_Unwind_Reason_Code, _Unwind_Control_Block*)
</UL>

<P><STRONG><a name="[804]"></a>__cxa_end_catch</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, cxa_exception.cpp.o(.text.__cxa_end_catch))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104 + Unknown Stack Size
<LI>Call Chain = __cxa_end_catch &rArr; __cxa_decrement_exception_refcount &rArr; __cxa_call_unexpected &rArr;  __cxa_begin_catch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_decrement_exception_refcount
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__aligned_free_with_fallback(void*)
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_DeleteException
<LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals_fast
</UL>
<BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
</UL>

<P><STRONG><a name="[80a]"></a>__cxa_get_globals</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cxa_exception_storage.cpp.o(.text.__cxa_get_globals))
<BR><BR>[Called By]<UL><LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_cleanup
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_cleanup_impl
</UL>

<P><STRONG><a name="[806]"></a>__cxa_get_globals_fast</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cxa_exception_storage.cpp.o(.text.__cxa_get_globals_fast))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_end_catch
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[55d]"></a>__cxa_guard_acquire</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, cxa_guard.cpp.o(.text.__cxa_guard_acquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __cxa_guard_acquire &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
</UL>
<BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::getInstance()
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_STSONG_TTF_40_4bpp()
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_STSONG_TTF_20_4bpp()
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_STSONG_TTF_10_4bpp()
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
</UL>

<P><STRONG><a name="[55e]"></a>__cxa_guard_release</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cxa_guard.cpp.o(.text.__cxa_guard_release))
<BR><BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::getInstance()
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_STSONG_TTF_40_4bpp()
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_STSONG_TTF_20_4bpp()
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_STSONG_TTF_10_4bpp()
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
</UL>

<P><STRONG><a name="[1e4]"></a>__cxa_pure_virtual</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, cxa_virtual.cpp.o(.text.__cxa_pure_virtual))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __cxa_pure_virtual &rArr; abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort_message
</UL>
<BR>[Address Reference Count : 16]<UL><LI> touchgfxconfiguration.o(.rodata._ZTVN8touchgfx15TouchControllerE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx15GenericCallbackIvvvEE)
<LI> frontendapplicationbase.o(.rodata._ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx15AbstractPainterE)
<LI> screen1viewbase.o(.rodata._ZTVN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEE)
<LI> abstractpartition.o(.rodata._ZTVN8touchgfx17AbstractPartitionE)
<LI> canvaswidget.o(.rodata._ZTVN8touchgfx12CanvasWidgetE)
<LI> constfont.o(.rodata._ZTVN8touchgfx9ConstFontE)
<LI> drawable.o(.rodata._ZTVN8touchgfx8DrawableE)
<LI> dma.o(.rodata._ZTVN8touchgfx13DMA_InterfaceE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.rodata._ZTVN8touchgfx22AbstractDataGraphWithYE)
<LI> abstractpainterrgb565.o(.rodata._ZTVN8touchgfx21AbstractPainterRGB565E)
<LI> hal.o(.rodata._ZTVN8touchgfx3HALE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx25AbstractGraphElementNoCWRE)
<LI> graphelements.o(.rodata._ZTVN8touchgfx20AbstractGraphElementE)
</UL>
<P><STRONG><a name="[80f]"></a>__cxa_rethrow</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, cxa_exception.cpp.o(.text.__cxa_rethrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 1008 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = __cxa_rethrow &rArr;  __cxa_begin_catch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_RaiseException
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
</UL>
<BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[80e]"></a>__cxa_throw</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, cxa_exception.cpp.o(.text.__cxa_throw))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016 + Unknown Stack Size
<LI>Call Chain = __cxa_throw &rArr; _Unwind_RaiseException &rArr; unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_RaiseException
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::failed_throw(__cxxabiv1::__cxa_exception*)
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::get_unexpected()
<LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::get_terminate()
</UL>
<BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[7ea]"></a>__dynamic_cast</STRONG> (Thumb, 168 bytes, Stack size 88 bytes, private_typeinfo.cpp.o(.text.__dynamic_cast))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = __dynamic_cast &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__class_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const
</UL>

<P><STRONG><a name="[811]"></a>__gnu_unwind_frame</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, Unwind-EHABI.cpp.o(.text.__gnu_unwind_frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __gnu_unwind_frame
</UL>
<BR>[Calls]<UL><LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_step
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gxx_personality_v0
</UL>

<P><STRONG><a name="[e2]"></a>__gxx_personality_v0</STRONG> (Thumb, 280 bytes, Stack size 64 bytes, cxa_personality.cpp.o(.text.__gxx_personality_v0))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216 + Unknown Stack Size
<LI>Call Chain = __gxx_personality_v0 &rArr; __cxa_begin_cleanup &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gnu_unwind_frame
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Get
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::call_terminate(bool, _Unwind_Control_Block*)
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::set_registers(_Unwind_Control_Block*, _Unwind_Context*, __cxxabiv1::(anonymous namespace)::scan_results const&)
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*)
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_cleanup
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__isOurExceptionClass(_Unwind_Control_Block const*)
</UL>
<BR>[Address Reference Count : 21]<UL><LI> abstractprogressindicator.o(.ARM.extab.text._ZN8touchgfx25AbstractProgressIndicatorC2Ev)
<LI> screen.o(.ARM.extab.text._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE)
<LI> screen.o(.ARM.extab.text._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE)
<LI> screen.o(.ARM.extab.text._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE)
<LI> graphelements.o(.ARM.extab.text._ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE)
<LI> graphelements.o(.ARM.extab.text._ZNK8touchgfx16GraphElementDots16drawCanvasWidgetERKNS_4RectE)
<LI> canvas.o(.ARM.extab.text._ZN8touchgfx6CanvasC2EPKNS_12CanvasWidgetERKNS_4RectE)
<LI> canvas.o(.ARM.extab.text._ZN8touchgfx6CanvasD2Ev)
<LI> circle.o(.ARM.extab.text._ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE)
<LI> gestures.o(.ARM.extab.text._ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt)
<LI> slider.o(.ARM.extab.text._ZN8touchgfx6SliderC2Ev)
<LI> gestures.o(.ARM.extab.text._ZN8touchgfx8Gestures17registerDragEventEtttt)
<LI> textarea.o(.ARM.extab.text._ZN8touchgfx8TextArea12setBaselineYEs)
<LI> canvas.o(.ARM.extab.text._ZN8touchgfx10RasterizerC2Ev)
<LI> cxa_handlers.cpp.o(.ARM.extab.text._ZSt9terminatev)
<LI> cxa_handlers.cpp.o(.ARM.extab.text._ZSt11__terminatePFvvE)
<LI> cxa_exception.cpp.o(.ARM.extab.text.__cxa_begin_cleanup)
<LI> cxa_personality.cpp.o(.ARM.extab.text.__cxa_call_unexpected)
<LI> cxa_exception.cpp.o(.ARM.extab.text.__cxa_allocate_exception)
<LI> cxa_exception.cpp.o(.ARM.extab.text.__cxa_begin_catch)
<LI> cxa_exception.cpp.o(.ARM.extab.text.__cxa_decrement_exception_refcount)
</UL>
<P><STRONG><a name="[667]"></a>__unw_get_fpreg</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, libunwind.cpp.o(.text.__unw_get_fpreg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __unw_get_fpreg
</UL>
<BR>[Called By]<UL><LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Get
</UL>

<P><STRONG><a name="[95d]"></a>unw_get_fpreg</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, libunwind.cpp.o(.text.__unw_get_fpreg), UNUSED)

<P><STRONG><a name="[65d]"></a>__unw_get_proc_info</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, libunwind.cpp.o(.text.__unw_get_proc_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __unw_get_proc_info
</UL>
<BR>[Called By]<UL><LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_GetRegionStart
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_GetLanguageSpecificData
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_RaiseException
</UL>

<P><STRONG><a name="[95e]"></a>unw_get_proc_info</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, libunwind.cpp.o(.text.__unw_get_proc_info), UNUSED)

<P><STRONG><a name="[665]"></a>__unw_get_reg</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, libunwind.cpp.o(.text.__unw_get_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __unw_get_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Pop
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Interpret
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Get
</UL>

<P><STRONG><a name="[95f]"></a>unw_get_reg</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, libunwind.cpp.o(.text.__unw_get_reg), UNUSED)

<P><STRONG><a name="[661]"></a>__unw_init_local</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, libunwind.cpp.o(.text.__unw_init_local))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_RaiseException
</UL>

<P><STRONG><a name="[960]"></a>unw_init_local</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, libunwind.cpp.o(.text.__unw_init_local), UNUSED)

<P><STRONG><a name="[66d]"></a>__unw_resume</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, libunwind.cpp.o(.text.__unw_resume))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __unw_resume
</UL>
<BR>[Called By]<UL><LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)
</UL>

<P><STRONG><a name="[961]"></a>unw_resume</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, libunwind.cpp.o(.text.__unw_resume), UNUSED)

<P><STRONG><a name="[666]"></a>__unw_save_vfp_as_X</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, libunwind.cpp.o(.text.__unw_save_vfp_as_X))
<BR><BR>[Called By]<UL><LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Set
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Get
</UL>

<P><STRONG><a name="[962]"></a>unw_save_vfp_as_X</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, libunwind.cpp.o(.text.__unw_save_vfp_as_X), UNUSED)

<P><STRONG><a name="[66c]"></a>__unw_set_fpreg</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, libunwind.cpp.o(.text.__unw_set_fpreg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __unw_set_fpreg
</UL>
<BR>[Called By]<UL><LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Set
</UL>

<P><STRONG><a name="[963]"></a>unw_set_fpreg</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, libunwind.cpp.o(.text.__unw_set_fpreg), UNUSED)

<P><STRONG><a name="[669]"></a>__unw_set_reg</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, libunwind.cpp.o(.text.__unw_set_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __unw_set_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Pop
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Interpret
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Set
</UL>

<P><STRONG><a name="[964]"></a>unw_set_reg</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, libunwind.cpp.o(.text.__unw_set_reg), UNUSED)

<P><STRONG><a name="[686]"></a>__unw_step</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, libunwind.cpp.o(.text.__unw_step))
<BR><BR>[Called By]<UL><LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gnu_unwind_frame
</UL>

<P><STRONG><a name="[965]"></a>unw_step</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, libunwind.cpp.o(.text.__unw_step), UNUSED)

<P><STRONG><a name="[803]"></a>abort_message</STRONG> (Thumb, 6 bytes, Stack size 8 bytes, abort_message.cpp.o(.text.abort_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = abort_message &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_pure_virtual
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__unexpected(void (*)())
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
</UL>

<P><STRONG><a name="[7e0]"></a>decode_eht_entry</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, Unwind-EHABI.cpp.o(.text.decode_eht_entry))
<BR><BR>[Called By]<UL><LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::stepWithEHABI()
</UL>

<P><STRONG><a name="[353]"></a>_fp_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[966]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[967]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[365]"></a>SCB_EnableDCache</STRONG> (Thumb, 130 bytes, Stack size 12 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SCB_EnableDCache
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[364]"></a>SCB_EnableICache</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3af]"></a>NVIC_DecodePriority</STRONG> (Thumb, 120 bytes, Stack size 36 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_GetPriority
</UL>

<P><STRONG><a name="[3a4]"></a>NVIC_EncodePriority</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, stm32h7xx_hal_cortex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NVIC_EncodePriority
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[3ab]"></a>SysTick_Config</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32h7xx_hal_cortex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[3b5]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_ClearPendingIRQ
</UL>

<P><STRONG><a name="[3a7]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
</UL>

<P><STRONG><a name="[3a6]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, stm32h7xx_hal_cortex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>

<P><STRONG><a name="[3b7]"></a>__NVIC_GetActive</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_GetActive
</UL>

<P><STRONG><a name="[3b3]"></a>__NVIC_GetPendingIRQ</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_GetPendingIRQ
</UL>

<P><STRONG><a name="[3ae]"></a>__NVIC_GetPriority</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_GetPriority
</UL>

<P><STRONG><a name="[3a3]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_GetPriorityGrouping
</UL>

<P><STRONG><a name="[3b1]"></a>__NVIC_SetPendingIRQ</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPendingIRQ
</UL>

<P><STRONG><a name="[3a5]"></a>__NVIC_SetPriority</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>

<P><STRONG><a name="[3a2]"></a>__NVIC_SetPriorityGrouping</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32h7xx_hal_cortex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>

<P><STRONG><a name="[3a9]"></a>__NVIC_SystemReset</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SystemReset
</UL>

<P><STRONG><a name="[3c0]"></a>CRC_Handle_16</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, stm32h7xx_hal_crc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Calculate
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Accumulate
</UL>

<P><STRONG><a name="[3bf]"></a>CRC_Handle_8</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, stm32h7xx_hal_crc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Calculate
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Accumulate
</UL>

<P><STRONG><a name="[3cc]"></a>RCCEx_PLL2_Config</STRONG> (Thumb, 442 bytes, Stack size 32 bytes, stm32h7xx_hal_rcc_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[3cd]"></a>RCCEx_PLL3_Config</STRONG> (Thumb, 442 bytes, Stack size 32 bytes, stm32h7xx_hal_rcc_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[3e2]"></a>DMA_CalcBaseAndBitshift</STRONG> (Thumb, 460 bytes, Stack size 12 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_DeInit
</UL>

<P><STRONG><a name="[3e3]"></a>DMA_CalcDMAMUXChannelBaseAndMask</STRONG> (Thumb, 382 bytes, Stack size 16 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_DeInit
</UL>

<P><STRONG><a name="[3e4]"></a>DMA_CalcDMAMUXRequestGenBaseAndMask</STRONG> (Thumb, 302 bytes, Stack size 12 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_DeInit
</UL>

<P><STRONG><a name="[3e1]"></a>DMA_CheckFifoParam</STRONG> (Thumb, 230 bytes, Stack size 20 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[3e7]"></a>DMA_SetConfig</STRONG> (Thumb, 1312 bytes, Stack size 36 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start
</UL>

<P><STRONG><a name="[404]"></a>DMA2D_SetConfig</STRONG> (Thumb, 348 bytes, Stack size 36 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Start_IT
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Start
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_BlendingStart_IT
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_BlendingStart
</UL>

<P><STRONG><a name="[411]"></a>LTDC_SetConfig</STRONG> (Thumb, 636 bytes, Stack size 24 bytes, stm32h7xx_hal_ltdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetWindowSize_NoReload
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetWindowSize
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetWindowPosition_NoReload
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetWindowPosition
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetPixelFormat_NoReload
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetPixelFormat
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetAlpha_NoReload
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetAlpha
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetAddress_NoReload
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetAddress
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer_NoReload
</UL>

<P><STRONG><a name="[a0]"></a>TIM_DMADelayPulseCplt</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_DMADelayPulseCplt &rArr; HAL_TIM_PWM_PulseFinishedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_tim.o(.text)
</UL>
<P><STRONG><a name="[9d]"></a>TIM_DMAPeriodElapsedCplt</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIM_DMAPeriodElapsedCplt &rArr; HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_tim.o(.text)
</UL>
<P><STRONG><a name="[9e]"></a>TIM_DMAPeriodElapsedHalfCplt</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_DMAPeriodElapsedHalfCplt &rArr; HAL_TIM_PeriodElapsedHalfCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_tim.o(.text)
</UL>
<P><STRONG><a name="[a6]"></a>TIM_DMATriggerCplt</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_DMATriggerCplt &rArr; HAL_TIM_TriggerCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_tim.o(.text)
</UL>
<P><STRONG><a name="[a7]"></a>TIM_DMATriggerHalfCplt</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, stm32h7xx_hal_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_DMATriggerHalfCplt &rArr; HAL_TIM_TriggerHalfCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_tim.o(.text)
</UL>
<P><STRONG><a name="[479]"></a>TIM_ITRx_SetConfig</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[461]"></a>TIM_OC1_SetConfig</STRONG> (Thumb, 336 bytes, Stack size 20 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OnePulse_ConfigChannel
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
</UL>

<P><STRONG><a name="[463]"></a>TIM_OC3_SetConfig</STRONG> (Thumb, 362 bytes, Stack size 20 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
</UL>

<P><STRONG><a name="[464]"></a>TIM_OC4_SetConfig</STRONG> (Thumb, 212 bytes, Stack size 20 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
</UL>

<P><STRONG><a name="[465]"></a>TIM_OC5_SetConfig</STRONG> (Thumb, 202 bytes, Stack size 20 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
</UL>

<P><STRONG><a name="[466]"></a>TIM_OC6_SetConfig</STRONG> (Thumb, 204 bytes, Stack size 20 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_ConfigChannel
</UL>

<P><STRONG><a name="[47c]"></a>TIM_SlaveTimer_SetConfig</STRONG> (Thumb, 450 bytes, Stack size 48 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETR_SetConfig
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_ConfigInputStage
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_SlaveConfigSynchro_IT
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_SlaveConfigSynchro
</UL>

<P><STRONG><a name="[478]"></a>TIM_TI1_ConfigInputStage</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SlaveTimer_SetConfig
</UL>

<P><STRONG><a name="[47a]"></a>TIM_TI2_ConfigInputStage</STRONG> (Thumb, 82 bytes, Stack size 20 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SlaveTimer_SetConfig
</UL>

<P><STRONG><a name="[469]"></a>TIM_TI2_SetConfig</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OnePulse_ConfigChannel
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_ConfigChannel
</UL>

<P><STRONG><a name="[46a]"></a>TIM_TI3_SetConfig</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_ConfigChannel
</UL>

<P><STRONG><a name="[46b]"></a>TIM_TI4_SetConfig</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, stm32h7xx_hal_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_ConfigChannel
</UL>

<P><STRONG><a name="[489]"></a>TIM_CCxNChannelCmd</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32h7xx_hal_tim_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_PWMN_Stop_IT
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_PWMN_Stop_DMA
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_PWMN_Stop
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_PWMN_Start_IT
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_PWMN_Start_DMA
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_PWMN_Start
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_OnePulseN_Stop_IT
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_OnePulseN_Stop
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_OnePulseN_Start_IT
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_OnePulseN_Start
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_OCN_Stop_IT
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_OCN_Stop_DMA
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_OCN_Stop
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_OCN_Start_IT
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_OCN_Start_DMA
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_OCN_Start
</UL>

<P><STRONG><a name="[a8]"></a>TIM_DMADelayPulseNCplt</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, stm32h7xx_hal_tim_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_DMADelayPulseNCplt &rArr; HAL_TIM_PWM_PulseFinishedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_tim_ex.o(.text)
</UL>
<P><STRONG><a name="[a9]"></a>TIM_DMAErrorCCxN</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, stm32h7xx_hal_tim_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_DMAErrorCCxN &rArr; HAL_TIM_ErrorCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_tim_ex.o(.text)
</UL>
<P><STRONG><a name="[bb]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_DMAAbortOnError &rArr; HAL_UART_ErrorCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_uart.o(.text)
</UL>
<P><STRONG><a name="[b4]"></a>UART_DMAError</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART_DMAError &rArr; HAL_UART_ErrorCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTxTransfer
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_uart.o(.text)
</UL>
<P><STRONG><a name="[b5]"></a>UART_DMAReceiveCplt</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART_DMAReceiveCplt &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_uart.o(.text)
</UL>
<P><STRONG><a name="[b8]"></a>UART_DMARxAbortCallback</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_DMARxAbortCallback &rArr; HAL_UART_AbortCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_AbortCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_uart.o(.text)
</UL>
<P><STRONG><a name="[b6]"></a>UART_DMARxHalfCplt</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_DMARxHalfCplt &rArr; HAL_UART_RxHalfCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_uart.o(.text)
</UL>
<P><STRONG><a name="[ba]"></a>UART_DMARxOnlyAbortCallback</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_DMARxOnlyAbortCallback &rArr; HAL_UART_AbortReceiveCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_AbortReceiveCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_uart.o(.text)
</UL>
<P><STRONG><a name="[b2]"></a>UART_DMATransmitCplt</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_DMATransmitCplt &rArr; HAL_UART_TxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_uart.o(.text)
</UL>
<P><STRONG><a name="[b7]"></a>UART_DMATxAbortCallback</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_DMATxAbortCallback &rArr; HAL_UART_AbortCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_AbortCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_uart.o(.text)
</UL>
<P><STRONG><a name="[b3]"></a>UART_DMATxHalfCplt</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_DMATxHalfCplt &rArr; HAL_UART_TxHalfCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_uart.o(.text)
</UL>
<P><STRONG><a name="[b9]"></a>UART_DMATxOnlyAbortCallback</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_DMATxOnlyAbortCallback &rArr; HAL_UART_AbortTransmitCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_AbortTransmitCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_uart.o(.text)
</UL>
<P><STRONG><a name="[4a9]"></a>UART_EndRxTransfer</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UART_EndRxTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DMAStop
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAError
</UL>

<P><STRONG><a name="[4b9]"></a>UART_EndTransmit_IT</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_EndTransmit_IT &rArr; HAL_UART_TxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[4a8]"></a>UART_EndTxTransfer</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UART_EndTxTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DMAStop
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAError
</UL>

<P><STRONG><a name="[b0]"></a>UART_RxISR_16BIT</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART_RxISR_16BIT &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_uart.o(.text)
</UL>
<P><STRONG><a name="[ae]"></a>UART_RxISR_16BIT_FIFOEN</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART_RxISR_16BIT_FIFOEN &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_uart.o(.text)
</UL>
<P><STRONG><a name="[b1]"></a>UART_RxISR_8BIT</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART_RxISR_8BIT &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_uart.o(.text)
</UL>
<P><STRONG><a name="[af]"></a>UART_RxISR_8BIT_FIFOEN</STRONG> (Thumb, 268 bytes, Stack size 24 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART_RxISR_8BIT_FIFOEN &rArr; HAL_UART_RxCpltCallback &rArr; HAL_UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_uart.o(.text)
</UL>
<P><STRONG><a name="[ac]"></a>UART_TxISR_16BIT</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_TxISR_16BIT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_uart.o(.text)
</UL>
<P><STRONG><a name="[aa]"></a>UART_TxISR_16BIT_FIFOEN</STRONG> (Thumb, 156 bytes, Stack size 12 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART_TxISR_16BIT_FIFOEN
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_uart.o(.text)
</UL>
<P><STRONG><a name="[ad]"></a>UART_TxISR_8BIT</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UART_TxISR_8BIT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_uart.o(.text)
</UL>
<P><STRONG><a name="[ab]"></a>UART_TxISR_8BIT_FIFOEN</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, stm32h7xx_hal_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_TxISR_8BIT_FIFOEN
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_uart.o(.text)
</UL>
<P><STRONG><a name="[4c3]"></a>UARTEx_SetNbDataToProcess</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, stm32h7xx_hal_uart_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTEx_SetNbDataToProcess
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetTxFifoThreshold
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_SetRxFifoThreshold
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_EnableFifoMode
</UL>

<P><STRONG><a name="[4c1]"></a>UARTEx_Wakeup_AddressConfig</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, stm32h7xx_hal_uart_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_StopModeWakeUpSourceConfig
</UL>

<P><STRONG><a name="[34a]"></a>_GLOBAL__sub_I_TouchGFXConfiguration.cpp</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = _GLOBAL__sub_I_TouchGFXConfiguration.cpp &rArr; __cxx_global_var_init.4 &rArr; TouchGFXHAL::TouchGFXHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; TouchGFXGeneratedHAL::TouchGFXGeneratedHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; touchgfx::Gestures::Gestures__sub_object() &rArr; touchgfx::Gestures::DragState::DragState__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.4
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.3
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.2
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init.1
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.init_array)
</UL>
<P><STRONG><a name="[4c8]"></a>__cxx_global_var_init</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __cxx_global_var_init &rArr; __cxa_atexit &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::STM32TouchController__sub_object()
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_TouchGFXConfiguration.cpp
</UL>

<P><STRONG><a name="[4cb]"></a>__cxx_global_var_init.1</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __cxx_global_var_init.1 &rArr; __cxa_atexit &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::STM32H7DMA()
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_TouchGFXConfiguration.cpp
</UL>

<P><STRONG><a name="[4cd]"></a>__cxx_global_var_init.2</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, touchgfxconfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __cxx_global_var_init.2 &rArr; __cxa_atexit &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::LCD16bpp()
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_TouchGFXConfiguration.cpp
</UL>

<P><STRONG><a name="[4cf]"></a>__cxx_global_var_init.3</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, touchgfxconfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __cxx_global_var_init.3 &rArr; __cxa_atexit &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_TouchGFXConfiguration.cpp
</UL>

<P><STRONG><a name="[4d0]"></a>__cxx_global_var_init.4</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, touchgfxconfiguration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = __cxx_global_var_init.4 &rArr; TouchGFXHAL::TouchGFXHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; TouchGFXGeneratedHAL::TouchGFXGeneratedHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short) &rArr; touchgfx::Gestures::Gestures__sub_object() &rArr; touchgfx::Gestures::DragState::DragState__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::TouchGFXHAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_TouchGFXConfiguration.cpp
</UL>

<P><STRONG><a name="[4de]"></a>__NVIC_EnableIRQ(IRQn_Type)</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, touchgfxgeneratedhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::enableInterrupts()
</UL>

<P><STRONG><a name="[4df]"></a>__NVIC_DisableIRQ(IRQn_Type)</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, touchgfxgeneratedhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_DisableIRQ(IRQn_Type)
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::disableInterrupts()
</UL>

<P><STRONG><a name="[4dd]"></a>__NVIC_SetPriority(IRQn_Type, unsigned int)</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority(IRQn_Type, unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::configureInterrupts()
</UL>

<P><STRONG><a name="[4e0]"></a>SCB_CleanInvalidateDCache()</STRONG> (Thumb, 110 bytes, Stack size 12 bytes, touchgfxgeneratedhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SCB_CleanInvalidateDCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::FlushCache()
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer(touchgfx::Rect const&)
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::InvalidateCache()
</UL>

<P><STRONG><a name="[4ef]"></a>__NVIC_EnableIRQ(IRQn_Type)</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, stm32dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::initialize()
</UL>

<P><STRONG><a name="[4ec]"></a>__NVIC_DisableIRQ(IRQn_Type)</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, stm32dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_DisableIRQ(IRQn_Type)
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32H7DMA::~STM32H7DMA()
</UL>

<P><STRONG><a name="[c1]"></a>DMA2D_XferCpltCallback(__DMA2D_HandleTypeDef*)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, stm32dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA2D_XferCpltCallback(__DMA2D_HandleTypeDef*) &rArr; touchgfx::HAL::signalDMAInterrupt()
</UL>
<BR>[Calls]<UL><LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::signalDMAInterrupt()
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getInstance()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.text)
</UL>
<P><STRONG><a name="[522]"></a>touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, frontendapplicationbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::clearAllTimerWidgets()
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[524]"></a>touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, frontendapplicationbase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
</UL>
<BR>[Calls]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::bindTransition(touchgfx::Transition&)
</UL>
<BR>[Called By]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::WipeTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;screenPresenter* touchgfx::makeTransition&lang;screenView, screenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, Model*)
</UL>

<P><STRONG><a name="[34b]"></a>_GLOBAL__sub_I_typedtextdatabase.cpp</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, typedtextdatabase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = _GLOBAL__sub_I_typedtextdatabase.cpp &rArr; __cxx_global_var_init &rArr; getFont_STSONG_TTF_40_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*)
</UL>
<BR>[Calls]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxx_global_var_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> typedtextdatabase.o(.init_array)
</UL>
<P><STRONG><a name="[56f]"></a>__cxx_global_var_init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, typedtextdatabase.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = __cxx_global_var_init &rArr; getFont_STSONG_TTF_40_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(touchgfx::GlyphNode const*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char const* const*, touchgfx::KerningNode const*, unsigned short, unsigned short, unsigned short const*)
</UL>
<BR>[Calls]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_STSONG_TTF_40_4bpp()
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_STSONG_TTF_20_4bpp()
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_STSONG_TTF_10_4bpp()
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GLOBAL__sub_I_typedtextdatabase.cpp
</UL>

<P><STRONG><a name="[580]"></a>prvTestWaitCondition</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, event_groups.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
</UL>

<P><STRONG><a name="[5a9]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvCopyDataFromQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeekFromISR
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
</UL>

<P><STRONG><a name="[593]"></a>prvCopyDataToQueue</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[59e]"></a>prvGetDisinheritPriorityAfterTimeout</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvGetDisinheritPriorityAfterTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[58d]"></a>prvInitialiseMutex</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, queue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutexStatic
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateMutex
</UL>

<P><STRONG><a name="[58a]"></a>prvInitialiseNewQueue</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>
<BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[59c]"></a>prvIsQueueEmpty</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvIsQueueEmpty &rArr; vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
</UL>

<P><STRONG><a name="[596]"></a>prvIsQueueFull</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvIsQueueFull &rArr; vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[598]"></a>prvUnlockQueue</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, queue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueuePeek
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[5c1]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnUnorderedEventList
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelayUntil
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskNotifyTake
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskNotifyWait
</UL>

<P><STRONG><a name="[5b5]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 302 bytes, Stack size 16 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = prvAddNewTaskToReadyList &rArr; prvInitialiseTaskLists &rArr; vListInitialise
</UL>
<BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[5d2]"></a>prvCheckTasksWaitingTermination</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[5be]"></a>prvDeleteTCB</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[ca]"></a>prvIdleTask</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = prvIdleTask &rArr; prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(.text)
</UL>
<P><STRONG><a name="[5b4]"></a>prvInitialiseNewTask</STRONG> (Thumb, 310 bytes, Stack size 64 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + Unknown Stack Size
<LI>Call Chain = prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[5b9]"></a>prvInitialiseTaskLists</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = prvInitialiseTaskLists &rArr; vListInitialise
</UL>
<BR>[Calls]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[5d7]"></a>prvListTasksWithinSingleList</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskGetInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskGetSystemState
</UL>

<P><STRONG><a name="[5bf]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 72 bytes, Stack size 4 bytes, tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
</UL>

<P><STRONG><a name="[5dc]"></a>prvTaskCheckFreeStackSpace</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskGetInfo
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskGetStackHighWaterMark
</UL>

<P><STRONG><a name="[5cc]"></a>prvTaskIsTaskSuspended</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, tasks.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeFromISR
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
</UL>

<P><STRONG><a name="[5e4]"></a>prvCheckForValidListAndQueue</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTimer
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[5e7]"></a>prvGetNextExpireTime</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvGetNextExpireTime
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[5eb]"></a>prvInitialiseNewTimer</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, timers.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateStatic
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
</UL>

<P><STRONG><a name="[5f5]"></a>prvInsertTimerInActiveList</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>

<P><STRONG><a name="[5f4]"></a>prvProcessExpiredTimer</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = prvProcessExpiredTimer &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
</UL>
<BR>[Called By]<UL><LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[5e9]"></a>prvProcessReceivedCommands</STRONG> (Thumb, 438 bytes, Stack size 80 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[5e8]"></a>prvProcessTimerOrBlockTask</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = prvProcessTimerOrBlockTask &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[5f3]"></a>prvSampleTimeNow</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[5f7]"></a>prvSwitchTimerLists</STRONG> (Thumb, 218 bytes, Stack size 40 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[cb]"></a>prvTimerTask</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = prvTimerTask &rArr; prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvGetNextExpireTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(.text)
</UL>
<P><STRONG><a name="[5fa]"></a>SVC_Setup</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cmsis_os2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
</UL>

<P><STRONG><a name="[cc]"></a>TimerCallback</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, cmsis_os2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TimerCallback &rArr; pvTimerGetTimerID &rArr; vPortExitCritical
</UL>
<BR>[Calls]<UL><LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTimerGetTimerID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cmsis_os2.o(.text)
</UL>
<P><STRONG><a name="[62d]"></a>prvHeapInit</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, heap_4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[62e]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 198 bytes, Stack size 12 bytes, heap_4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[631]"></a>prvPortStartFirstTask</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, port.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[cd]"></a>prvTaskExitError</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvTaskExitError
</UL>
<BR>[Called By]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> port.o(.text)
</UL>
<P><STRONG><a name="[630]"></a>vPortEnableVFP</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, port.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[632]"></a>gt9147_io_init</STRONG> (Thumb, 172 bytes, Stack size 64 bytes, gt9147.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gt9147_io_init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt9147_init
</UL>

<P><STRONG><a name="[634]"></a>gt9147_update_cfg</STRONG> (Thumb, 200 bytes, Stack size 56 bytes, gt9147.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = gt9147_update_cfg &rArr; mcu_vi2c_transfer_reg &rArr; mcu_vi2c_wait_ack &rArr; mcu_vi2c_stop &rArr; mcu_vi2c_sda_output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_transfer_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt9147_init
</UL>

<P><STRONG><a name="[63a]"></a>mcu_vi2c_delay</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, vi2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = mcu_vi2c_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_writebyte
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_wait_ack
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_stop
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_start
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_readbyte
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_ack
</UL>

<P><STRONG><a name="[63d]"></a>mcu_vi2c_readsda</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, vi2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = mcu_vi2c_readsda &rArr; HAL_GPIO_ReadPin
</UL>
<BR>[Calls]<UL><LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_wait_ack
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_readbyte
</UL>

<P><STRONG><a name="[639]"></a>mcu_vi2c_scl</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, vi2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = mcu_vi2c_scl &rArr; HAL_GPIO_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_writebyte
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_wait_ack
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_stop
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_start
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_readbyte
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_ack
</UL>

<P><STRONG><a name="[638]"></a>mcu_vi2c_sda</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, vi2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = mcu_vi2c_sda &rArr; HAL_GPIO_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_writebyte
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_wait_ack
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_stop
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_start
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_vi2c_ack
</UL>

<P><STRONG><a name="[767]"></a>touchgfx::lessThan(touchgfx::Cell const*, touchgfx::Cell const*)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, outline.o(.text._ZN8touchgfxL8lessThanEPKNS_4CellES2_))
<BR><BR>[Called By]<UL><LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned int)
</UL>

<P><STRONG><a name="[679]"></a>__cxxabiv1::failed_throw(__cxxabiv1::__cxa_exception*)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, cxa_exception.cpp.o(.text._ZN10__cxxabiv1L12failed_throwEPNS_15__cxa_exceptionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = __cxxabiv1::failed_throw(__cxxabiv1::__cxa_exception*) &rArr;  __cxa_begin_catch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
</UL>
<BR>[Called By]<UL><LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_throw
</UL>

<P><STRONG><a name="[e1]"></a>__cxxabiv1::exception_cleanup_func(_Unwind_Reason_Code, _Unwind_Control_Block*)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cxa_exception.cpp.o(.text._ZN10__cxxabiv1L22exception_cleanup_funcE19_Unwind_Reason_CodeP21_Unwind_Control_Block))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120 + Unknown Stack Size
<LI>Call Chain = __cxxabiv1::exception_cleanup_func(_Unwind_Reason_Code, _Unwind_Control_Block*) &rArr; std::__terminate(void (*)()) &rArr;  __cxa_begin_catch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_decrement_exception_refcount
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cxa_exception.cpp.o(.text.__cxa_throw)
</UL>
<P><STRONG><a name="[34c]"></a>__cxa_end_cleanup_impl</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, cxa_exception.cpp.o(.text.__cxa_end_cleanup_impl), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = __cxa_end_cleanup_impl &rArr; std::terminate() &rArr;  __clang_call_terminate (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>

<P><STRONG><a name="[674]"></a>__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*)</STRONG> (Thumb, 920 bytes, Stack size 96 bytes, cxa_personality.cpp.o(.text._ZN10__cxxabiv1L11scan_eh_tabERNS_12_GLOBAL__N_112scan_resultsE14_Unwind_ActionbP21_Unwind_Control_BlockP15_Unwind_Context))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = __cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*) &rArr; _Unwind_VRS_Get &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Get
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_GetRegionStart
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_GetLanguageSpecificData
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::exception_spec_can_catch(long long, unsigned char const*, unsigned char, __cxxabiv1::__shim_type_info const*, void*, _Unwind_Control_Block*)
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned char)
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::call_terminate(bool, _Unwind_Control_Block*)
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gxx_personality_v0
</UL>

<P><STRONG><a name="[67c]"></a>__cxxabiv1::set_registers(_Unwind_Control_Block*, _Unwind_Context*, __cxxabiv1::(anonymous namespace)::scan_results const&)</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, cxa_personality.cpp.o(.text._ZN10__cxxabiv1L13set_registersEP21_Unwind_Control_BlockP15_Unwind_ContextRKNS_12_GLOBAL__N_112scan_resultsE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = __cxxabiv1::set_registers(_Unwind_Control_Block*, _Unwind_Context*, __cxxabiv1::(anonymous namespace)::scan_results const&) &rArr; _Unwind_VRS_Set &rArr; __unw_set_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Set
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_VRS_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gxx_personality_v0
</UL>

<P><STRONG><a name="[677]"></a>__cxxabiv1::call_terminate(bool, _Unwind_Control_Block*)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, cxa_personality.cpp.o(.text._ZN10__cxxabiv1L14call_terminateEbP21_Unwind_Control_Block))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = __cxxabiv1::call_terminate(bool, _Unwind_Control_Block*) &rArr;  __cxa_begin_catch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_begin_catch
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__terminate(void (*)())
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__gxx_personality_v0
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::exception_spec_can_catch(long long, unsigned char const*, unsigned char, __cxxabiv1::__shim_type_info const*, void*, _Unwind_Control_Block*)
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*)
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[676]"></a>__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned char)</STRONG> (Thumb, 298 bytes, Stack size 16 bytes, cxa_personality.cpp.o(.text._ZN10__cxxabiv1L18readEncodedPointerEPPKhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __cxxabiv1::readEncodedPointer(unsigned char const**, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*)
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[678]"></a>__cxxabiv1::exception_spec_can_catch(long long, unsigned char const*, unsigned char, __cxxabiv1::__shim_type_info const*, void*, _Unwind_Control_Block*)</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, cxa_personality.cpp.o(.text._ZN10__cxxabiv1L24exception_spec_can_catchExPKhhPKNS_16__shim_type_infoEPvP21_Unwind_Control_Block))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __cxxabiv1::exception_spec_can_catch(long long, unsigned char const*, unsigned char, __cxxabiv1::__shim_type_info const*, void*, _Unwind_Control_Block*) &rArr; __cxxabiv1::call_terminate(bool, _Unwind_Control_Block*) &rArr;  __cxa_begin_catch (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::call_terminate(bool, _Unwind_Control_Block*)
</UL>
<BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Control_Block*, _Unwind_Context*)
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_call_unexpected
</UL>

<P><STRONG><a name="[662]"></a>unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool)</STRONG> (Thumb, 164 bytes, Stack size 80 bytes, Unwind-EHABI.cpp.o(.text._ZL13unwind_phase2P13unw_context_tP12unw_cursor_tP21_Unwind_Control_Blockb))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = unwind_phase2(unw_context_t*, unw_cursor_t*, _Unwind_Control_Block*, bool) &rArr; __unw_init_local &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::setInfoBasedOnIPRegister(bool) &rArr; libunwind::UnwindCursor&lang;libunwind::LocalAddressSpace, libunwind::Registers_arm&rang;::getInfoFromEHABISection(unsigned int, libunwind::UnwindInfoSections const&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_set_reg
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_resume
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_init_local
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_reg
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_proc_info
</UL>
<BR>[Called By]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_Resume
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unwind_RaiseException
</UL>

<P><STRONG><a name="[685]"></a>(anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*)</STRONG> (Thumb, 60 bytes, Stack size 56 bytes, Unwind-EHABI.cpp.o(.text._ZN12_GLOBAL__N_114unwindOneFrameEjP21_Unwind_Control_BlockP15_Unwind_Context))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = (anonymous namespace)::unwindOneFrame(unsigned int, _Unwind_Control_Block*, _Unwind_Context*) &rArr; __unw_get_proc_info
</UL>
<BR>[Calls]<UL><LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_step
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__unw_get_proc_info
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_unwind_cpp_pr0
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_unwind_cpp_pr1
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_unwind_cpp_pr2
</UL>

<P><STRONG><a name="[671]"></a>(anonymous namespace)::fallback_free(void*)</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, fallback_malloc.cpp.o(.text._ZN12_GLOBAL__N_113fallback_freeEPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = (anonymous namespace)::fallback_free(void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__aligned_free_with_fallback(void*)
</UL>

<P><STRONG><a name="[673]"></a>(anonymous namespace)::fallback_malloc(unsigned int)</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, fallback_malloc.cpp.o(.text._ZN12_GLOBAL__N_115fallback_mallocEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = (anonymous namespace)::fallback_malloc(unsigned int)
</UL>
<BR>[Called By]<UL><LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxxabiv1::__aligned_malloc_with_fallback(unsigned int)
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
