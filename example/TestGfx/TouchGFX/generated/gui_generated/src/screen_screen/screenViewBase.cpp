/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_screen/screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include "BitmapDatabase.hpp"

screenViewBase::screenViewBase() :
    buttonCallback(this, &screenViewBase::buttonCallbackHandler)
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    box1.setPosition(0, 0, 480, 272);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    textArea1.setXY(425, 79);
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));

    textArea3.setXY(147, 79);
    textArea3.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID4));

    TemNumText.setXY(429, 147);
    TemNumText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    TemNumText.setLinespacing(0);
    Unicode::snprintf(TemNumTextBuffer, TEMNUMTEXT_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID10).getText());
    TemNumText.setWildcard(TemNumTextBuffer);
    TemNumText.resizeToCurrentText();
    TemNumText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID9));

    HeartRateText.setXY(167, 147);
    HeartRateText.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    HeartRateText.setLinespacing(0);
    Unicode::snprintf(HeartRateTextBuffer, HEARTRATETEXT_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID11).getText());
    HeartRateText.setWildcard(HeartRateTextBuffer);
    HeartRateText.resizeToCurrentText();
    HeartRateText.setTypedText(touchgfx::TypedText(T_SINGLEUSEID8));

    buttonWithLabel1.setXY(155, 212);
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonWithLabel1.setLabelText(touchgfx::TypedText(T_SINGLEUSEID13));
    buttonWithLabel1.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel1.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabel1.setAction(buttonCallback);

    container1.setPosition(0, 0, 480, 272);

    TemNum.setXY(297, 78);
    TemNum.setProgressIndicatorPosition(0, 0, 104, 104);
    TemNum.setRange(0, 100);
    TemNum.setCenter(52, 52);
    TemNum.setRadius(50);
    TemNum.setLineWidth(0);
    TemNum.setStartEndAngle(0, 360);
    TemNum.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_CIRCLE_INDICATOR_BG_FULL_ID));
    TemNumPainter.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_FILL_MEDIUM_CIRCLE_INDICATOR_FILL_LINE_FULL_ID));
    TemNum.setPainter(TemNumPainter);
    TemNum.setValue(60);
    container1.add(TemNum);

    HeartRateNum.setXY(19, 78);
    HeartRateNum.setProgressIndicatorPosition(0, 0, 104, 104);
    HeartRateNum.setRange(0, 100);
    HeartRateNum.setCenter(52, 52);
    HeartRateNum.setRadius(50);
    HeartRateNum.setLineWidth(0);
    HeartRateNum.setStartEndAngle(0, 360);
    HeartRateNum.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_CIRCLE_INDICATOR_BG_FULL_ID));
    HeartRateNumPainter.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_FILL_MEDIUM_CIRCLE_INDICATOR_FILL_LINE_FULL_ID));
    HeartRateNum.setPainter(HeartRateNumPainter);
    HeartRateNum.setValue(60);
    container1.add(HeartRateNum);

    add(__background);
    add(box1);
    add(textArea1);
    add(textArea3);
    add(TemNumText);
    add(HeartRateText);
    add(buttonWithLabel1);
    add(container1);
}

void screenViewBase::setupScreen()
{

}

void screenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel1)
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Screen1
        //Go to Screen1 with screen transition towards East
        application().gotoScreen1ScreenWipeTransitionEast();
    }
}
